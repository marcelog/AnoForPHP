diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..d686c11
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,32 @@
+*.o
+*.a
+*.lo
+*.la
+*.so
+.cproject
+.gdbinit
+.project
+Makefile
+Makefile.fragments
+Makefile.objects
+TSRM/tsrm_config.h
+Zend/zend_config.h
+config.cache
+config.log
+config.nice
+config.status
+ext/date/lib/timelib_config.h
+libtool
+main/build-defs.h
+main/internal_functions.c
+main/internal_functions_cli.c
+main/php_config.h
+php5.spec
+sapi/cgi/php-cgi
+sapi/cli/php
+sapi/cli/php.1
+scripts/man1/php-config.1
+scripts/man1/phpize.1
+scripts/php-config
+scripts/phpize
+
diff --git a/Zend/zend.h b/Zend/zend.h
index 3427b31..2656c03 100644
--- a/Zend/zend.h
+++ b/Zend/zend.h
@@ -285,6 +285,7 @@ void zend_error_noreturn(int type, const char *format, ...) __attribute__ ((nore
  */
 typedef struct _zval_struct zval;
 typedef struct _zend_class_entry zend_class_entry;
+typedef struct _zend_annotation_entry zend_annotation_entry;
 
 typedef struct _zend_guard {
 	zend_bool in_get;
@@ -415,6 +416,12 @@ struct _zend_unserialize_data;
 typedef struct _zend_serialize_data zend_serialize_data;
 typedef struct _zend_unserialize_data zend_unserialize_data;
 
+struct _zend_annotation_entry {
+	char *name;
+	zend_uint name_length;
+	HashTable *attributes;
+};
+
 struct _zend_class_entry {
 	char type;
 	char *name;
@@ -430,6 +437,7 @@ struct _zend_class_entry {
 	HashTable default_static_members;
 	HashTable *static_members;
 	HashTable constants_table;
+	HashTable *annotations;
 	const struct _zend_function_entry *builtin_functions;
 
 	union _zend_function *constructor;
diff --git a/Zend/zend_API.c b/Zend/zend_API.c
index ea00d44..e6e9912 100644
--- a/Zend/zend_API.c
+++ b/Zend/zend_API.c
@@ -3134,6 +3134,9 @@ ZEND_API int zend_declare_property_ex(zend_class_entry *ce, const char *name, in
 	property_info.doc_comment_len = doc_comment_len;
 
 	property_info.ce = ce;
+	property_info.annotations = CG(annotations);
+	CG(annotations) = emalloc(sizeof(HashTable));
+	zend_hash_init(CG(annotations), 0, NULL, (dtor_func_t) free_estring, 0);
 
 	zend_hash_update(&ce->properties_info, name, name_length + 1, &property_info, sizeof(zend_property_info), NULL);
 
diff --git a/Zend/zend_compile.c b/Zend/zend_compile.c
index af450b8..b43b2fa 100644
--- a/Zend/zend_compile.c
+++ b/Zend/zend_compile.c
@@ -182,6 +182,10 @@ void init_compiler(TSRMLS_D) /* {{{ */
 	zend_init_compiler_data_structures(TSRMLS_C);
 	zend_init_rsrc_list(TSRMLS_C);
 	zend_hash_init(&CG(filenames_table), 5, NULL, (dtor_func_t) free_estring, 0);
+	CG(annotations) = emalloc(sizeof(HashTable));
+	CG(annotations_attributes) = emalloc(sizeof(HashTable));
+	zend_hash_init(CG(annotations), 0, NULL, (dtor_func_t) NULL, 0);
+	zend_hash_init(CG(annotations_attributes), 0, NULL, (dtor_func_t) free_estring, 0);
 	zend_llist_init(&CG(open_files), sizeof(zend_file_handle), (void (*)(void *)) file_handle_dtor, 0);
 	CG(unclean_shutdown) = 0;
 }
@@ -1227,6 +1231,9 @@ void zend_do_begin_function_declaration(znode *function_token, znode *function_n
 	op_array.line_start = zend_get_compiled_lineno(TSRMLS_C);
 
 	if (is_method) {
+		op_array.annotations = CG(annotations);
+		CG(annotations) = emalloc(sizeof(HashTable));
+		zend_hash_init(CG(annotations), 0, NULL, (dtor_func_t) free_estring, 0);
 		if (zend_hash_add(&CG(active_class_entry)->function_table, lcname, name_len+1, &op_array, sizeof(zend_op_array), (void **) &CG(active_op_array)) == FAILURE) {
 			zend_error(E_COMPILE_ERROR, "Cannot redeclare %s::%s()", CG(active_class_entry)->name, name);
 		}
@@ -1516,6 +1523,9 @@ void zend_do_receive_arg(zend_uchar op, const znode *var, const znode *offset, c
 	cur_arg_info->pass_by_reference = pass_by_reference;
 	cur_arg_info->class_name = NULL;
 	cur_arg_info->class_name_len = 0;
+	cur_arg_info->annotations = CG(annotations);
+	CG(annotations) = emalloc(sizeof(HashTable));
+	zend_hash_init(CG(annotations), 0, NULL, (dtor_func_t) free_estring, 0);
 
 	if (class_type->op_type != IS_UNUSED) {
 		cur_arg_info->allow_null = 0;
@@ -3368,6 +3378,40 @@ void zend_do_default_before_statement(const znode *case_list, znode *default_tok
 }
 /* }}} */
 
+void zend_do_add_annotation_arg(znode *arg_name, znode *arg_value TSRMLS_DC) /* {{{ */
+{
+	char *name = arg_name->u.constant.value.str.val;
+	int name_len = arg_name->u.constant.value.str.len + 1;
+	char *value;
+	int value_len;
+	zval *temp;
+
+	if (arg_value == NULL) {
+		value = NULL;
+		value_len = 0;
+		zend_hash_add_empty_element(CG(annotations_attributes), name, name_len);
+	} else {
+		value = arg_value->u.constant.value.str.val;
+		value_len = arg_value->u.constant.value.str.len + 1;
+	    ALLOC_INIT_ZVAL(temp);
+	    Z_TYPE_P(temp) = IS_STRING;
+	    Z_LVAL_P(temp) = value;
+		zend_hash_add(CG(annotations_attributes), name, name_len, temp, sizeof(zval), NULL);
+	}
+}
+
+void zend_do_begin_annotation_declaration(znode *annotation_name TSRMLS_DC) /* {{{ */
+{
+	zend_annotation_entry *new_annotation_entry;
+	new_annotation_entry = emalloc(sizeof(zend_annotation_entry));
+	new_annotation_entry->name = annotation_name->u.constant.value.str.val;
+	new_annotation_entry->name_length = annotation_name->u.constant.value.str.len;
+	zend_hash_add(CG(annotations), new_annotation_entry->name, new_annotation_entry->name_length + 1, CG(annotations_attributes), sizeof(HashTable), NULL);
+	CG(annotations_attributes) = emalloc(sizeof(HashTable));
+	zend_hash_init(CG(annotations_attributes), 0, NULL, (dtor_func_t) free_estring, 0);
+}
+/* }}} */
+
 void zend_do_begin_class_declaration(const znode *class_token, znode *class_name, const znode *parent_class_name TSRMLS_DC) /* {{{ */
 {
 	zend_op *opline;
@@ -3469,6 +3513,9 @@ void zend_do_begin_class_declaration(const znode *class_token, znode *class_name
 	opline->result.op_type = IS_VAR;
 	CG(implementing_class) = opline->result;
 
+	new_class_entry->annotations = CG(annotations);
+	CG(annotations) = emalloc(sizeof(HashTable));
+	zend_hash_init(CG(annotations), 0, NULL, (dtor_func_t) free_estring, 0);
 	if (CG(doc_comment)) {
 		CG(active_class_entry)->doc_comment = CG(doc_comment);
 		CG(active_class_entry)->doc_comment_len = CG(doc_comment_len);
diff --git a/Zend/zend_compile.h b/Zend/zend_compile.h
index ac9b31b..b303fee 100644
--- a/Zend/zend_compile.h
+++ b/Zend/zend_compile.h
@@ -161,6 +161,7 @@ char *zend_visibility_string(zend_uint fn_flags);
 
 typedef struct _zend_property_info {
 	zend_uint flags;
+	HashTable *annotations;
 	char *name;
 	int name_length;
 	ulong h;
@@ -180,6 +181,7 @@ typedef struct _zend_arg_info {
 	zend_bool pass_by_reference;
 	zend_bool return_reference;
 	int required_num_args;
+	HashTable *annotations;
 } zend_arg_info;
 
 typedef struct _zend_compiled_variable {
@@ -205,6 +207,7 @@ struct _zend_op_array {
 	zend_bool done_pass_two;
 
 	zend_uint *refcount;
+	HashTable *annotations;
 
 	zend_op *opcodes;
 	zend_uint last, size;
@@ -468,7 +471,8 @@ void zend_do_switch_end(const znode *case_list TSRMLS_DC);
 void zend_do_case_before_statement(const znode *case_list, znode *case_token, const znode *case_expr TSRMLS_DC);
 void zend_do_case_after_statement(znode *result, const znode *case_token TSRMLS_DC);
 void zend_do_default_before_statement(const znode *case_list, znode *default_token TSRMLS_DC);
-
+void zend_do_add_annotation_arg(znode *arg_name, znode *arg_value TSRMLS_DC);
+void zend_do_begin_annotation_declaration(znode *annotation_name TSRMLS_DC);
 void zend_do_begin_class_declaration(const znode *class_token, znode *class_name, const znode *parent_class_name TSRMLS_DC);
 void zend_do_end_class_declaration(const znode *class_token, const znode *parent_token TSRMLS_DC);
 void zend_do_declare_property(const znode *var_name, const znode *value, zend_uint access_type TSRMLS_DC);
diff --git a/Zend/zend_globals.h b/Zend/zend_globals.h
index 4577969..21683ee 100644
--- a/Zend/zend_globals.h
+++ b/Zend/zend_globals.h
@@ -98,7 +98,8 @@ struct _zend_compiler_globals {
 	HashTable *class_table;		/* class table */
 
 	HashTable filenames_table;
-
+	HashTable *annotations;
+	HashTable *annotations_attributes;
 	HashTable *auto_globals;
 
 	zend_bool in_compilation;
diff --git a/Zend/zend_language_parser.c b/Zend/zend_language_parser.c
index 6461dc1..0ea6dd3 100644
--- a/Zend/zend_language_parser.c
+++ b/Zend/zend_language_parser.c
@@ -196,7 +196,8 @@
      T_NAMESPACE = 377,
      T_NS_C = 378,
      T_DIR = 379,
-     T_NS_SEPARATOR = 380
+     T_NS_SEPARATOR = 380,
+     T_ANNOTATION = 381
    };
 #endif
 /* Tokens.  */
@@ -323,12 +324,13 @@
 #define T_NS_C 378
 #define T_DIR 379
 #define T_NS_SEPARATOR 380
+#define T_ANNOTATION 381
 
 
 
 
 /* Copy the first part of user declarations.  */
-
+#line 1 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
 
 /*
    +----------------------------------------------------------------------+
@@ -408,7 +410,7 @@ typedef int YYSTYPE;
 
 
 /* Line 216 of yacc.c.  */
-
+#line 414 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.c"
 
 #ifdef short
 # undef short
@@ -623,20 +625,20 @@ union yyalloc
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   5168
+#define YYLAST   5141
 
 /* YYNTOKENS -- Number of terminals.  */
-#define YYNTOKENS  154
+#define YYNTOKENS  155
 /* YYNNTS -- Number of nonterminals.  */
-#define YYNNTS  181
+#define YYNNTS  187
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  464
+#define YYNRULES  483
 /* YYNRULES -- Number of states.  */
-#define YYNSTATES  894
+#define YYNSTATES  938
 
 /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
 #define YYUNDEFTOK  2
-#define YYMAXUTOK   380
+#define YYMAXUTOK   381
 
 #define YYTRANSLATE(YYX)						\
   ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
@@ -647,16 +649,16 @@ static const yytype_uint8 yytranslate[] =
        0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,    48,   152,     2,   150,    47,    31,     2,
-     145,   146,    45,    42,     8,    43,    44,    46,     2,     2,
-       2,     2,     2,     2,     2,     2,     2,     2,    26,   147,
+       2,     2,     2,    48,   153,     2,   151,    47,    31,     2,
+     146,   147,    45,    42,     8,    43,    44,    46,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,    26,   148,
       36,    13,    37,    25,    51,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,    61,     2,   153,    30,     2,   151,     2,     2,     2,
+       2,    61,     2,   154,    30,     2,   152,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,   148,    29,   149,    50,     2,     2,     2,
+       2,     2,     2,   149,    29,   150,    50,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
@@ -682,7 +684,7 @@ static const yytype_uint8 yytranslate[] =
      114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
      124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
      134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
-     144
+     144,   145
 };
 
 #if YYDEBUG
@@ -691,261 +693,273 @@ static const yytype_uint8 yytranslate[] =
 static const yytype_uint16 yyprhs[] =
 {
        0,     0,     3,     5,     6,    10,    11,    13,    17,    19,
-      21,    23,    28,    32,    33,    40,    41,    47,    51,    54,
-      58,    60,    62,    66,    69,    74,    80,    85,    86,    90,
-      91,    93,    95,    97,   102,   104,   107,   111,   112,   113,
-     123,   124,   125,   138,   139,   140,   148,   149,   150,   160,
-     161,   162,   163,   176,   177,   184,   187,   191,   194,   198,
-     201,   205,   209,   213,   217,   221,   223,   226,   232,   233,
-     234,   245,   246,   247,   258,   259,   266,   268,   269,   270,
-     271,   272,   273,   292,   296,   300,   302,   303,   305,   308,
-     309,   310,   321,   323,   327,   329,   331,   333,   334,   336,
-     337,   348,   349,   358,   359,   367,   369,   372,   375,   376,
-     379,   381,   382,   385,   386,   389,   391,   395,   396,   399,
-     401,   404,   406,   411,   413,   418,   420,   425,   429,   435,
-     439,   444,   449,   455,   456,   457,   464,   465,   471,   473,
-     475,   477,   482,   483,   484,   492,   493,   494,   503,   504,
-     507,   508,   512,   514,   515,   518,   522,   528,   533,   538,
-     544,   552,   559,   560,   562,   564,   566,   567,   569,   571,
-     574,   578,   582,   587,   591,   593,   595,   598,   603,   607,
-     613,   615,   619,   622,   623,   624,   629,   632,   633,   643,
-     645,   649,   651,   653,   654,   656,   658,   661,   663,   665,
-     667,   669,   671,   673,   677,   683,   685,   689,   695,   700,
-     704,   706,   707,   709,   710,   715,   717,   718,   726,   730,
-     735,   736,   744,   745,   750,   753,   757,   761,   765,   769,
-     773,   777,   781,   785,   789,   793,   797,   800,   803,   806,
-     809,   810,   815,   816,   821,   822,   827,   828,   833,   837,
-     841,   845,   849,   853,   857,   861,   865,   869,   873,   877,
-     881,   884,   887,   890,   893,   897,   901,   905,   909,   913,
-     917,   921,   925,   929,   933,   934,   935,   943,   944,   950,
-     952,   955,   958,   961,   964,   967,   970,   973,   976,   977,
-     981,   983,   988,   992,   995,   996,  1007,  1009,  1010,  1015,
-    1019,  1024,  1026,  1029,  1030,  1036,  1037,  1045,  1046,  1053,
-    1054,  1062,  1063,  1071,  1072,  1080,  1081,  1089,  1090,  1096,
-    1098,  1100,  1104,  1107,  1109,  1113,  1116,  1118,  1120,  1121,
-    1122,  1129,  1131,  1134,  1135,  1138,  1139,  1142,  1146,  1147,
-    1149,  1151,  1152,  1156,  1158,  1160,  1162,  1164,  1166,  1168,
-    1170,  1172,  1174,  1176,  1180,  1183,  1185,  1187,  1191,  1194,
-    1197,  1200,  1205,  1207,  1211,  1213,  1215,  1217,  1221,  1224,
-    1226,  1230,  1234,  1235,  1238,  1239,  1241,  1247,  1251,  1255,
-    1257,  1259,  1261,  1263,  1265,  1267,  1268,  1269,  1277,  1279,
-    1282,  1283,  1284,  1289,  1290,  1295,  1296,  1298,  1301,  1305,
-    1309,  1311,  1313,  1315,  1317,  1320,  1322,  1327,  1332,  1334,
-    1336,  1341,  1342,  1344,  1346,  1347,  1350,  1355,  1360,  1362,
-    1364,  1368,  1370,  1373,  1377,  1379,  1381,  1382,  1388,  1389,
-    1390,  1393,  1399,  1403,  1407,  1409,  1416,  1421,  1426,  1429,
-    1432,  1435,  1437,  1440,  1442,  1443,  1449,  1453,  1457,  1464,
-    1468,  1470,  1472,  1474,  1479,  1484,  1487,  1490,  1495,  1498,
-    1501,  1503,  1504,  1509,  1513
+      21,    24,    26,    31,    35,    36,    43,    44,    50,    54,
+      57,    60,    62,    65,    71,    73,    77,    79,    83,    87,
+      89,    91,    95,    98,   103,   109,   114,   115,   119,   120,
+     122,   124,   126,   131,   133,   136,   140,   141,   142,   152,
+     153,   154,   167,   168,   169,   177,   178,   179,   189,   190,
+     191,   192,   205,   206,   213,   216,   220,   223,   227,   230,
+     234,   238,   242,   246,   250,   252,   255,   261,   262,   263,
+     274,   275,   276,   287,   288,   295,   297,   298,   299,   300,
+     301,   302,   321,   325,   329,   331,   332,   334,   337,   338,
+     339,   350,   352,   356,   358,   360,   362,   363,   365,   366,
+     377,   378,   387,   388,   396,   398,   401,   404,   405,   408,
+     410,   411,   414,   415,   418,   420,   424,   425,   428,   430,
+     433,   435,   440,   442,   447,   449,   454,   458,   464,   468,
+     473,   478,   484,   485,   486,   493,   494,   500,   502,   504,
+     506,   511,   512,   513,   521,   522,   523,   532,   533,   536,
+     537,   541,   543,   544,   547,   551,   555,   560,   566,   571,
+     576,   582,   588,   595,   603,   610,   611,   613,   615,   617,
+     618,   620,   622,   625,   628,   632,   636,   640,   645,   649,
+     651,   653,   656,   661,   665,   671,   673,   677,   680,   681,
+     682,   687,   688,   694,   697,   698,   708,   709,   720,   722,
+     726,   728,   730,   731,   733,   735,   738,   740,   742,   744,
+     746,   748,   750,   754,   760,   762,   766,   772,   777,   781,
+     783,   784,   786,   787,   792,   794,   795,   803,   807,   812,
+     813,   821,   822,   827,   830,   834,   838,   842,   846,   850,
+     854,   858,   862,   866,   870,   874,   877,   880,   883,   886,
+     887,   892,   893,   898,   899,   904,   905,   910,   914,   918,
+     922,   926,   930,   934,   938,   942,   946,   950,   954,   958,
+     961,   964,   967,   970,   974,   978,   982,   986,   990,   994,
+     998,  1002,  1006,  1010,  1011,  1012,  1020,  1021,  1027,  1029,
+    1032,  1035,  1038,  1041,  1044,  1047,  1050,  1053,  1054,  1058,
+    1060,  1065,  1069,  1072,  1073,  1084,  1086,  1087,  1092,  1096,
+    1101,  1103,  1106,  1107,  1113,  1114,  1122,  1123,  1130,  1131,
+    1139,  1140,  1148,  1149,  1157,  1158,  1166,  1167,  1173,  1175,
+    1177,  1181,  1184,  1186,  1190,  1193,  1195,  1197,  1198,  1199,
+    1206,  1208,  1211,  1212,  1215,  1216,  1219,  1223,  1224,  1226,
+    1228,  1229,  1233,  1235,  1237,  1239,  1241,  1243,  1245,  1247,
+    1249,  1251,  1253,  1257,  1260,  1262,  1264,  1268,  1271,  1274,
+    1277,  1282,  1284,  1288,  1290,  1292,  1294,  1298,  1301,  1303,
+    1307,  1311,  1312,  1315,  1316,  1318,  1324,  1328,  1332,  1334,
+    1336,  1338,  1340,  1342,  1344,  1345,  1346,  1354,  1356,  1359,
+    1360,  1361,  1366,  1367,  1372,  1373,  1375,  1378,  1382,  1386,
+    1388,  1390,  1392,  1394,  1397,  1399,  1404,  1409,  1411,  1413,
+    1418,  1419,  1421,  1423,  1424,  1427,  1432,  1437,  1439,  1441,
+    1445,  1447,  1450,  1454,  1456,  1458,  1459,  1465,  1466,  1467,
+    1470,  1476,  1480,  1484,  1486,  1493,  1498,  1503,  1506,  1509,
+    1512,  1514,  1517,  1519,  1520,  1526,  1530,  1534,  1541,  1545,
+    1547,  1549,  1551,  1556,  1561,  1564,  1567,  1572,  1575,  1578,
+    1580,  1581,  1586,  1590
 };
 
 /* YYRHS -- A `-1'-separated list of the rules' RHS.  */
 static const yytype_int16 yyrhs[] =
 {
-     155,     0,    -1,   156,    -1,    -1,   156,   157,   159,    -1,
-      -1,    71,    -1,   158,   144,    71,    -1,   168,    -1,   199,
-      -1,   200,    -1,   116,   145,   146,   147,    -1,   141,   158,
-     147,    -1,    -1,   141,   158,   148,   160,   156,   149,    -1,
-      -1,   141,   148,   161,   156,   149,    -1,   104,   162,   147,
-      -1,   164,   147,    -1,   162,     8,   163,    -1,   163,    -1,
-     158,    -1,   158,    90,    71,    -1,   144,   158,    -1,   144,
-     158,    90,    71,    -1,   164,     8,    71,    13,   291,    -1,
-      99,    71,    13,   291,    -1,    -1,   165,   166,   167,    -1,
-      -1,   168,    -1,   199,    -1,   200,    -1,   116,   145,   146,
-     147,    -1,   169,    -1,    71,    26,    -1,   148,   165,   149,
-      -1,    -1,    -1,    65,   145,   297,   146,   170,   168,   171,
-     225,   229,    -1,    -1,    -1,    65,   145,   297,   146,    26,
-     172,   165,   173,   227,   230,    68,   147,    -1,    -1,    -1,
-      82,   145,   174,   297,   146,   175,   224,    -1,    -1,    -1,
-      81,   176,   168,    82,   145,   177,   297,   146,   147,    -1,
-      -1,    -1,    -1,    84,   145,   251,   147,   178,   251,   147,
-     179,   251,   146,   180,   215,    -1,    -1,    91,   145,   297,
-     146,   181,   219,    -1,    95,   147,    -1,    95,   297,   147,
-      -1,    96,   147,    -1,    96,   297,   147,    -1,   100,   147,
-      -1,   100,   254,   147,    -1,   100,   301,   147,    -1,   105,
-     236,   147,    -1,   111,   238,   147,    -1,    80,   250,   147,
-      -1,    75,    -1,   297,   147,    -1,   113,   145,   197,   146,
-     147,    -1,    -1,    -1,    86,   145,   301,    90,   182,   214,
-     213,   146,   183,   216,    -1,    -1,    -1,    86,   145,   254,
-      90,   184,   301,   213,   146,   185,   216,    -1,    -1,    88,
-     186,   145,   218,   146,   217,    -1,   147,    -1,    -1,    -1,
-      -1,    -1,    -1,   101,   187,   148,   165,   149,   102,   145,
-     188,   280,   189,    73,   146,   190,   148,   165,   149,   191,
-     192,    -1,   103,   297,   147,    -1,    97,    71,   147,    -1,
-     193,    -1,    -1,   194,    -1,   193,   194,    -1,    -1,    -1,
-     102,   145,   280,   195,    73,   146,   196,   148,   165,   149,
-      -1,   198,    -1,   197,     8,   198,    -1,   301,    -1,   202,
-      -1,   204,    -1,    -1,    31,    -1,    -1,   267,   201,    71,
-     203,   145,   231,   146,   148,   165,   149,    -1,    -1,   207,
-      71,   208,   205,   211,   148,   239,   149,    -1,    -1,   209,
-      71,   206,   210,   148,   239,   149,    -1,   117,    -1,   110,
-     117,    -1,   109,   117,    -1,    -1,   119,   280,    -1,   118,
-      -1,    -1,   119,   212,    -1,    -1,   120,   212,    -1,   280,
-      -1,   212,     8,   280,    -1,    -1,   122,   214,    -1,   301,
-      -1,    31,   301,    -1,   168,    -1,    26,   165,    85,   147,
-      -1,   168,    -1,    26,   165,    87,   147,    -1,   168,    -1,
-      26,   165,    89,   147,    -1,    71,    13,   291,    -1,   218,
-       8,    71,    13,   291,    -1,   148,   220,   149,    -1,   148,
-     147,   220,   149,    -1,    26,   220,    92,   147,    -1,    26,
-     147,   220,    92,   147,    -1,    -1,    -1,   220,    93,   297,
-     223,   221,   165,    -1,    -1,   220,    94,   223,   222,   165,
-      -1,    26,    -1,   147,    -1,   168,    -1,    26,   165,    83,
-     147,    -1,    -1,    -1,   225,    66,   145,   297,   146,   226,
-     168,    -1,    -1,    -1,   227,    66,   145,   297,   146,    26,
-     228,   165,    -1,    -1,    67,   168,    -1,    -1,    67,    26,
-     165,    -1,   232,    -1,    -1,   233,    73,    -1,   233,    31,
-      73,    -1,   233,    31,    73,    13,   291,    -1,   233,    73,
-      13,   291,    -1,   232,     8,   233,    73,    -1,   232,     8,
-     233,    31,    73,    -1,   232,     8,   233,    31,    73,    13,
-     291,    -1,   232,     8,   233,    73,    13,   291,    -1,    -1,
-     280,    -1,   124,    -1,   235,    -1,    -1,   254,    -1,   301,
-      -1,    31,   299,    -1,   235,     8,   254,    -1,   235,     8,
-     301,    -1,   235,     8,    31,   299,    -1,   236,     8,   237,
-      -1,   237,    -1,    73,    -1,   150,   298,    -1,   150,   148,
-     297,   149,    -1,   238,     8,    73,    -1,   238,     8,    73,
-      13,   291,    -1,    73,    -1,    73,    13,   291,    -1,   239,
-     240,    -1,    -1,    -1,   244,   241,   248,   147,    -1,   249,
-     147,    -1,    -1,   245,   267,   201,    71,   242,   145,   231,
-     146,   243,    -1,   147,    -1,   148,   165,   149,    -1,   246,
-      -1,   112,    -1,    -1,   246,    -1,   247,    -1,   246,   247,
-      -1,   106,    -1,   107,    -1,   108,    -1,   111,    -1,   110,
-      -1,   109,    -1,   248,     8,    73,    -1,   248,     8,    73,
-      13,   291,    -1,    73,    -1,    73,    13,   291,    -1,   249,
-       8,    71,    13,   291,    -1,    99,    71,    13,   291,    -1,
-     250,     8,   297,    -1,   297,    -1,    -1,   252,    -1,    -1,
-     252,     8,   253,   297,    -1,   297,    -1,    -1,   123,   145,
-     255,   322,   146,    13,   297,    -1,   301,    13,   297,    -1,
-     301,    13,    31,   301,    -1,    -1,   301,    13,    31,    63,
-     281,   256,   289,    -1,    -1,    63,   281,   257,   289,    -1,
-      62,   297,    -1,   301,    24,   297,    -1,   301,    23,   297,
-      -1,   301,    22,   297,    -1,   301,    21,   297,    -1,   301,
-      20,   297,    -1,   301,    19,   297,    -1,   301,    18,   297,
-      -1,   301,    17,   297,    -1,   301,    16,   297,    -1,   301,
-      15,   297,    -1,   301,    14,   297,    -1,   300,    60,    -1,
-      60,   300,    -1,   300,    59,    -1,    59,   300,    -1,    -1,
-     297,    27,   258,   297,    -1,    -1,   297,    28,   259,   297,
-      -1,    -1,   297,     9,   260,   297,    -1,    -1,   297,    11,
-     261,   297,    -1,   297,    10,   297,    -1,   297,    29,   297,
-      -1,   297,    31,   297,    -1,   297,    30,   297,    -1,   297,
-      44,   297,    -1,   297,    42,   297,    -1,   297,    43,   297,
-      -1,   297,    45,   297,    -1,   297,    46,   297,    -1,   297,
-      47,   297,    -1,   297,    41,   297,    -1,   297,    40,   297,
-      -1,    42,   297,    -1,    43,   297,    -1,    48,   297,    -1,
-      50,   297,    -1,   297,    33,   297,    -1,   297,    32,   297,
-      -1,   297,    35,   297,    -1,   297,    34,   297,    -1,   297,
-      36,   297,    -1,   297,    39,   297,    -1,   297,    37,   297,
-      -1,   297,    38,   297,    -1,   297,    49,   281,    -1,   145,
-     297,   146,    -1,    -1,    -1,   297,    25,   262,   297,    26,
-     263,   297,    -1,    -1,   297,    25,    26,   264,   297,    -1,
-     331,    -1,    58,   297,    -1,    57,   297,    -1,    56,   297,
-      -1,    55,   297,    -1,    54,   297,    -1,    53,   297,    -1,
-      52,   297,    -1,    64,   287,    -1,    -1,    51,   265,   297,
-      -1,   293,    -1,   124,   145,   325,   146,    -1,   151,   288,
-     151,    -1,    12,   297,    -1,    -1,   267,   201,   145,   266,
-     231,   146,   268,   148,   165,   149,    -1,    98,    -1,    -1,
-     104,   145,   269,   146,    -1,   269,     8,    73,    -1,   269,
-       8,    31,    73,    -1,    73,    -1,    31,    73,    -1,    -1,
-     158,   145,   271,   234,   146,    -1,    -1,   141,   144,   158,
-     145,   272,   234,   146,    -1,    -1,   144,   158,   145,   273,
-     234,   146,    -1,    -1,   279,   140,    71,   145,   274,   234,
-     146,    -1,    -1,   279,   140,   309,   145,   275,   234,   146,
-      -1,    -1,   311,   140,    71,   145,   276,   234,   146,    -1,
-      -1,   311,   140,   309,   145,   277,   234,   146,    -1,    -1,
-     309,   145,   278,   234,   146,    -1,   111,    -1,   158,    -1,
-     141,   144,   158,    -1,   144,   158,    -1,   158,    -1,   141,
-     144,   158,    -1,   144,   158,    -1,   279,    -1,   282,    -1,
-      -1,    -1,   313,   121,   283,   317,   284,   285,    -1,   313,
-      -1,   285,   286,    -1,    -1,   121,   317,    -1,    -1,   145,
-     146,    -1,   145,   297,   146,    -1,    -1,    78,    -1,   327,
-      -1,    -1,   145,   234,   146,    -1,    69,    -1,    70,    -1,
-      79,    -1,   128,    -1,   129,    -1,   143,    -1,   125,    -1,
-     126,    -1,   127,    -1,   142,    -1,   136,    78,   137,    -1,
-     136,   137,    -1,   290,    -1,   158,    -1,   141,   144,   158,
-      -1,   144,   158,    -1,    42,   291,    -1,    43,   291,    -1,
-     124,   145,   294,   146,    -1,   292,    -1,   279,   140,    71,
-      -1,    72,    -1,   334,    -1,   158,    -1,   141,   144,   158,
-      -1,   144,   158,    -1,   290,    -1,   152,   327,   152,    -1,
-     136,   327,   137,    -1,    -1,   296,   295,    -1,    -1,     8,
-      -1,   296,     8,   291,   122,   291,    -1,   296,     8,   291,
-      -1,   291,   122,   291,    -1,   291,    -1,   298,    -1,   254,
-      -1,   301,    -1,   301,    -1,   301,    -1,    -1,    -1,   312,
-     121,   302,   317,   303,   307,   304,    -1,   312,    -1,   304,
-     305,    -1,    -1,    -1,   121,   317,   306,   307,    -1,    -1,
-     145,   308,   234,   146,    -1,    -1,   314,    -1,   321,   314,
-      -1,   279,   140,   309,    -1,   311,   140,   309,    -1,   314,
-      -1,   313,    -1,   270,    -1,   314,    -1,   321,   314,    -1,
-     310,    -1,   314,    61,   316,   153,    -1,   314,   148,   297,
-     149,    -1,   315,    -1,    73,    -1,   150,   148,   297,   149,
-      -1,    -1,   297,    -1,   319,    -1,    -1,   309,   318,    -1,
-     319,    61,   316,   153,    -1,   319,   148,   297,   149,    -1,
-     320,    -1,    71,    -1,   148,   297,   149,    -1,   150,    -1,
-     321,   150,    -1,   322,     8,   323,    -1,   323,    -1,   301,
-      -1,    -1,   123,   145,   324,   322,   146,    -1,    -1,    -1,
-     326,   295,    -1,   326,     8,   297,   122,   297,    -1,   326,
-       8,   297,    -1,   297,   122,   297,    -1,   297,    -1,   326,
-       8,   297,   122,    31,   299,    -1,   326,     8,    31,   299,
-      -1,   297,   122,    31,   299,    -1,    31,   299,    -1,   327,
-     328,    -1,   327,    78,    -1,   328,    -1,    78,   328,    -1,
-      73,    -1,    -1,    73,    61,   329,   330,   153,    -1,    73,
-     121,    71,    -1,   138,   297,   149,    -1,   138,    72,    61,
-     297,   153,   149,    -1,   139,   301,   149,    -1,    71,    -1,
-      74,    -1,    73,    -1,   114,   145,   332,   146,    -1,   115,
-     145,   301,   146,    -1,     7,   297,    -1,     6,   297,    -1,
-       5,   145,   297,   146,    -1,     4,   297,    -1,     3,   297,
-      -1,   301,    -1,    -1,   332,     8,   333,   301,    -1,   279,
-     140,    71,    -1,   311,   140,    71,    -1
+     156,     0,    -1,   157,    -1,    -1,   157,   158,   160,    -1,
+      -1,    71,    -1,   159,   144,    71,    -1,   173,    -1,   204,
+      -1,   163,   205,    -1,   205,    -1,   116,   146,   147,   148,
+      -1,   141,   159,   148,    -1,    -1,   141,   159,   149,   161,
+     157,   150,    -1,    -1,   141,   149,   162,   157,   150,    -1,
+     104,   167,   148,    -1,   169,   148,    -1,   163,   164,    -1,
+     164,    -1,   145,    71,    -1,   145,    71,   146,   165,   147,
+      -1,   166,    -1,   166,     8,   166,    -1,    79,    -1,    71,
+      13,    79,    -1,   167,     8,   168,    -1,   168,    -1,   159,
+      -1,   159,    90,    71,    -1,   144,   159,    -1,   144,   159,
+      90,    71,    -1,   169,     8,    71,    13,   298,    -1,    99,
+      71,    13,   298,    -1,    -1,   170,   171,   172,    -1,    -1,
+     173,    -1,   204,    -1,   205,    -1,   116,   146,   147,   148,
+      -1,   174,    -1,    71,    26,    -1,   149,   170,   150,    -1,
+      -1,    -1,    65,   146,   304,   147,   175,   173,   176,   230,
+     234,    -1,    -1,    -1,    65,   146,   304,   147,    26,   177,
+     170,   178,   232,   235,    68,   148,    -1,    -1,    -1,    82,
+     146,   179,   304,   147,   180,   229,    -1,    -1,    -1,    81,
+     181,   173,    82,   146,   182,   304,   147,   148,    -1,    -1,
+      -1,    -1,    84,   146,   258,   148,   183,   258,   148,   184,
+     258,   147,   185,   220,    -1,    -1,    91,   146,   304,   147,
+     186,   224,    -1,    95,   148,    -1,    95,   304,   148,    -1,
+      96,   148,    -1,    96,   304,   148,    -1,   100,   148,    -1,
+     100,   261,   148,    -1,   100,   308,   148,    -1,   105,   241,
+     148,    -1,   111,   243,   148,    -1,    80,   257,   148,    -1,
+      75,    -1,   304,   148,    -1,   113,   146,   202,   147,   148,
+      -1,    -1,    -1,    86,   146,   308,    90,   187,   219,   218,
+     147,   188,   221,    -1,    -1,    -1,    86,   146,   261,    90,
+     189,   308,   218,   147,   190,   221,    -1,    -1,    88,   191,
+     146,   223,   147,   222,    -1,   148,    -1,    -1,    -1,    -1,
+      -1,    -1,   101,   192,   149,   170,   150,   102,   146,   193,
+     287,   194,    73,   147,   195,   149,   170,   150,   196,   197,
+      -1,   103,   304,   148,    -1,    97,    71,   148,    -1,   198,
+      -1,    -1,   199,    -1,   198,   199,    -1,    -1,    -1,   102,
+     146,   287,   200,    73,   147,   201,   149,   170,   150,    -1,
+     203,    -1,   202,     8,   203,    -1,   308,    -1,   207,    -1,
+     209,    -1,    -1,    31,    -1,    -1,   274,   206,    71,   208,
+     146,   236,   147,   149,   170,   150,    -1,    -1,   212,    71,
+     213,   210,   216,   149,   244,   150,    -1,    -1,   214,    71,
+     211,   215,   149,   244,   150,    -1,   117,    -1,   110,   117,
+      -1,   109,   117,    -1,    -1,   119,   287,    -1,   118,    -1,
+      -1,   119,   217,    -1,    -1,   120,   217,    -1,   287,    -1,
+     217,     8,   287,    -1,    -1,   122,   219,    -1,   308,    -1,
+      31,   308,    -1,   173,    -1,    26,   170,    85,   148,    -1,
+     173,    -1,    26,   170,    87,   148,    -1,   173,    -1,    26,
+     170,    89,   148,    -1,    71,    13,   298,    -1,   223,     8,
+      71,    13,   298,    -1,   149,   225,   150,    -1,   149,   148,
+     225,   150,    -1,    26,   225,    92,   148,    -1,    26,   148,
+     225,    92,   148,    -1,    -1,    -1,   225,    93,   304,   228,
+     226,   170,    -1,    -1,   225,    94,   228,   227,   170,    -1,
+      26,    -1,   148,    -1,   173,    -1,    26,   170,    83,   148,
+      -1,    -1,    -1,   230,    66,   146,   304,   147,   231,   173,
+      -1,    -1,    -1,   232,    66,   146,   304,   147,    26,   233,
+     170,    -1,    -1,    67,   173,    -1,    -1,    67,    26,   170,
+      -1,   237,    -1,    -1,   238,    73,    -1,   238,    31,    73,
+      -1,   163,   238,    73,    -1,   163,   238,    31,    73,    -1,
+     238,    31,    73,    13,   298,    -1,   238,    73,    13,   298,
+      -1,   237,     8,   238,    73,    -1,   237,     8,   238,    31,
+      73,    -1,   237,     8,   163,   238,    73,    -1,   237,     8,
+     163,   238,    31,    73,    -1,   237,     8,   238,    31,    73,
+      13,   298,    -1,   237,     8,   238,    73,    13,   298,    -1,
+      -1,   287,    -1,   124,    -1,   240,    -1,    -1,   261,    -1,
+     308,    -1,    31,   306,    -1,   163,   308,    -1,   163,    31,
+     306,    -1,   240,     8,   261,    -1,   240,     8,   308,    -1,
+     240,     8,    31,   306,    -1,   241,     8,   242,    -1,   242,
+      -1,    73,    -1,   151,   305,    -1,   151,   149,   304,   150,
+      -1,   243,     8,    73,    -1,   243,     8,    73,    13,   298,
+      -1,    73,    -1,    73,    13,   298,    -1,   244,   245,    -1,
+      -1,    -1,   251,   246,   255,   148,    -1,    -1,   163,   251,
+     247,   255,   148,    -1,   256,   148,    -1,    -1,   252,   274,
+     206,    71,   248,   146,   236,   147,   250,    -1,    -1,   163,
+     252,   274,   206,    71,   249,   146,   236,   147,   250,    -1,
+     148,    -1,   149,   170,   150,    -1,   253,    -1,   112,    -1,
+      -1,   253,    -1,   254,    -1,   253,   254,    -1,   106,    -1,
+     107,    -1,   108,    -1,   111,    -1,   110,    -1,   109,    -1,
+     255,     8,    73,    -1,   255,     8,    73,    13,   298,    -1,
+      73,    -1,    73,    13,   298,    -1,   256,     8,    71,    13,
+     298,    -1,    99,    71,    13,   298,    -1,   257,     8,   304,
+      -1,   304,    -1,    -1,   259,    -1,    -1,   259,     8,   260,
+     304,    -1,   304,    -1,    -1,   123,   146,   262,   329,   147,
+      13,   304,    -1,   308,    13,   304,    -1,   308,    13,    31,
+     308,    -1,    -1,   308,    13,    31,    63,   288,   263,   296,
+      -1,    -1,    63,   288,   264,   296,    -1,    62,   304,    -1,
+     308,    24,   304,    -1,   308,    23,   304,    -1,   308,    22,
+     304,    -1,   308,    21,   304,    -1,   308,    20,   304,    -1,
+     308,    19,   304,    -1,   308,    18,   304,    -1,   308,    17,
+     304,    -1,   308,    16,   304,    -1,   308,    15,   304,    -1,
+     308,    14,   304,    -1,   307,    60,    -1,    60,   307,    -1,
+     307,    59,    -1,    59,   307,    -1,    -1,   304,    27,   265,
+     304,    -1,    -1,   304,    28,   266,   304,    -1,    -1,   304,
+       9,   267,   304,    -1,    -1,   304,    11,   268,   304,    -1,
+     304,    10,   304,    -1,   304,    29,   304,    -1,   304,    31,
+     304,    -1,   304,    30,   304,    -1,   304,    44,   304,    -1,
+     304,    42,   304,    -1,   304,    43,   304,    -1,   304,    45,
+     304,    -1,   304,    46,   304,    -1,   304,    47,   304,    -1,
+     304,    41,   304,    -1,   304,    40,   304,    -1,    42,   304,
+      -1,    43,   304,    -1,    48,   304,    -1,    50,   304,    -1,
+     304,    33,   304,    -1,   304,    32,   304,    -1,   304,    35,
+     304,    -1,   304,    34,   304,    -1,   304,    36,   304,    -1,
+     304,    39,   304,    -1,   304,    37,   304,    -1,   304,    38,
+     304,    -1,   304,    49,   288,    -1,   146,   304,   147,    -1,
+      -1,    -1,   304,    25,   269,   304,    26,   270,   304,    -1,
+      -1,   304,    25,    26,   271,   304,    -1,   338,    -1,    58,
+     304,    -1,    57,   304,    -1,    56,   304,    -1,    55,   304,
+      -1,    54,   304,    -1,    53,   304,    -1,    52,   304,    -1,
+      64,   294,    -1,    -1,    51,   272,   304,    -1,   300,    -1,
+     124,   146,   332,   147,    -1,   152,   295,   152,    -1,    12,
+     304,    -1,    -1,   274,   206,   146,   273,   236,   147,   275,
+     149,   170,   150,    -1,    98,    -1,    -1,   104,   146,   276,
+     147,    -1,   276,     8,    73,    -1,   276,     8,    31,    73,
+      -1,    73,    -1,    31,    73,    -1,    -1,   159,   146,   278,
+     239,   147,    -1,    -1,   141,   144,   159,   146,   279,   239,
+     147,    -1,    -1,   144,   159,   146,   280,   239,   147,    -1,
+      -1,   286,   140,    71,   146,   281,   239,   147,    -1,    -1,
+     286,   140,   316,   146,   282,   239,   147,    -1,    -1,   318,
+     140,    71,   146,   283,   239,   147,    -1,    -1,   318,   140,
+     316,   146,   284,   239,   147,    -1,    -1,   316,   146,   285,
+     239,   147,    -1,   111,    -1,   159,    -1,   141,   144,   159,
+      -1,   144,   159,    -1,   159,    -1,   141,   144,   159,    -1,
+     144,   159,    -1,   286,    -1,   289,    -1,    -1,    -1,   320,
+     121,   290,   324,   291,   292,    -1,   320,    -1,   292,   293,
+      -1,    -1,   121,   324,    -1,    -1,   146,   147,    -1,   146,
+     304,   147,    -1,    -1,    78,    -1,   334,    -1,    -1,   146,
+     239,   147,    -1,    69,    -1,    70,    -1,    79,    -1,   128,
+      -1,   129,    -1,   143,    -1,   125,    -1,   126,    -1,   127,
+      -1,   142,    -1,   136,    78,   137,    -1,   136,   137,    -1,
+     297,    -1,   159,    -1,   141,   144,   159,    -1,   144,   159,
+      -1,    42,   298,    -1,    43,   298,    -1,   124,   146,   301,
+     147,    -1,   299,    -1,   286,   140,    71,    -1,    72,    -1,
+     341,    -1,   159,    -1,   141,   144,   159,    -1,   144,   159,
+      -1,   297,    -1,   153,   334,   153,    -1,   136,   334,   137,
+      -1,    -1,   303,   302,    -1,    -1,     8,    -1,   303,     8,
+     298,   122,   298,    -1,   303,     8,   298,    -1,   298,   122,
+     298,    -1,   298,    -1,   305,    -1,   261,    -1,   308,    -1,
+     308,    -1,   308,    -1,    -1,    -1,   319,   121,   309,   324,
+     310,   314,   311,    -1,   319,    -1,   311,   312,    -1,    -1,
+      -1,   121,   324,   313,   314,    -1,    -1,   146,   315,   239,
+     147,    -1,    -1,   321,    -1,   328,   321,    -1,   286,   140,
+     316,    -1,   318,   140,   316,    -1,   321,    -1,   320,    -1,
+     277,    -1,   321,    -1,   328,   321,    -1,   317,    -1,   321,
+      61,   323,   154,    -1,   321,   149,   304,   150,    -1,   322,
+      -1,    73,    -1,   151,   149,   304,   150,    -1,    -1,   304,
+      -1,   326,    -1,    -1,   316,   325,    -1,   326,    61,   323,
+     154,    -1,   326,   149,   304,   150,    -1,   327,    -1,    71,
+      -1,   149,   304,   150,    -1,   151,    -1,   328,   151,    -1,
+     329,     8,   330,    -1,   330,    -1,   308,    -1,    -1,   123,
+     146,   331,   329,   147,    -1,    -1,    -1,   333,   302,    -1,
+     333,     8,   304,   122,   304,    -1,   333,     8,   304,    -1,
+     304,   122,   304,    -1,   304,    -1,   333,     8,   304,   122,
+      31,   306,    -1,   333,     8,    31,   306,    -1,   304,   122,
+      31,   306,    -1,    31,   306,    -1,   334,   335,    -1,   334,
+      78,    -1,   335,    -1,    78,   335,    -1,    73,    -1,    -1,
+      73,    61,   336,   337,   154,    -1,    73,   121,    71,    -1,
+     138,   304,   150,    -1,   138,    72,    61,   304,   154,   150,
+      -1,   139,   308,   150,    -1,    71,    -1,    74,    -1,    73,
+      -1,   114,   146,   339,   147,    -1,   115,   146,   308,   147,
+      -1,     7,   304,    -1,     6,   304,    -1,     5,   146,   304,
+     147,    -1,     4,   304,    -1,     3,   304,    -1,   308,    -1,
+      -1,   339,     8,   340,   308,    -1,   286,   140,    71,    -1,
+     318,   140,    71,    -1
 };
 
 /* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
 static const yytype_uint16 yyrline[] =
 {
-       0,   155,   155,   159,   159,   160,   164,   165,   169,   170,
-     171,   172,   173,   174,   174,   176,   176,   178,   179,   183,
-     184,   188,   189,   190,   191,   195,   196,   200,   200,   201,
-     206,   207,   208,   209,   214,   215,   219,   220,   220,   220,
-     221,   221,   221,   222,   222,   222,   223,   223,   223,   227,
-     229,   231,   224,   233,   233,   234,   235,   236,   237,   238,
-     239,   240,   241,   242,   243,   244,   245,   246,   248,   249,
-     247,   252,   253,   251,   255,   255,   256,   257,   258,   259,
-     260,   261,   257,   263,   264,   269,   270,   274,   275,   280,
-     280,   280,   285,   286,   290,   294,   298,   303,   304,   309,
-     309,   315,   314,   321,   320,   330,   331,   332,   336,   337,
-     341,   344,   346,   349,   351,   355,   356,   360,   361,   366,
-     367,   371,   372,   377,   378,   383,   384,   389,   390,   395,
-     396,   397,   398,   403,   404,   404,   405,   405,   410,   411,
-     416,   417,   422,   424,   424,   428,   430,   430,   434,   436,
-     440,   442,   447,   448,   453,   454,   455,   456,   457,   458,
-     459,   460,   465,   466,   467,   472,   473,   478,   479,   480,
-     481,   482,   483,   487,   488,   493,   494,   495,   500,   501,
-     502,   503,   509,   510,   515,   515,   516,   517,   517,   523,
-     524,   528,   529,   533,   534,   538,   539,   543,   544,   545,
-     546,   547,   548,   552,   553,   554,   555,   559,   560,   564,
-     565,   570,   571,   575,   575,   576,   580,   580,   581,   582,
-     583,   583,   584,   584,   585,   586,   587,   588,   589,   590,
-     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
-     601,   601,   602,   602,   603,   603,   604,   604,   605,   606,
-     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
-     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
-     627,   628,   629,   630,   631,   632,   631,   634,   634,   636,
-     637,   638,   639,   640,   641,   642,   643,   644,   645,   645,
-     646,   647,   648,   649,   650,   650,   655,   658,   660,   664,
-     665,   666,   667,   671,   671,   674,   674,   677,   677,   680,
-     680,   683,   683,   686,   686,   689,   689,   692,   692,   698,
-     699,   700,   701,   705,   706,   707,   713,   714,   719,   720,
-     719,   722,   727,   728,   733,   737,   738,   739,   743,   744,
-     745,   750,   751,   756,   757,   758,   759,   760,   761,   762,
-     763,   764,   765,   766,   767,   772,   773,   774,   775,   776,
-     777,   778,   779,   783,   787,   788,   789,   790,   791,   792,
-     793,   794,   799,   800,   803,   805,   809,   810,   811,   812,
-     816,   817,   822,   827,   832,   837,   838,   837,   840,   844,
-     845,   850,   850,   854,   854,   858,   862,   863,   867,   868,
-     873,   877,   878,   883,   884,   885,   889,   890,   891,   896,
-     897,   901,   902,   907,   908,   908,   912,   913,   914,   918,
-     919,   923,   924,   928,   929,   934,   935,   935,   936,   941,
-     942,   946,   947,   948,   949,   950,   951,   952,   953,   957,
-     958,   959,   960,   966,   967,   967,   968,   969,   970,   971,
-     976,   977,   978,   983,   984,   985,   986,   987,   988,   989,
-     993,   994,   994,   998,   999
+       0,   156,   156,   160,   160,   161,   165,   166,   170,   171,
+     172,   173,   174,   175,   176,   176,   178,   178,   180,   181,
+     185,   186,   190,   191,   195,   196,   200,   201,   205,   206,
+     210,   211,   212,   213,   217,   218,   222,   222,   223,   228,
+     229,   230,   231,   236,   237,   241,   242,   242,   242,   243,
+     243,   243,   244,   244,   244,   245,   245,   245,   249,   251,
+     253,   246,   255,   255,   256,   257,   258,   259,   260,   261,
+     262,   263,   264,   265,   266,   267,   268,   270,   271,   269,
+     274,   275,   273,   277,   277,   278,   279,   280,   281,   282,
+     283,   279,   285,   286,   291,   292,   296,   297,   302,   302,
+     302,   307,   308,   312,   316,   320,   325,   326,   331,   331,
+     337,   336,   343,   342,   352,   353,   354,   358,   359,   363,
+     366,   368,   371,   373,   377,   378,   382,   383,   388,   389,
+     393,   394,   399,   400,   405,   406,   411,   412,   417,   418,
+     419,   420,   425,   426,   426,   427,   427,   432,   433,   438,
+     439,   444,   446,   446,   450,   452,   452,   456,   458,   462,
+     464,   469,   470,   475,   476,   477,   478,   479,   480,   481,
+     482,   483,   484,   485,   486,   491,   492,   493,   498,   499,
+     504,   505,   506,   507,   508,   509,   510,   511,   515,   516,
+     521,   522,   523,   528,   529,   530,   531,   537,   538,   543,
+     543,   544,   544,   545,   546,   546,   548,   548,   554,   555,
+     559,   560,   564,   565,   569,   570,   574,   575,   576,   577,
+     578,   579,   583,   584,   585,   586,   590,   591,   595,   596,
+     601,   602,   606,   606,   607,   611,   611,   612,   613,   614,
+     614,   615,   615,   616,   617,   618,   619,   620,   621,   622,
+     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
+     632,   633,   633,   634,   634,   635,   635,   636,   637,   638,
+     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
+     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
+     659,   660,   661,   662,   663,   662,   665,   665,   667,   668,
+     669,   670,   671,   672,   673,   674,   675,   676,   676,   677,
+     678,   679,   680,   681,   681,   686,   689,   691,   695,   696,
+     697,   698,   702,   702,   705,   705,   708,   708,   711,   711,
+     714,   714,   717,   717,   720,   720,   723,   723,   729,   730,
+     731,   732,   736,   737,   738,   744,   745,   750,   751,   750,
+     753,   758,   759,   764,   768,   769,   770,   774,   775,   776,
+     781,   782,   787,   788,   789,   790,   791,   792,   793,   794,
+     795,   796,   797,   798,   803,   804,   805,   806,   807,   808,
+     809,   810,   814,   818,   819,   820,   821,   822,   823,   824,
+     825,   830,   831,   834,   836,   840,   841,   842,   843,   847,
+     848,   853,   858,   863,   868,   869,   868,   871,   875,   876,
+     881,   881,   885,   885,   889,   893,   894,   898,   899,   904,
+     908,   909,   914,   915,   916,   920,   921,   922,   927,   928,
+     932,   933,   938,   939,   939,   943,   944,   945,   949,   950,
+     954,   955,   959,   960,   965,   966,   966,   967,   972,   973,
+     977,   978,   979,   980,   981,   982,   983,   984,   988,   989,
+     990,   991,   997,   998,   998,   999,  1000,  1001,  1002,  1007,
+    1008,  1009,  1014,  1015,  1016,  1017,  1018,  1019,  1020,  1024,
+    1025,  1025,  1029,  1030
 };
 #endif
 
@@ -982,18 +996,19 @@ static const char *const yytname[] =
   "T_DOC_COMMENT", "T_OPEN_TAG", "T_OPEN_TAG_WITH_ECHO", "T_CLOSE_TAG",
   "T_WHITESPACE", "T_START_HEREDOC", "T_END_HEREDOC",
   "T_DOLLAR_OPEN_CURLY_BRACES", "T_CURLY_OPEN", "T_PAAMAYIM_NEKUDOTAYIM",
-  "T_NAMESPACE", "T_NS_C", "T_DIR", "T_NS_SEPARATOR", "'('", "')'", "';'",
-  "'{'", "'}'", "'$'", "'`'", "'\"'", "']'", "$accept", "start",
-  "top_statement_list", "@1", "namespace_name", "top_statement", "@2",
-  "@3", "use_declarations", "use_declaration", "constant_declaration",
-  "inner_statement_list", "@4", "inner_statement", "statement",
-  "unticked_statement", "@5", "@6", "@7", "@8", "@9", "@10", "@11", "@12",
-  "@13", "@14", "@15", "@16", "@17", "@18", "@19", "@20", "@21", "@22",
-  "@23", "@24", "@25", "@26", "additional_catches",
-  "non_empty_additional_catches", "additional_catch", "@27", "@28",
-  "unset_variables", "unset_variable", "function_declaration_statement",
-  "class_declaration_statement", "is_reference",
-  "unticked_function_declaration_statement", "@29",
+  "T_NAMESPACE", "T_NS_C", "T_DIR", "T_NS_SEPARATOR", "T_ANNOTATION",
+  "'('", "')'", "';'", "'{'", "'}'", "'$'", "'`'", "'\"'", "']'",
+  "$accept", "start", "top_statement_list", "@1", "namespace_name",
+  "top_statement", "@2", "@3", "annotations", "annotation",
+  "annotation_args", "annotation_arg", "use_declarations",
+  "use_declaration", "constant_declaration", "inner_statement_list", "@4",
+  "inner_statement", "statement", "unticked_statement", "@5", "@6", "@7",
+  "@8", "@9", "@10", "@11", "@12", "@13", "@14", "@15", "@16", "@17",
+  "@18", "@19", "@20", "@21", "@22", "@23", "@24", "@25", "@26",
+  "additional_catches", "non_empty_additional_catches", "additional_catch",
+  "@27", "@28", "unset_variables", "unset_variable",
+  "function_declaration_statement", "class_declaration_statement",
+  "is_reference", "unticked_function_declaration_statement", "@29",
   "unticked_class_declaration_statement", "@30", "@31", "class_entry_type",
   "extends_from", "interface_entry", "interface_extends_list",
   "implements_list", "interface_list", "foreach_optional_arg",
@@ -1004,32 +1019,32 @@ static const char *const yytname[] =
   "parameter_list", "non_empty_parameter_list", "optional_class_type",
   "function_call_parameter_list", "non_empty_function_call_parameter_list",
   "global_var_list", "global_var", "static_var_list",
-  "class_statement_list", "class_statement", "@36", "@37", "method_body",
-  "variable_modifiers", "method_modifiers", "non_empty_member_modifiers",
-  "member_modifier", "class_variable_declaration",
-  "class_constant_declaration", "echo_expr_list", "for_expr",
-  "non_empty_for_expr", "@38", "expr_without_variable", "@39", "@40",
-  "@41", "@42", "@43", "@44", "@45", "@46", "@47", "@48", "@49", "@50",
-  "function", "lexical_vars", "lexical_var_list", "function_call", "@51",
-  "@52", "@53", "@54", "@55", "@56", "@57", "@58", "class_name",
-  "fully_qualified_class_name", "class_name_reference",
-  "dynamic_class_name_reference", "@59", "@60",
+  "class_statement_list", "class_statement", "@36", "@37", "@38", "@39",
+  "method_body", "variable_modifiers", "method_modifiers",
+  "non_empty_member_modifiers", "member_modifier",
+  "class_variable_declaration", "class_constant_declaration",
+  "echo_expr_list", "for_expr", "non_empty_for_expr", "@40",
+  "expr_without_variable", "@41", "@42", "@43", "@44", "@45", "@46", "@47",
+  "@48", "@49", "@50", "@51", "@52", "function", "lexical_vars",
+  "lexical_var_list", "function_call", "@53", "@54", "@55", "@56", "@57",
+  "@58", "@59", "@60", "class_name", "fully_qualified_class_name",
+  "class_name_reference", "dynamic_class_name_reference", "@61", "@62",
   "dynamic_class_name_variable_properties",
   "dynamic_class_name_variable_property", "exit_expr", "backticks_expr",
   "ctor_arguments", "common_scalar", "static_scalar",
   "static_class_constant", "scalar", "static_array_pair_list",
   "possible_comma", "non_empty_static_array_pair_list", "expr",
-  "r_variable", "w_variable", "rw_variable", "variable", "@61", "@62",
-  "variable_properties", "variable_property", "@63", "method_or_not",
-  "@64", "variable_without_objects", "static_member",
+  "r_variable", "w_variable", "rw_variable", "variable", "@63", "@64",
+  "variable_properties", "variable_property", "@65", "method_or_not",
+  "@66", "variable_without_objects", "static_member",
   "variable_class_name", "base_variable_with_function_calls",
   "base_variable", "reference_variable", "compound_variable", "dim_offset",
-  "object_property", "@65", "object_dim_list", "variable_name",
+  "object_property", "@67", "object_dim_list", "variable_name",
   "simple_indirect_reference", "assignment_list",
-  "assignment_list_element", "@66", "array_pair_list",
-  "non_empty_array_pair_list", "encaps_list", "encaps_var", "@67",
+  "assignment_list_element", "@68", "array_pair_list",
+  "non_empty_array_pair_list", "encaps_list", "encaps_var", "@69",
   "encaps_var_offset", "internal_functions_in_yacc", "isset_variables",
-  "@68", "class_constant", 0
+  "@70", "class_constant", 0
 };
 #endif
 
@@ -1052,113 +1067,117 @@ static const yytype_uint16 yytoknum[] =
      346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
-     376,   377,   378,   379,   380,    40,    41,    59,   123,   125,
-      36,    96,    34,    93
+     376,   377,   378,   379,   380,   381,    40,    41,    59,   123,
+     125,    36,    96,    34,    93
 };
 # endif
 
 /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
 static const yytype_uint16 yyr1[] =
 {
-       0,   154,   155,   157,   156,   156,   158,   158,   159,   159,
-     159,   159,   159,   160,   159,   161,   159,   159,   159,   162,
-     162,   163,   163,   163,   163,   164,   164,   166,   165,   165,
-     167,   167,   167,   167,   168,   168,   169,   170,   171,   169,
-     172,   173,   169,   174,   175,   169,   176,   177,   169,   178,
-     179,   180,   169,   181,   169,   169,   169,   169,   169,   169,
-     169,   169,   169,   169,   169,   169,   169,   169,   182,   183,
-     169,   184,   185,   169,   186,   169,   169,   187,   188,   189,
-     190,   191,   169,   169,   169,   192,   192,   193,   193,   195,
-     196,   194,   197,   197,   198,   199,   200,   201,   201,   203,
-     202,   205,   204,   206,   204,   207,   207,   207,   208,   208,
-     209,   210,   210,   211,   211,   212,   212,   213,   213,   214,
-     214,   215,   215,   216,   216,   217,   217,   218,   218,   219,
-     219,   219,   219,   220,   221,   220,   222,   220,   223,   223,
-     224,   224,   225,   226,   225,   227,   228,   227,   229,   229,
-     230,   230,   231,   231,   232,   232,   232,   232,   232,   232,
-     232,   232,   233,   233,   233,   234,   234,   235,   235,   235,
-     235,   235,   235,   236,   236,   237,   237,   237,   238,   238,
-     238,   238,   239,   239,   241,   240,   240,   242,   240,   243,
-     243,   244,   244,   245,   245,   246,   246,   247,   247,   247,
-     247,   247,   247,   248,   248,   248,   248,   249,   249,   250,
-     250,   251,   251,   253,   252,   252,   255,   254,   254,   254,
-     256,   254,   257,   254,   254,   254,   254,   254,   254,   254,
-     254,   254,   254,   254,   254,   254,   254,   254,   254,   254,
-     258,   254,   259,   254,   260,   254,   261,   254,   254,   254,
-     254,   254,   254,   254,   254,   254,   254,   254,   254,   254,
-     254,   254,   254,   254,   254,   254,   254,   254,   254,   254,
-     254,   254,   254,   254,   262,   263,   254,   264,   254,   254,
-     254,   254,   254,   254,   254,   254,   254,   254,   265,   254,
-     254,   254,   254,   254,   266,   254,   267,   268,   268,   269,
-     269,   269,   269,   271,   270,   272,   270,   273,   270,   274,
-     270,   275,   270,   276,   270,   277,   270,   278,   270,   279,
-     279,   279,   279,   280,   280,   280,   281,   281,   283,   284,
-     282,   282,   285,   285,   286,   287,   287,   287,   288,   288,
-     288,   289,   289,   290,   290,   290,   290,   290,   290,   290,
-     290,   290,   290,   290,   290,   291,   291,   291,   291,   291,
-     291,   291,   291,   292,   293,   293,   293,   293,   293,   293,
-     293,   293,   294,   294,   295,   295,   296,   296,   296,   296,
-     297,   297,   298,   299,   300,   302,   303,   301,   301,   304,
-     304,   306,   305,   308,   307,   307,   309,   309,   310,   310,
-     311,   312,   312,   313,   313,   313,   314,   314,   314,   315,
-     315,   316,   316,   317,   318,   317,   319,   319,   319,   320,
-     320,   321,   321,   322,   322,   323,   324,   323,   323,   325,
-     325,   326,   326,   326,   326,   326,   326,   326,   326,   327,
-     327,   327,   327,   328,   329,   328,   328,   328,   328,   328,
-     330,   330,   330,   331,   331,   331,   331,   331,   331,   331,
-     332,   333,   332,   334,   334
+       0,   155,   156,   158,   157,   157,   159,   159,   160,   160,
+     160,   160,   160,   160,   161,   160,   162,   160,   160,   160,
+     163,   163,   164,   164,   165,   165,   166,   166,   167,   167,
+     168,   168,   168,   168,   169,   169,   171,   170,   170,   172,
+     172,   172,   172,   173,   173,   174,   175,   176,   174,   177,
+     178,   174,   179,   180,   174,   181,   182,   174,   183,   184,
+     185,   174,   186,   174,   174,   174,   174,   174,   174,   174,
+     174,   174,   174,   174,   174,   174,   174,   187,   188,   174,
+     189,   190,   174,   191,   174,   174,   192,   193,   194,   195,
+     196,   174,   174,   174,   197,   197,   198,   198,   200,   201,
+     199,   202,   202,   203,   204,   205,   206,   206,   208,   207,
+     210,   209,   211,   209,   212,   212,   212,   213,   213,   214,
+     215,   215,   216,   216,   217,   217,   218,   218,   219,   219,
+     220,   220,   221,   221,   222,   222,   223,   223,   224,   224,
+     224,   224,   225,   226,   225,   227,   225,   228,   228,   229,
+     229,   230,   231,   230,   232,   233,   232,   234,   234,   235,
+     235,   236,   236,   237,   237,   237,   237,   237,   237,   237,
+     237,   237,   237,   237,   237,   238,   238,   238,   239,   239,
+     240,   240,   240,   240,   240,   240,   240,   240,   241,   241,
+     242,   242,   242,   243,   243,   243,   243,   244,   244,   246,
+     245,   247,   245,   245,   248,   245,   249,   245,   250,   250,
+     251,   251,   252,   252,   253,   253,   254,   254,   254,   254,
+     254,   254,   255,   255,   255,   255,   256,   256,   257,   257,
+     258,   258,   260,   259,   259,   262,   261,   261,   261,   263,
+     261,   264,   261,   261,   261,   261,   261,   261,   261,   261,
+     261,   261,   261,   261,   261,   261,   261,   261,   261,   265,
+     261,   266,   261,   267,   261,   268,   261,   261,   261,   261,
+     261,   261,   261,   261,   261,   261,   261,   261,   261,   261,
+     261,   261,   261,   261,   261,   261,   261,   261,   261,   261,
+     261,   261,   261,   269,   270,   261,   271,   261,   261,   261,
+     261,   261,   261,   261,   261,   261,   261,   272,   261,   261,
+     261,   261,   261,   273,   261,   274,   275,   275,   276,   276,
+     276,   276,   278,   277,   279,   277,   280,   277,   281,   277,
+     282,   277,   283,   277,   284,   277,   285,   277,   286,   286,
+     286,   286,   287,   287,   287,   288,   288,   290,   291,   289,
+     289,   292,   292,   293,   294,   294,   294,   295,   295,   295,
+     296,   296,   297,   297,   297,   297,   297,   297,   297,   297,
+     297,   297,   297,   297,   298,   298,   298,   298,   298,   298,
+     298,   298,   299,   300,   300,   300,   300,   300,   300,   300,
+     300,   301,   301,   302,   302,   303,   303,   303,   303,   304,
+     304,   305,   306,   307,   309,   310,   308,   308,   311,   311,
+     313,   312,   315,   314,   314,   316,   316,   317,   317,   318,
+     319,   319,   320,   320,   320,   321,   321,   321,   322,   322,
+     323,   323,   324,   325,   324,   326,   326,   326,   327,   327,
+     328,   328,   329,   329,   330,   331,   330,   330,   332,   332,
+     333,   333,   333,   333,   333,   333,   333,   333,   334,   334,
+     334,   334,   335,   336,   335,   335,   335,   335,   335,   337,
+     337,   337,   338,   338,   338,   338,   338,   338,   338,   339,
+     340,   339,   341,   341
 };
 
 /* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
 static const yytype_uint8 yyr2[] =
 {
        0,     2,     1,     0,     3,     0,     1,     3,     1,     1,
-       1,     4,     3,     0,     6,     0,     5,     3,     2,     3,
-       1,     1,     3,     2,     4,     5,     4,     0,     3,     0,
-       1,     1,     1,     4,     1,     2,     3,     0,     0,     9,
-       0,     0,    12,     0,     0,     7,     0,     0,     9,     0,
-       0,     0,    12,     0,     6,     2,     3,     2,     3,     2,
-       3,     3,     3,     3,     3,     1,     2,     5,     0,     0,
-      10,     0,     0,    10,     0,     6,     1,     0,     0,     0,
-       0,     0,    18,     3,     3,     1,     0,     1,     2,     0,
-       0,    10,     1,     3,     1,     1,     1,     0,     1,     0,
-      10,     0,     8,     0,     7,     1,     2,     2,     0,     2,
-       1,     0,     2,     0,     2,     1,     3,     0,     2,     1,
-       2,     1,     4,     1,     4,     1,     4,     3,     5,     3,
-       4,     4,     5,     0,     0,     6,     0,     5,     1,     1,
-       1,     4,     0,     0,     7,     0,     0,     8,     0,     2,
-       0,     3,     1,     0,     2,     3,     5,     4,     4,     5,
-       7,     6,     0,     1,     1,     1,     0,     1,     1,     2,
-       3,     3,     4,     3,     1,     1,     2,     4,     3,     5,
-       1,     3,     2,     0,     0,     4,     2,     0,     9,     1,
-       3,     1,     1,     0,     1,     1,     2,     1,     1,     1,
-       1,     1,     1,     3,     5,     1,     3,     5,     4,     3,
-       1,     0,     1,     0,     4,     1,     0,     7,     3,     4,
-       0,     7,     0,     4,     2,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     3,     3,     2,     2,     2,     2,
-       0,     4,     0,     4,     0,     4,     0,     4,     3,     3,
-       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
-       2,     2,     2,     2,     3,     3,     3,     3,     3,     3,
-       3,     3,     3,     3,     0,     0,     7,     0,     5,     1,
-       2,     2,     2,     2,     2,     2,     2,     2,     0,     3,
-       1,     4,     3,     2,     0,    10,     1,     0,     4,     3,
-       4,     1,     2,     0,     5,     0,     7,     0,     6,     0,
-       7,     0,     7,     0,     7,     0,     7,     0,     5,     1,
-       1,     3,     2,     1,     3,     2,     1,     1,     0,     0,
-       6,     1,     2,     0,     2,     0,     2,     3,     0,     1,
-       1,     0,     3,     1,     1,     1,     1,     1,     1,     1,
-       1,     1,     1,     3,     2,     1,     1,     3,     2,     2,
-       2,     4,     1,     3,     1,     1,     1,     3,     2,     1,
-       3,     3,     0,     2,     0,     1,     5,     3,     3,     1,
-       1,     1,     1,     1,     1,     0,     0,     7,     1,     2,
-       0,     0,     4,     0,     4,     0,     1,     2,     3,     3,
-       1,     1,     1,     1,     2,     1,     4,     4,     1,     1,
-       4,     0,     1,     1,     0,     2,     4,     4,     1,     1,
-       3,     1,     2,     3,     1,     1,     0,     5,     0,     0,
-       2,     5,     3,     3,     1,     6,     4,     4,     2,     2,
-       2,     1,     2,     1,     0,     5,     3,     3,     6,     3,
-       1,     1,     1,     4,     4,     2,     2,     4,     2,     2,
-       1,     0,     4,     3,     3
+       2,     1,     4,     3,     0,     6,     0,     5,     3,     2,
+       2,     1,     2,     5,     1,     3,     1,     3,     3,     1,
+       1,     3,     2,     4,     5,     4,     0,     3,     0,     1,
+       1,     1,     4,     1,     2,     3,     0,     0,     9,     0,
+       0,    12,     0,     0,     7,     0,     0,     9,     0,     0,
+       0,    12,     0,     6,     2,     3,     2,     3,     2,     3,
+       3,     3,     3,     3,     1,     2,     5,     0,     0,    10,
+       0,     0,    10,     0,     6,     1,     0,     0,     0,     0,
+       0,    18,     3,     3,     1,     0,     1,     2,     0,     0,
+      10,     1,     3,     1,     1,     1,     0,     1,     0,    10,
+       0,     8,     0,     7,     1,     2,     2,     0,     2,     1,
+       0,     2,     0,     2,     1,     3,     0,     2,     1,     2,
+       1,     4,     1,     4,     1,     4,     3,     5,     3,     4,
+       4,     5,     0,     0,     6,     0,     5,     1,     1,     1,
+       4,     0,     0,     7,     0,     0,     8,     0,     2,     0,
+       3,     1,     0,     2,     3,     3,     4,     5,     4,     4,
+       5,     5,     6,     7,     6,     0,     1,     1,     1,     0,
+       1,     1,     2,     2,     3,     3,     3,     4,     3,     1,
+       1,     2,     4,     3,     5,     1,     3,     2,     0,     0,
+       4,     0,     5,     2,     0,     9,     0,    10,     1,     3,
+       1,     1,     0,     1,     1,     2,     1,     1,     1,     1,
+       1,     1,     3,     5,     1,     3,     5,     4,     3,     1,
+       0,     1,     0,     4,     1,     0,     7,     3,     4,     0,
+       7,     0,     4,     2,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     3,     3,     2,     2,     2,     2,     0,
+       4,     0,     4,     0,     4,     0,     4,     3,     3,     3,
+       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
+       2,     2,     2,     3,     3,     3,     3,     3,     3,     3,
+       3,     3,     3,     0,     0,     7,     0,     5,     1,     2,
+       2,     2,     2,     2,     2,     2,     2,     0,     3,     1,
+       4,     3,     2,     0,    10,     1,     0,     4,     3,     4,
+       1,     2,     0,     5,     0,     7,     0,     6,     0,     7,
+       0,     7,     0,     7,     0,     7,     0,     5,     1,     1,
+       3,     2,     1,     3,     2,     1,     1,     0,     0,     6,
+       1,     2,     0,     2,     0,     2,     3,     0,     1,     1,
+       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
+       1,     1,     3,     2,     1,     1,     3,     2,     2,     2,
+       4,     1,     3,     1,     1,     1,     3,     2,     1,     3,
+       3,     0,     2,     0,     1,     5,     3,     3,     1,     1,
+       1,     1,     1,     1,     0,     0,     7,     1,     2,     0,
+       0,     4,     0,     4,     0,     1,     2,     3,     3,     1,
+       1,     1,     1,     2,     1,     4,     4,     1,     1,     4,
+       0,     1,     1,     0,     2,     4,     4,     1,     1,     3,
+       1,     2,     3,     1,     1,     0,     5,     0,     0,     2,
+       5,     3,     3,     1,     6,     4,     4,     2,     2,     2,
+       1,     2,     1,     0,     5,     3,     3,     6,     3,     1,
+       1,     1,     4,     4,     2,     2,     4,     2,     2,     1,
+       0,     4,     3,     3
 };
 
 /* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
@@ -1167,413 +1186,411 @@ static const yytype_uint8 yyr2[] =
 static const yytype_uint16 yydefact[] =
 {
        5,     0,     3,     1,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,   288,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,   335,     0,   343,
-     344,     6,   364,   409,    65,   345,     0,    46,     0,     0,
-       0,    74,     0,     0,     0,     0,   296,     0,     0,    77,
-       0,     0,     0,     0,     0,   319,     0,     0,     0,     0,
-     105,   110,     0,     0,   349,   350,   351,   346,   347,     0,
-       0,   352,   348,     0,     0,    76,    29,   421,   338,     0,
-     366,     4,     0,     8,    34,     9,    10,    95,    96,     0,
-       0,   381,    97,   402,     0,   369,   290,     0,   380,     0,
-     382,     0,   405,     0,   388,   401,   403,   408,     0,   279,
-     365,     6,   319,     0,    97,   459,   458,     0,   456,   455,
-     293,   260,   261,   262,   263,     0,   286,   285,   284,   283,
-     282,   281,   280,     0,     0,   320,     0,   239,   384,     0,
-     237,   224,     0,     0,   320,   326,   222,   327,     0,   331,
-     403,     0,     0,   287,     0,    35,     0,   210,     0,    43,
-     211,     0,     0,     0,    55,     0,    57,     0,     0,     0,
-      59,   381,     0,   382,     0,     0,     0,    21,     0,    20,
-     175,     0,     0,   174,   107,   106,   180,     0,     0,     0,
-       0,     0,   216,   429,   443,     0,   354,     0,     0,     0,
-     441,     0,    15,     0,   368,     0,    27,     0,   339,     0,
-     340,     0,     0,     0,   303,     0,    18,   108,   103,    98,
-       0,     0,   244,     0,   246,   274,   240,   242,     0,     0,
+       0,     0,     0,     0,     0,   307,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,   354,     0,   362,
+     363,     6,   383,   428,    74,   364,     0,    55,     0,     0,
+       0,    83,     0,     0,     0,     0,   315,     0,     0,    86,
+       0,     0,     0,     0,     0,   338,     0,     0,     0,     0,
+     114,   119,     0,     0,   368,   369,   370,   365,   366,     0,
+       0,   371,   367,     0,     0,     0,    85,    38,   440,   357,
+       0,   385,     4,     0,    21,     0,     8,    43,     9,    11,
+     104,   105,     0,     0,   400,   106,   421,     0,   388,   309,
+       0,   399,     0,   401,     0,   424,     0,   407,   420,   422,
+     427,     0,   298,   384,     6,   338,     0,   106,   478,   477,
+       0,   475,   474,   312,   279,   280,   281,   282,     0,   305,
+     304,   303,   302,   301,   300,   299,     0,     0,   339,     0,
+     258,   403,     0,   256,   243,     0,     0,   339,   345,   241,
+     346,     0,   350,   422,     0,     0,   306,     0,    44,     0,
+     229,     0,    52,   230,     0,     0,     0,    64,     0,    66,
+       0,     0,     0,    68,   400,     0,   401,     0,     0,     0,
+      30,     0,    29,   190,     0,     0,   189,   116,   115,   195,
+       0,     0,     0,     0,     0,   235,   448,   462,     0,   373,
+       0,     0,     0,   460,     0,    16,     0,   387,    22,     0,
+      36,     0,   358,     0,   359,     0,     0,     0,   322,    20,
+      10,     0,    19,   117,   112,   107,     0,     0,   263,     0,
+     265,   293,   259,   261,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,    66,   238,
-     236,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,   317,     0,   385,   411,     0,   422,   404,
-       0,     0,   289,     0,   322,     0,     0,     0,   322,     0,
-     341,     0,   328,   404,   336,     0,     0,     0,    64,     0,
-       0,     0,   212,   215,   381,   382,     0,     0,    56,    58,
-      84,     0,    60,    61,    29,    83,    23,     0,     0,    17,
-       0,   176,   382,     0,    62,     0,     0,    63,     0,    92,
-      94,   460,     0,     0,     0,   428,     0,   434,     0,   374,
-     444,     0,   353,   442,   364,     0,     0,   440,   371,   439,
-     367,     5,    12,    13,   307,   273,    36,     0,     0,   292,
-     370,     7,   166,     0,     0,   101,   111,    99,   294,   463,
-     398,   396,     0,     0,   248,     0,   277,     0,     0,     0,
-     249,   251,   250,   265,   264,   267,   266,   268,   270,   271,
-     269,   259,   258,   253,   254,   252,   255,   256,   257,   272,
-       0,   218,   235,   234,   233,   232,   231,   230,   229,   228,
-     227,   226,   225,   166,   464,   399,     0,   412,     0,     0,
-     457,   321,     0,     0,   321,   398,   166,   223,   399,     0,
-     337,    37,   209,     0,     0,    49,   213,    71,    68,     0,
-       0,    53,     0,     0,     0,     0,     0,     0,   356,     0,
-     355,    26,   362,    27,     0,    22,    19,     0,   173,   181,
-     178,     0,     0,   461,   453,   454,    11,     0,   425,     0,
-     424,   438,   383,     0,   291,   375,   430,     0,   446,     0,
-     447,   449,   305,     3,     5,   166,     0,    28,    30,    31,
-      32,   410,     0,     0,   165,   381,   382,     0,     0,     0,
-     323,   109,   113,     0,     0,     0,   162,   309,   311,   397,
-     245,   247,     0,     0,   241,   243,     0,   219,     0,   313,
-     315,   419,     0,   414,   386,   413,   418,   406,   407,     0,
-     329,    40,     0,    47,    44,   211,     0,     0,     0,     0,
-       0,     0,     0,   359,   360,   372,     0,     0,   358,     0,
-       0,    24,   177,     0,    93,    67,     0,   426,   428,     0,
-       0,   433,     0,   432,   450,   452,   451,     0,     0,   166,
-      16,     3,     0,     0,   169,   304,     0,    25,     0,   325,
-       0,     0,   112,   115,   183,   162,   164,     0,   152,     0,
-     163,   166,   166,   278,   275,   220,   318,   166,   166,     0,
-     415,   395,   411,     0,   342,   333,    29,    38,     0,     0,
-       0,   214,   117,     0,   117,   119,   127,     0,    29,   125,
-      75,   133,   133,    54,   379,     0,   374,   357,   363,     0,
-     179,   462,   428,   423,     0,   437,   436,     0,   445,     0,
-       0,    14,   308,     0,     0,   381,   382,   324,   114,   183,
-       0,   193,     0,   297,   162,     0,   154,     0,     0,     0,
-     341,     0,     0,   420,   393,   390,     0,     0,   330,    27,
-     142,     0,    29,   140,    45,    50,     0,     0,   120,     0,
-       0,    27,   133,     0,   133,     0,     0,   361,   375,   373,
-      78,     0,   217,     0,   431,   448,   306,    33,   172,   193,
-     116,     0,   197,   198,   199,   202,   201,   200,   192,   104,
-     182,   184,     0,   191,   195,     0,     0,     0,     0,     0,
-     155,     0,   310,   312,   276,   221,   314,   316,   166,   387,
-     416,   417,     0,   332,   145,   148,     0,    27,   211,   118,
-      72,    69,   128,     0,     0,     0,     0,     0,     0,   129,
-     378,   377,     0,   427,   435,   102,     0,     0,    97,   196,
-       0,   186,    29,     0,    29,     0,   158,     0,   157,     0,
-       0,   389,   334,   150,     0,     0,    39,    48,     0,     0,
-       0,     0,   126,     0,   131,     0,   138,   139,   136,   130,
-       0,    79,     0,   205,     0,     0,     0,    27,     0,   301,
-       0,    27,   159,     0,   156,   394,   391,     0,     0,     0,
-       0,   149,   141,    51,    29,   123,    73,    70,   132,   134,
-      29,   376,     0,   208,     0,     0,   185,   187,     0,   100,
-     302,     0,   298,   295,     0,   161,   395,     0,    29,     0,
-       0,     0,    27,    29,    27,     0,   206,   203,     0,   207,
-       0,   299,   160,   392,     0,    27,    42,   143,    29,   121,
-      52,     0,    27,    80,     0,   162,   300,     0,     0,    27,
-     124,     0,   204,     0,   146,   144,     0,    29,     0,    29,
-     122,    27,   189,    29,   188,    27,    81,    27,    86,   190,
-       0,    82,    85,    87,     0,    88,    89,     0,     0,    90,
-       0,    29,    27,    91
+       0,     0,     0,     0,    75,   257,   255,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,   336,
+       0,   404,   430,     0,   441,   423,     0,     0,   308,     0,
+     341,     0,     0,     0,   341,     0,   360,     0,   347,   423,
+     355,     0,     0,     0,    73,     0,     0,     0,   231,   234,
+     400,   401,     0,     0,    65,    67,    93,     0,    69,    70,
+      38,    92,    32,     0,     0,    18,     0,   191,   401,     0,
+      71,     0,     0,    72,     0,   101,   103,   479,     0,     0,
+       0,   447,     0,   453,     0,   393,   463,     0,   372,   461,
+     383,     0,     0,   459,   390,   458,   386,     5,    13,    14,
+     326,     0,   292,    45,     0,     0,   311,   389,     7,   179,
+       0,     0,   110,   120,   108,   313,   482,   417,   415,     0,
+       0,   267,     0,   296,     0,     0,     0,   268,   270,   269,
+     284,   283,   286,   285,   287,   289,   290,   288,   278,   277,
+     272,   273,   271,   274,   275,   276,   291,     0,   237,   254,
+     253,   252,   251,   250,   249,   248,   247,   246,   245,   244,
+     179,   483,   418,     0,   431,     0,     0,   476,   340,     0,
+       0,   340,   417,   179,   242,   418,     0,   356,    46,   228,
+       0,     0,    58,   232,    80,    77,     0,     0,    62,     0,
+       0,     0,     0,     0,     0,   375,     0,   374,    35,   381,
+      36,     0,    31,    28,     0,   188,   196,   193,     0,     0,
+     480,   472,   473,    12,     0,   444,     0,   443,   457,   402,
+       0,   310,   394,   449,     0,   465,     0,   466,   468,   324,
+       3,     5,   179,     0,    26,     0,    24,     0,    37,    39,
+      40,    41,   429,     0,     0,     0,   178,   400,   401,     0,
+       0,     0,   342,   118,   122,     0,     0,     0,   175,   328,
+     330,   416,   264,   266,     0,     0,   260,   262,     0,   238,
+       0,   332,   334,   438,     0,   433,   405,   432,   437,   425,
+     426,     0,   348,    49,     0,    56,    53,   230,     0,     0,
+       0,     0,     0,     0,     0,   378,   379,   391,     0,     0,
+     377,     0,     0,    33,   192,     0,   102,    76,     0,   445,
+     447,     0,     0,   452,     0,   451,   469,   471,   470,     0,
+       0,   179,    17,     3,     0,     0,    23,     0,     0,   182,
+       0,   183,   323,     0,    34,     0,   344,     0,     0,   121,
+     124,   198,   175,   177,   175,     0,   161,     0,   176,   179,
+     179,   297,   294,   239,   337,   179,   179,     0,   434,   414,
+     430,     0,   361,   352,    38,    47,     0,     0,     0,   233,
+     126,     0,   126,   128,   136,     0,    38,   134,    84,   142,
+     142,    63,   398,     0,   393,   376,   382,     0,   194,   481,
+     447,   442,     0,   456,   455,     0,   464,     0,     0,    15,
+     327,    27,    25,     0,   184,     0,   400,   401,   343,   123,
+     198,     0,   212,     0,     0,   316,   175,     0,   163,     0,
+       0,     0,   360,     0,     0,   439,   412,   409,     0,     0,
+     349,    36,   151,     0,    38,   149,    54,    59,     0,     0,
+     129,     0,     0,    36,   142,     0,   142,     0,     0,   380,
+     394,   392,    87,     0,   236,     0,   450,   467,   325,    42,
+     187,   212,   125,     0,   216,   217,   218,   221,   220,   219,
+     211,   113,   212,   197,   199,     0,   210,   214,     0,     0,
+       0,   165,     0,     0,   175,     0,   164,     0,   329,   331,
+     295,   240,   333,   335,   179,   406,   435,   436,     0,   351,
+     154,   157,     0,    36,   230,   127,    81,    78,   137,     0,
+       0,     0,     0,     0,     0,   138,   397,   396,     0,   446,
+     454,   111,     0,   201,     0,     0,   106,   215,     0,   203,
+      38,   166,     0,    38,     0,     0,   169,     0,   168,     0,
+       0,   408,   353,   159,     0,     0,    48,    57,     0,     0,
+       0,     0,   135,     0,   140,     0,   147,   148,   145,   139,
+       0,    88,     0,     0,   106,   224,     0,     0,     0,    36,
+       0,   320,     0,    36,     0,   171,   170,     0,   167,   413,
+     410,     0,     0,     0,     0,   158,   150,    60,    38,   132,
+      82,    79,   141,   143,    38,   395,     0,   227,     0,     0,
+       0,     0,   200,   204,     0,   109,   321,     0,   317,   314,
+     172,     0,   174,   414,     0,    38,     0,     0,     0,    36,
+      38,    36,     0,   202,   206,   225,   222,     0,   226,     0,
+     318,   173,   411,     0,    36,    51,   152,    38,   130,    61,
+       0,    36,    89,     0,     0,   175,   319,     0,     0,    36,
+     133,     0,   175,   223,     0,   155,   153,     0,    38,     0,
+       0,    38,   131,    36,     0,   208,    38,   205,    36,    90,
+     207,    36,    95,   209,     0,    91,    94,    96,     0,    97,
+      98,     0,     0,    99,     0,    38,    36,   100
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
-      -1,     1,     2,     4,    80,    81,   474,   341,   178,   179,
-      82,   206,   347,   477,   805,    84,   522,   660,   596,   724,
-     290,   599,   158,   598,   525,   728,   831,   532,   528,   771,
-     527,   770,   162,   174,   742,   812,   861,   878,   881,   882,
-     883,   887,   890,   318,   319,    85,    86,   220,    87,   495,
-      88,   492,   356,    89,   355,    90,   494,   571,   572,   667,
-     604,   850,   806,   610,   430,   613,   673,   833,   810,   778,
-     664,   725,   858,   763,   869,   766,   799,   577,   578,   579,
-     483,   484,   182,   183,   187,   641,   700,   747,   838,   874,
-     701,   702,   703,   704,   784,   705,   156,   291,   292,   526,
-      91,   325,   650,   280,   368,   369,   363,   365,   367,   649,
-     502,   125,   496,   114,   708,   790,    93,   352,   559,   475,
-     581,   582,   587,   588,   403,    94,   580,   146,   147,   419,
-     595,   658,   723,   153,   209,   417,    95,   441,   442,    96,
-     615,   466,   616,   172,    98,   461,    99,   100,   406,   591,
-     719,   761,   826,   655,   718,   101,   102,   103,   104,   105,
-     106,   107,   408,   514,   590,   515,   516,   108,   459,   460,
-     622,   328,   329,   199,   200,   467,   557,   109,   322,   546,
-     110
+      -1,     1,     2,     4,    81,    82,   481,   347,   494,    84,
+     485,   486,   181,   182,    85,   210,   354,   488,   839,    87,
+     534,   682,   614,   750,   296,   617,   161,   616,   537,   754,
+     868,   544,   540,   801,   539,   800,   165,   177,   768,   846,
+     901,   922,   925,   926,   927,   931,   934,   324,   325,    88,
+      89,   226,    90,   507,    91,   504,   363,    92,   362,    93,
+     506,   588,   589,   689,   622,   889,   840,   628,   437,   631,
+     695,   870,   844,   808,   686,   751,   898,   793,   911,   796,
+     833,   595,   596,   597,   495,   496,   185,   186,   190,   662,
+     723,   775,   813,   877,   893,   917,   724,   725,   726,   727,
+     816,   728,   159,   297,   298,   538,    94,   331,   672,   286,
+     375,   376,   370,   372,   374,   671,   514,   128,   508,   117,
+     733,   822,    96,   359,   571,   482,   599,   600,   605,   606,
+     410,    97,   598,   149,   150,   426,   613,   680,   749,   156,
+     213,   424,    98,   448,   449,    99,   633,   473,   634,   175,
+     101,   468,   102,   103,   413,   609,   745,   791,   863,   677,
+     744,   104,   105,   106,   107,   108,   109,   110,   415,   526,
+     608,   527,   528,   111,   466,   467,   640,   334,   335,   202,
+     203,   474,   569,   112,   328,   558,   113
 };
 
 /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
    STATE-NUM.  */
-#define YYPACT_NINF -563
+#define YYPACT_NINF -585
 static const yytype_int16 yypact[] =
 {
-    -563,    73,    85,  -563,  1470,  3756,  3756,   -99,  3756,  3756,
-    3756,  3756,  3756,  3756,  3756,  -563,  3756,  3756,  3756,  3756,
-    3756,  3756,  3756,   172,   172,  3756,   195,   -91,   -83,  -563,
-    -563,    44,  -563,  -563,  -563,  -563,  3756,  -563,   -55,    49,
-      60,  -563,    74,  2359,  2486,    36,  -563,   109,  2613,  -563,
-    3756,     7,   -36,    40,    90,   116,    76,    92,    99,   101,
-    -563,  -563,   144,   164,  -563,  -563,  -563,  -563,  -563,   187,
-     -10,  -563,  -563,   154,  3756,  -563,  -563,    87,   262,   268,
-     -81,  -563,     9,  -563,  -563,  -563,  -563,  -563,  -563,   220,
-     259,  -563,   274,  -563,   197,  -563,  -563,  4304,  -563,   240,
-    1178,   203,  -563,   212,   239,  -563,   -12,  -563,    52,  -563,
-    -563,  -563,  -563,   222,   274,  4976,  4976,  3756,  4976,  4976,
-    5076,  -563,  -563,   321,  -563,  3756,  -563,  -563,  -563,  -563,
-    -563,  -563,  -563,   230,   154,   198,   273,  -563,  -563,   279,
-    -563,  -563,   264,   154,   319,   295,  -563,  -563,   325,   296,
-     -35,    52,  2740,  -563,  3756,  -563,    12,  4976,  2232,  -563,
-    3756,  3756,   324,  3756,  -563,  4345,  -563,  4386,   327,   458,
-    -563,   328,  4976,   479,   329,  4427,   154,    54,    14,  -563,
-    -563,   138,    15,  -563,  -563,  -563,   459,    16,   172,   172,
-     172,   332,  -563,  2867,   127,   180,  -563,  3883,   172,   234,
-    -563,   154,  -563,   243,   -63,  4468,   330,  3756,   190,   333,
-     277,   190,   156,   409,  -563,   410,  -563,   366,  -563,  -563,
-     -29,    35,  -563,  3756,  -563,   460,  -563,  -563,  3756,  3756,
-    3756,  3756,  3756,  3756,  3756,  3756,  3756,  3756,  3756,  3756,
-    3756,  3756,  3756,  3756,  3756,  3756,  3756,   195,  -563,  -563,
-    -563,  2994,  3756,  3756,  3756,  3756,  3756,  3756,  3756,  3756,
-    3756,  3756,  3756,  -563,    46,  -563,  3756,  3756,    87,   -30,
-     346,  4509,  -563,   154,   252,    58,   111,   154,   319,    53,
-     362,    53,  -563,   -16,  -563,  4550,  4591,  3756,  -563,   426,
-    3756,   364,   501,  4976,   423,  1091,   446,  4632,  -563,  -563,
-    -563,   926,  -563,  -563,  -563,  -563,    62,   448,     7,  -563,
-    3756,  -563,  -563,   -36,  -563,   926,   449,  -563,     8,  -563,
-    -563,  -563,    24,   380,   383,    72,   172,  4837,   385,   524,
-    -563,   463,  -563,  -563,   474,   411,   387,  -563,  -563,  -563,
-      70,  -563,  -563,  -563,  -563,  -563,  -563,  1597,  4052,  -563,
-    -563,  -563,  3121,   529,     5,  -563,   429,  -563,  -563,   417,
-     418,   -16,    52,  3756,  5053,  3756,  -563,  3756,  3756,  3756,
-    2409,  2536,  2661,  2788,  2788,  2788,  2788,  1313,  1313,  1313,
-    1313,   512,   512,   339,   339,   339,   321,   321,   321,  -563,
-     -20,  5076,  5076,  5076,  5076,  5076,  5076,  5076,  5076,  5076,
-    5076,  5076,  5076,  3121,   420,   421,   -13,  4976,   414,  4093,
-    -563,   282,   417,   420,   319,  -563,  3121,  -563,  -563,   -13,
-    -563,   544,  4976,   427,  4673,  -563,  -563,  -563,  -563,   558,
-      26,  -563,   926,   926,   428,   -45,   432,   154,   -88,   439,
-    -563,  -563,  -563,   433,   510,  -563,  -563,  4138,  -563,  -563,
-     570,   172,   447,  -563,  -563,  -563,  -563,   440,  -563,    27,
-    -563,  -563,  -563,  3248,  -563,  3375,  -563,   168,  -563,  3756,
-    -563,  -563,  -563,   451,  -563,  3121,   450,  -563,  -563,  -563,
-    -563,  -563,   172,   452,   588,    28,    80,   926,   462,   154,
-     319,  -563,   482,     5,   456,   465,   210,  -563,  -563,   -16,
-    5016,  5076,  3756,  4935,  5098,  5119,   195,  -563,   461,  -563,
-    -563,  -563,  3756,  -563,  -563,    -6,  -563,  -563,  -563,   466,
-    -563,  -563,  2232,  -563,  -563,  3756,  3756,   172,   160,   926,
-     537,  1724,    -1,  -563,  -563,   926,   478,   154,   -69,   545,
-     516,  -563,  -563,   926,  -563,  -563,   172,  -563,    72,   606,
-     172,  4976,   172,  4878,  -563,  -563,  -563,   470,  4011,  3121,
-    -563,   475,   483,   484,  -563,  -563,  3502,  -563,   154,   319,
-       5,   477,   620,  -563,  -563,   210,  -563,   485,   627,    13,
-    -563,  3121,  3121,  1283,  -563,  -563,  -563,  3121,  3121,  4179,
-    -563,   492,  3756,  3756,  -563,  -563,  -563,  -563,  3756,  1851,
-     493,  4976,   519,   172,   519,  -563,  -563,   629,  -563,  -563,
-    -563,   497,   498,  -563,   526,   500,   641,   -61,  -563,   505,
-    -563,  -563,    72,  -563,  3756,  -563,  -563,  3629,  -563,   502,
-     506,  -563,  -563,   509,   172,    30,   913,   319,   620,  -563,
-       5,   615,   511,   555,   146,   599,   668,   538,   539,  3756,
-     362,   540,   541,  -563,  -563,  -563,   530,  4220,   569,   291,
-    -563,  4714,  -563,  -563,  -563,  -563,   160,   546,  -563,   549,
-     926,   602,  -563,   300,  -563,   107,   926,  -563,   926,  -563,
-    -563,    31,  5076,   172,  4976,  -563,  -563,  -563,  -563,   669,
-    -563,   625,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,
-    -563,  -563,   601,   480,  -563,    21,   556,   552,   561,   159,
-     690,   926,  -563,  -563,  1283,  -563,  -563,  -563,  3121,   585,
-    -563,  -563,   -13,  -563,  -563,   363,   565,   630,  3756,  -563,
-    -563,  -563,  -563,   568,   311,   571,  3756,     1,   227,  -563,
-    -563,   594,     5,  -563,  -563,  -563,   704,   655,   274,  -563,
-     658,  -563,  -563,   207,  -563,   660,   717,   926,  -563,   589,
-     -13,  -563,  -563,   365,   592,  2232,  -563,  -563,   591,   596,
-    1978,  1978,  -563,   597,  -563,  4263,  -563,  -563,  -563,  -563,
-     926,  -563,   926,   732,    22,   675,   734,   604,   677,  -563,
-      33,   605,   735,   926,  -563,  -563,  -563,   610,   725,   688,
-    3756,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,
-    -563,  -563,   685,  -563,   926,   687,  -563,  -563,   926,  -563,
-    -563,   238,  -563,  -563,   926,  -563,   492,  3756,  -563,   614,
-    4755,  2105,   676,  -563,   -27,   616,  -563,   753,   626,  -563,
-     699,  -563,  -563,  -563,  4796,   705,  -563,  -563,  -563,  -563,
-    -563,   636,   269,  -563,   926,   210,  -563,   758,  2232,   700,
-    -563,   638,  -563,   642,  -563,  -563,   640,  -563,   286,  -563,
-    -563,   643,  -563,  -563,  -563,   357,  -563,   644,   692,  -563,
-     645,  -563,   692,  -563,     5,  -563,  -563,   716,   650,  -563,
-     649,  -563,   651,  -563
+    -585,    40,    45,  -585,  1370,  3660,  3660,  -132,  3660,  3660,
+    3660,  3660,  3660,  3660,  3660,  -585,  3660,  3660,  3660,  3660,
+    3660,  3660,  3660,   298,   298,  3660,   356,   -92,   -75,  -585,
+    -585,    59,  -585,  -585,  -585,  -585,  3660,  -585,    43,    57,
+      80,  -585,    96,  2390,  2517,   179,  -585,   206,  2644,  -585,
+    3660,    51,    -4,   195,   219,   190,   210,   213,   251,   260,
+    -585,  -585,   268,   272,  -585,  -585,  -585,  -585,  -585,   163,
+     145,  -585,  -585,   353,   359,  3660,  -585,  -585,   284,   226,
+     321,   -87,  -585,   539,  -585,    10,  -585,  -585,  -585,  -585,
+    -585,  -585,   369,   376,  -585,   406,  -585,   323,  -585,  -585,
+    4252,  -585,   307,  1290,   320,  -585,   332,   354,  -585,   -19,
+    -585,   103,  -585,  -585,  -585,  -585,   340,   406,  4926,  4926,
+    3660,  4926,  4926,  5026,  -585,  -585,   447,  -585,  3660,  -585,
+    -585,  -585,  -585,  -585,  -585,  -585,   347,   353,   139,   361,
+    -585,  -585,   362,  -585,  -585,   355,   353,   375,   373,  -585,
+    -585,   381,   413,    48,   103,  2771,  -585,  3660,  -585,    11,
+    4926,  2136,  -585,  3660,  3660,   348,  3660,  -585,  4294,  -585,
+    4335,   379,   523,  -585,   395,  4926,   366,   396,  4376,   353,
+      94,    14,  -585,  -585,   297,    15,  -585,  -585,  -585,   537,
+      16,   298,   298,   298,   404,  -585,  2898,    92,   264,  -585,
+    3787,   298,   350,  -585,   353,  -585,   -84,   398,   407,  4418,
+     405,  3660,   223,   416,   442,   223,   113,   488,  -585,  -585,
+    -585,   494,  -585,   455,  -585,  -585,   -15,   -22,  -585,  3660,
+    -585,   553,  -585,  -585,  3660,  3660,  3660,  3660,  3660,  3660,
+    3660,  3660,  3660,  3660,  3660,  3660,  3660,  3660,  3660,  3660,
+    3660,  3660,  3660,   356,  -585,  -585,  -585,  3025,  3660,  3660,
+    3660,  3660,  3660,  3660,  3660,  3660,  3660,  3660,  3660,  -585,
+      42,  -585,  3660,  3660,   284,    55,   448,  4459,  -585,   353,
+     169,   123,   135,   353,   375,   141,   451,   141,  -585,   -32,
+    -585,  4500,  4541,  3660,  -585,   509,  3660,   459,   600,  4926,
+     520,   990,   540,  4582,  -585,  -585,  -585,  1085,  -585,  -585,
+    -585,  -585,   125,   551,    51,  -585,  3660,  -585,  -585,    -4,
+    -585,  1085,   555,  -585,     8,  -585,  -585,  -585,    13,   479,
+     486,   342,   298,  4787,   490,   627,  -585,   568,  -585,  -585,
+     581,  3957,   495,  -585,  -585,  -585,   449,  -585,  -585,  -585,
+    -585,   -38,  -585,  -585,  1497,  3998,  -585,  -585,  -585,  2263,
+     631,    83,  -585,   534,  -585,  -585,   512,   513,   -32,   103,
+    3660,  5003,  3660,  -585,  3660,  3660,  3660,  2313,  2440,  2565,
+    2692,  2692,  2692,  2692,  1488,  1488,  1488,  1488,   674,   674,
+     584,   584,   584,   447,   447,   447,  -585,   146,  5026,  5026,
+    5026,  5026,  5026,  5026,  5026,  5026,  5026,  5026,  5026,  5026,
+    2263,   524,   525,   119,  4926,   501,  4044,  -585,   247,   512,
+     524,   375,  -585,  2263,  -585,  -585,   119,  -585,   647,  4926,
+     528,  4623,  -585,  -585,  -585,  -585,   668,    26,  -585,  1085,
+    1085,   541,   134,   547,   353,   100,   543,  -585,  -585,  -585,
+     535,   623,  -585,  -585,  4085,  -585,  -585,   683,   298,   549,
+    -585,  -585,  -585,  -585,   566,  -585,    27,  -585,  -585,  -585,
+    3152,  -585,  3279,  -585,   149,  -585,  3660,  -585,  -585,  -585,
+     550,  -585,  2263,   700,  -585,   575,   717,   580,  -585,  -585,
+    -585,  -585,  -585,   298,   114,   583,   723,    28,    60,  1085,
+     589,   353,   375,  -585,   614,    83,   587,   591,   384,  -585,
+    -585,   -32,  4966,  5026,  3660,  4885,  5071,  5092,   356,  -585,
+     597,  -585,  -585,  -585,  3660,  -585,  -585,    -3,  -585,  -585,
+    -585,   601,  -585,  -585,  2136,  -585,  -585,  3660,  3660,   298,
+     419,  1085,   667,  1625,     1,  -585,  -585,  1085,   613,   353,
+     232,   678,   649,  -585,  -585,  1085,  -585,  -585,   298,  -585,
+     342,   739,   298,  4926,   298,  4828,  -585,  -585,  -585,   607,
+    3916,  2263,  -585,   615,   619,   688,  -585,   -38,   621,  -585,
+     298,  -585,  -585,  3406,  -585,   353,   375,    83,   620,   754,
+    -585,  -585,   384,  -585,   432,   626,   766,   215,  -585,  2263,
+    2263,  5049,  -585,  -585,  -585,  2263,  2263,  4126,  -585,   629,
+    3660,  3660,  -585,  -585,  -585,  -585,  3660,  1753,   630,  4926,
+     654,   298,   654,  -585,  -585,   768,  -585,  -585,  -585,   634,
+     635,  -585,   657,   639,   780,   252,  -585,   645,  -585,  -585,
+     342,  -585,  3660,  -585,  -585,  3533,  -585,   642,   650,  -585,
+    -585,  -585,  -585,   646,  -585,   298,    30,   120,   375,   754,
+    -585,    83,   596,   652,   222,   691,   432,   727,   789,   656,
+     659,  3660,   451,   660,   661,  -585,  -585,  -585,   655,  4168,
+     689,    -5,  -585,  4664,  -585,  -585,  -585,  -585,   419,   664,
+    -585,   666,  1085,   725,  -585,   521,  -585,   311,  1085,  -585,
+    1085,  -585,  -585,    35,  5026,   298,  4926,  -585,  -585,  -585,
+    -585,   648,  -585,   744,  -585,  -585,  -585,  -585,  -585,  -585,
+    -585,  -585,   476,  -585,  -585,   718,   747,  -585,    18,   669,
+     750,  -585,   679,   675,   432,   230,   813,  1085,  -585,  -585,
+    5049,  -585,  -585,  -585,  2263,   707,  -585,  -585,   119,  -585,
+    -585,   240,   682,   749,  3660,  -585,  -585,  -585,  -585,   685,
+     574,   686,  3660,     4,   411,  -585,  -585,   713,    83,  -585,
+    -585,  -585,   824,  -585,   718,   767,   406,  -585,   770,  -585,
+    -585,  -585,   241,  -585,   279,   769,   830,  1085,  -585,   699,
+     119,  -585,  -585,   344,   703,  2136,  -585,  -585,   702,   705,
+    1881,  1881,  -585,   711,  -585,  4211,  -585,  -585,  -585,  -585,
+    1085,  -585,  1085,   767,   406,   848,    23,   791,   851,   719,
+     794,  -585,    36,   720,   800,  -585,   863,  1085,  -585,  -585,
+    -585,   732,   854,   816,  3660,  -585,  -585,  -585,  -585,  -585,
+    -585,  -585,  -585,  -585,  -585,  -585,   812,  -585,    24,   815,
+    1085,   817,  -585,  -585,  1085,  -585,  -585,   322,  -585,  -585,
+    -585,  1085,  -585,   629,  3660,  -585,   740,  4705,  2009,   802,
+    -585,   417,   745,  -585,  -585,  -585,   878,   748,  -585,   822,
+    -585,  -585,  -585,  4746,   828,  -585,  -585,  -585,  -585,  -585,
+     751,   454,  -585,   752,  1085,   384,  -585,   871,  2136,   818,
+    -585,   757,   384,  -585,   761,  -585,  -585,   764,  -585,   762,
+     295,  -585,  -585,   763,   295,  -585,  -585,  -585,   612,  -585,
+    -585,   765,   819,  -585,   771,  -585,   819,  -585,    83,  -585,
+    -585,   841,   772,  -585,   773,  -585,   774,  -585
 };
 
 /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
-    -563,  -563,  -293,  -563,   -23,  -563,  -563,  -563,  -563,   491,
-    -563,  -264,  -563,  -563,     2,  -563,  -563,  -563,  -563,  -563,
-    -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,
-    -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,
-     -80,  -563,  -563,  -563,   352,   457,   467,  -109,  -563,  -563,
-    -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,   235,   202,
-     142,  -563,    39,  -563,  -563,  -563,  -376,  -563,  -563,    37,
-    -563,  -563,  -563,  -563,  -563,  -563,  -563,  -562,  -563,   175,
-    -395,  -563,  -563,   503,  -563,   183,  -563,  -563,  -563,  -563,
-    -563,  -563,  -563,   120,  -563,  -563,  -563,  -510,  -563,  -563,
-     -38,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,  -563,
-    -563,  -563,  -563,     0,  -563,  -563,  -563,  -563,  -563,  -563,
-    -563,  -563,  -563,  -563,  -563,   551,  -343,  -229,  -563,  -563,
-    -563,  -563,  -563,  -563,  -563,   174,  -160,   278,  -563,  -563,
-    -563,   209,  -563,   657,   646,  -463,   438,   820,  -563,  -563,
-    -563,  -563,  -563,     3,  -563,  -207,  -563,    86,  -563,   -19,
-     -24,  -563,   236,  -407,  -563,  -563,  -563,   -17,   204,   287,
-    -563,  -563,  -563,   389,   169,  -563,  -563,  -563,  -563,  -563,
-    -563
+    -585,  -585,  -330,  -585,   -23,  -585,  -585,  -585,    -2,   -72,
+    -585,   341,  -585,   606,  -585,   -48,  -585,  -585,     6,  -585,
+    -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,
+    -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,
+    -585,  -585,  -585,  -585,    -1,  -585,  -585,  -585,   465,   573,
+     -74,  -113,  -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,
+    -585,  -585,   343,   306,   243,  -585,   128,  -585,  -585,  -585,
+    -584,  -585,  -585,   127,  -585,  -585,  -585,  -585,  -585,  -585,
+    -585,  -544,  -585,  -569,  -371,  -585,  -585,   616,  -585,   273,
+    -585,  -585,  -585,  -585,  -585,    20,   214,   217,  -585,   211,
+     129,  -585,  -585,  -522,  -585,  -585,    41,  -585,  -585,  -585,
+    -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,     3,
+    -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,  -585,
+    -585,   408,  -356,  -245,  -585,  -585,  -585,  -585,  -585,  -585,
+    -585,   269,   544,   554,  -585,  -585,  -585,   309,  -585,    82,
+     760,  -456,   445,   579,  -585,  -585,  -585,  -585,  -585,    88,
+    -585,  -215,  -585,   628,  -585,   -20,    -6,  -585,   335,  -413,
+    -585,  -585,  -585,   192,   312,   393,  -585,  -585,  -585,   401,
+     474,  -585,  -585,  -585,  -585,  -585,  -585
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
    number is the opposite.  If zero, do what YYDEFACT says.
    If YYTABLE_NINF, syntax error.  */
-#define YYTABLE_NINF -401
+#define YYTABLE_NINF -420
 static const yytype_int16 yytable[] =
 {
-     135,   135,   150,   144,    92,   270,    83,   149,   508,   151,
-     171,   491,   520,   642,   360,   600,   451,   215,   389,   564,
-     287,   519,   308,   313,   316,   611,   266,   776,   177,   750,
-     815,   266,   453,   536,   530,   548,  -167,   180,  -170,   548,
-     443,   821,   357,   506,   645,   266,   117,   203,   473,   266,
-     204,   111,  -320,    33,   152,   592,   213,   405,   511,  -320,
-      33,   111,   154,   213,   214,  -137,  -137,  -137,   360,   405,
-     155,  -322,   415,     3,   418,   213,   111,  -322,   111,  -321,
-     562,   213,   344,   213,   269,    -2,   646,   625,  -168,   626,
-     159,   112,   196,   251,   252,   253,   254,   255,   256,   257,
-     258,   259,   260,   261,   262,  -400,   359,   168,    33,   139,
-     139,   274,   148,   267,   181,  -397,   358,   404,   267,    33,
-     278,   133,  -137,   294,   134,    33,    33,   283,  -400,   412,
-      77,    33,   267,  -396,   201,   512,   267,    77,   202,  -384,
-    -384,   440,   593,   111,   307,    33,   488,   612,   777,   489,
-     573,   176,   444,   306,   452,   440,   216,   184,   135,   288,
-     289,   309,   314,   317,   630,   135,   135,   135,   751,   816,
-     454,   688,   531,   549,  -167,   135,  -170,   743,   340,   822,
-     169,   561,   413,   112,    33,    77,   647,   648,   330,   186,
-     755,   603,   651,   652,   160,   457,    77,   361,   213,   513,
-     736,   737,   268,    77,   362,   161,   213,   185,    77,   111,
-    -321,    33,   513,   133,   213,   472,   134,   111,   769,   163,
-     744,   188,    77,   150,   144,   111,  -168,   573,   149,   194,
-     151,   111,   756,    33,   337,   207,   675,   189,   788,   554,
-     361,   555,   556,   111,   190,    33,   191,   362,   331,   112,
-     411,   361,   361,   194,   414,   361,   739,   361,   362,   362,
-     194,    77,   362,   194,   362,   195,   111,   139,    33,   840,
-     576,   112,   440,   440,   139,   139,   139,   585,   438,   133,
-     789,   111,   134,   112,   139,   177,   310,   488,    77,   192,
-     489,   217,   438,   863,   197,   198,   734,   690,   738,   249,
-     250,   133,   135,   135,   134,   219,   112,   194,   350,   193,
-      77,   841,   337,   133,   485,   762,   134,   332,   197,   198,
-     736,   737,    77,   759,   196,   197,   198,   440,   197,   198,
-     218,   490,   659,   148,   576,   194,   142,   221,   499,   143,
-     208,   194,   213,   214,   671,    77,   211,    92,   263,   478,
-     194,   488,   264,   796,   489,   337,  -153,   -41,   -41,   -41,
-     265,  -135,  -135,  -135,   333,   485,   201,   135,   339,   440,
-     247,   338,   197,   198,   273,   440,   779,   333,   485,   339,
-     333,   339,   361,   440,   244,   245,   246,   213,   247,   362,
-     342,   343,   735,   736,   737,   361,   213,   344,   727,   781,
-     197,   198,   362,   773,   736,   737,   197,   198,   277,   438,
-     438,   139,   139,   275,   538,   197,   198,   282,  -135,   276,
-     222,   223,   224,  -147,  -147,  -147,   213,   472,   135,   764,
-     765,   797,   798,   872,   873,   279,   225,   485,   226,   227,
-     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
-     238,   239,   240,   241,   242,   243,   244,   245,   246,   135,
-     247,   137,   140,   213,   438,   281,   569,   210,   212,   296,
-     490,   301,   315,   490,   300,   302,   139,   304,   324,   346,
-     351,   353,   150,   144,   349,   354,   366,   149,   787,   151,
-     791,   358,   251,   252,   253,   254,   255,   256,   257,   258,
-     259,   260,   261,   262,   135,   135,   438,   416,   423,   426,
-     440,   425,   438,   427,   617,   513,   440,   429,   440,   445,
-     438,   485,   450,   135,   597,   135,   455,   135,   635,   135,
-     456,   464,   465,   609,   468,   469,   471,   139,  -384,  -384,
-     832,   886,   487,   485,   485,   637,   834,   490,   493,   485,
-     485,   440,   490,   513,   241,   242,   243,   244,   245,   246,
-     470,   247,   497,   498,   845,   509,   510,   517,   139,   852,
-     521,   529,   523,   535,   136,   136,   537,   145,  -194,   539,
-     135,   541,   540,   543,   859,   547,   692,   693,   694,   695,
-     696,   697,   148,   449,   545,   563,   566,   440,   565,   135,
-     560,   663,   570,   871,   574,   875,   568,   586,   607,   877,
-     575,   135,   594,   139,   139,   332,   618,   490,   619,   624,
-     440,   490,   440,   628,   631,   639,   303,   892,   640,   632,
-     633,   643,   139,   440,   139,   644,   139,   654,   139,   785,
-     665,   666,   670,   135,   672,   674,   677,   438,   676,   678,
-     680,   685,   686,   438,   440,   438,   687,   706,   440,   707,
-     135,    97,   115,   116,   440,   118,   119,   120,   121,   122,
-     123,   124,   710,   126,   127,   128,   129,   130,   131,   132,
-     485,   711,   141,   720,   712,   713,   716,   717,   438,   139,
-     722,   733,   730,   157,   440,   731,   746,   753,   361,    46,
-     165,   167,   748,   757,   752,   362,   760,   175,   139,   754,
-     533,   534,   767,   768,   691,   772,   780,   782,   774,   490,
-     139,   692,   693,   694,   695,   696,   697,   698,   783,   786,
-     793,   205,   136,   792,   438,   795,   361,   800,   802,   136,
-     136,   136,   803,   362,   808,   814,   817,   818,   824,   136,
-     820,   828,   139,   819,   823,   827,   829,   438,   835,   438,
-     837,   846,   853,   851,   699,   567,   854,   801,   691,   139,
-     438,   855,   856,  -151,   271,   692,   693,   694,   695,   696,
-     697,   698,   272,   860,   864,   866,   867,   870,   868,   888,
-     884,   438,   876,   879,   880,   438,   889,   891,   145,   446,
-     893,   438,   885,   544,   479,   638,   669,   606,   729,   285,
-     807,   286,   809,   614,   480,    97,   448,   293,   745,   709,
-     297,   620,   689,   749,   715,   679,   681,   311,   656,   843,
-       0,   438,   490,   849,     0,   623,     0,     0,     0,     0,
-       0,     0,     0,   138,   138,     0,     0,     0,     0,     0,
-     327,     0,   439,     0,   335,     0,     0,     0,     0,     0,
-     865,   490,     0,     0,   348,     0,   439,     0,   173,     0,
-       0,     0,     0,     0,     0,     0,   136,   136,     0,     0,
-     364,     0,     0,     0,     0,   370,   371,   372,   373,   374,
-     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
-     385,   386,   387,   388,     0,     0,     0,     0,   391,   392,
-     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
-       0,  -171,     0,   407,   409,     0,   251,   252,   253,   254,
-     255,   256,   257,   258,   259,   260,   261,   262,     0,     0,
-       0,   136,     0,     0,   422,     0,     0,   424,   732,     0,
-       0,     0,     0,     0,   740,     0,   741,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,   447,   432,   433,
-       0,     0,  -384,  -384,     0,     0,     0,     0,     0,     0,
-       0,   295,     0,   439,   439,     0,     0,     0,     0,   758,
-       0,     0,     0,     0,     0,    29,    30,   111,     0,     0,
-       0,   312,   136,     0,    97,    35,     0,     0,   320,   321,
-     323,     0,     0,     0,     0,     0,     0,     0,   336,     0,
-     500,     0,   501,     0,   503,   504,   505,     0,     0,     0,
-       0,     0,     0,   136,     0,   794,     0,   112,   439,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     434,    64,    65,    66,    67,    68,     0,   145,   811,  -171,
-     813,     0,   435,     0,     0,     0,     0,   436,    71,    72,
-     437,   825,     0,     0,     0,     0,     0,     0,   136,   136,
-     439,     0,     0,     0,     0,     0,   439,     0,     0,     0,
-       0,     0,   836,     0,   439,     0,   839,   136,     0,   136,
-       0,   136,   842,   136,   251,   252,   253,   254,   255,   256,
-     257,   258,   259,   260,   261,   262,     0,     0,     0,     0,
-     551,     0,   553,     0,     0,     0,   558,     0,     0,     0,
-       0,     0,   862,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,   458,   462,     0,     0,     0,
-    -384,  -384,     0,     0,   136,     0,     0,     0,     0,   583,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,   589,
-       0,     0,   486,   136,     0,     0,     0,     0,     0,    97,
-       0,   428,   293,   601,     0,   136,     0,     0,    97,     0,
-       0,   251,   252,   253,   254,   255,   256,   257,   258,   259,
-     260,   261,   262,     0,     0,     0,     0,     0,     0,     0,
-     507,     0,     0,     0,     0,     0,     0,   136,     0,     0,
-       0,   439,     0,   486,     0,     0,     0,   439,     0,   439,
-       0,     0,     0,     0,   136,     0,   486,  -384,  -384,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,   407,
-     657,     0,     0,     0,     0,   661,    97,     0,     0,     0,
-       0,     0,   439,     0,     0,     0,     0,     0,     0,     0,
-       0,   320,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,   682,     0,     0,   684,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,   486,     0,     0,     0,     0,
-       0,     0,   462,     0,     0,     0,   714,     0,   439,     0,
-     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
-     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
-     246,   439,   247,   439,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,   439,     0,     0,   602,   605,  -401,
-    -401,  -401,  -401,   239,   240,   241,   242,   243,   244,   245,
-     246,     0,   247,     0,     0,   439,   621,     0,   458,   439,
-     462,     0,   462,     0,     0,   439,     0,     0,     0,   486,
-       0,     0,     0,     0,     0,   293,   636,     0,     0,     0,
-       0,     0,     0,   775,     0,     0,     0,     0,     0,     0,
-       0,   486,   486,     0,     0,   439,     0,   486,   486,     0,
+     138,   138,    83,   147,   276,   503,   152,    95,   396,   220,
+      86,   219,   367,   532,   120,   618,   458,   480,   221,   293,
+     153,   460,   314,   319,   322,   664,   778,   629,   180,   272,
+     806,   851,   851,   483,   542,   560,  -180,   579,  -185,   520,
+       3,   484,   272,   560,   857,    -2,   697,   206,   663,   366,
+     207,    33,   531,  -339,   155,   412,   364,   217,   610,   218,
+     217,   -50,   -50,   -50,   348,   349,   367,   412,  -181,   183,
+     422,   157,   425,   257,   258,   259,   260,   261,   262,   263,
+     264,   265,   266,   267,   268,   158,   100,   118,   119,   174,
+     121,   122,   123,   124,   125,   126,   127,   735,   129,   130,
+     131,   132,   133,   134,   135,   275,   643,   144,   644,   272,
+     760,   574,   764,   411,   280,    33,   272,   273,   160,  -403,
+    -403,  -419,   114,   284,   654,   168,   170,  -415,  -186,    78,
+     273,   365,   178,   257,   258,   259,   260,   261,   262,   263,
+     264,   265,   266,   267,   268,   580,   611,   184,   289,   590,
+     630,   573,   807,   336,   114,   459,   312,   209,   222,   294,
+     461,   138,   315,   320,   323,   784,   779,   295,   138,   138,
+     138,   852,   873,   543,   561,  -180,    33,  -185,   138,  -403,
+    -403,   346,   769,   858,   313,   114,   197,    33,  -419,   162,
+     523,   343,    33,    78,   419,   179,    33,   273,   525,   710,
+     648,  -416,   277,   163,   273,   300,   420,  -181,    33,   518,
+     278,   525,   548,   337,    33,   451,   114,   114,   154,    33,
+     566,   368,   567,   568,   500,   115,   164,   501,   669,   670,
+     147,   590,   799,   152,   673,   674,   197,   291,   217,   292,
+    -339,   198,   166,   100,   217,   299,   667,   153,   303,   770,
+     171,   200,   201,   730,   274,   136,   418,   115,   137,    74,
+     421,   785,   450,   189,   368,    78,   357,  -186,   524,   217,
+      78,   199,   820,   603,    78,   368,   368,   172,   333,   368,
+     491,   368,   341,   217,   445,   218,    78,   136,   668,   204,
+     137,   180,    78,   355,   205,   731,   197,    78,   445,   197,
+     199,   200,   201,   786,   212,   712,   794,   795,   138,   138,
+     824,   371,   187,   217,   821,   350,   377,   378,   379,   380,
+     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
+     391,   392,   393,   394,   395,   792,   188,   197,   502,   398,
+     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
+     409,   904,   825,   879,   414,   416,   191,    95,   909,   192,
+     489,   200,   201,   511,   200,   201,   255,   256,   114,   114,
+      33,    33,  -341,   789,   138,   429,   217,   830,   431,   257,
+     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
+     268,   217,  -340,   479,   197,   880,   217,   193,   454,   215,
+     497,   338,   200,   201,   762,   763,   194,   368,   115,   115,
+     831,   832,   811,   114,   195,    33,   445,   445,   196,   369,
+     368,   550,   219,   197,   114,  -403,  -403,   114,   343,    33,
+     208,   139,   139,   211,   148,   138,   100,   225,   136,   136,
+     223,   137,   137,   915,   916,   154,   316,   224,    78,    78,
+     621,   497,   512,   115,   513,   114,   515,   516,   517,   200,
+     201,   765,   369,   227,   497,   464,   269,   115,   140,   143,
+     138,   138,   270,   369,   369,   271,   445,   369,   586,   369,
+     214,   216,   502,   136,   204,   502,   137,   344,   200,   201,
+     114,   279,    33,    78,   302,   147,   253,   145,   152,   283,
+     146,   281,   282,   114,   762,   763,   594,    78,   593,  -146,
+    -146,  -146,   153,   285,   309,   197,   138,   138,   445,   217,
+     343,   287,   219,   497,   445,   500,   635,   306,   501,    74,
+     115,  -162,   445,   525,   288,   138,   307,   138,  -341,   138,
+     615,   138,   217,   308,   350,   310,  -144,  -144,  -144,   627,
+     321,   330,   563,   351,   565,   353,   593,   138,   570,   358,
+     136,   809,   658,   137,   502,   360,   681,  -146,   356,   502,
+      78,   502,   930,   500,   361,   525,   501,    74,   693,   373,
+     200,   201,   714,   715,   716,   717,   718,   719,   720,  -340,
+     594,   430,   139,   217,   365,   479,   601,   423,   138,   139,
+     139,   139,   141,   141,  -144,   369,   607,   432,   433,   139,
+     434,   436,   497,   761,   762,   763,   100,   138,   369,   299,
+     619,    74,   452,   685,   656,   100,   462,   176,   457,   250,
+     251,   252,   138,   253,   463,   472,   753,   471,   502,   475,
+     497,   497,   476,   502,   499,   478,   497,   497,    53,    54,
+     219,   142,   142,   505,   151,   529,    60,    61,   509,   510,
+     722,   148,   219,   817,   734,   138,   803,   762,   763,   445,
+     521,   522,   339,   533,   535,   445,   345,   445,  -156,  -156,
+    -156,   541,   138,   551,    74,   552,   339,   547,   345,   339,
+     345,   549,   414,   679,   553,   713,   555,   557,   683,   100,
+     572,   849,   714,   715,   716,   717,   718,   719,   720,   722,
+     154,   502,   559,   575,   445,   446,   247,   248,   249,   250,
+     251,   252,   576,   253,   704,   577,   578,   706,   776,   446,
+     582,   583,   819,   585,   587,   823,   591,   592,   625,   139,
+     139,    74,   368,   301,   604,   502,   721,   713,   612,   636,
+     338,   637,   642,   740,   714,   715,   716,   717,   718,   719,
+     720,   646,   661,   318,   445,   649,   650,   651,   653,   660,
+     326,   327,   329,   665,   666,   676,   688,   814,   687,   698,
+     342,   692,   694,   696,   368,   497,   699,   445,   700,   445,
+     869,   702,   707,    74,   709,   732,   871,   708,   771,   729,
+     736,   835,   737,   738,   445,   139,   739,   742,   743,   746,
+     748,   756,   142,   757,   759,   772,    46,   884,   780,   142,
+     142,   142,   891,   781,   783,   782,   787,   445,   790,   142,
+     797,   445,   798,   802,   804,   810,   299,   812,   445,   899,
+     815,   818,   826,   827,   805,  -213,   829,   446,   446,   834,
+     836,   447,   837,   714,   715,   716,   717,   718,   719,   842,
+     913,   850,   853,   918,   854,   447,   139,   856,   921,   855,
+     859,   445,   502,   860,   888,   456,   861,   100,   864,   502,
+     865,   151,   100,   100,   866,   872,   874,   936,   885,   890,
+     876,   894,   892,   594,   895,   896,  -160,   905,   902,   900,
+     594,   139,   139,   907,   906,   502,   908,   446,   910,   914,
+     465,   469,   912,   919,   932,   923,   867,   928,   652,   933,
+     453,   924,   935,   556,   937,   929,   148,   490,   691,   841,
+     659,   755,   843,   711,   920,   455,   773,   777,   498,   774,
+     369,   741,   848,   701,   317,   678,   883,   139,   139,   446,
+     100,   882,   703,   641,     0,   446,     0,     0,     0,   142,
+     142,     0,     0,   446,     0,     0,   139,     0,   139,     0,
+     139,     0,   139,     0,     0,     0,   519,     0,     0,     0,
+     100,     0,   369,   447,   447,     0,     0,     0,   139,   498,
+       0,     0,     0,   545,   546,     0,     0,     0,     0,     0,
+       0,     0,   498,   257,   258,   259,   260,   261,   262,   263,
+     264,   265,   266,   267,   268,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,   142,     0,     0,     0,   139,
+       0,     0,     0,     0,     0,     0,     0,   326,     0,     0,
+       0,     0,     0,   447,     0,     0,     0,     0,   139,  -403,
+    -403,     0,     0,   584,     0,     0,     0,     0,     0,     0,
+       0,   498,     0,   139,     0,     0,     0,     0,     0,     0,
+       0,     0,   469,   581,     0,     0,     0,     0,     0,     0,
+     435,     0,     0,     0,     0,   447,   142,     0,     0,     0,
+       0,   447,     0,     0,     0,   624,   139,     0,     0,   447,
+     446,   632,     0,     0,     0,     0,   446,     0,   446,   638,
+       0,     0,     0,   139,     0,     0,     0,     0,   620,   623,
+       0,   142,   142,     0,     0,     0,     0,   439,   440,     0,
+       0,     0,     0,     0,     0,     0,     0,   639,     0,   465,
+       0,   469,     0,   469,     0,   446,   151,     0,     0,     0,
+     498,     0,     0,     0,    29,    30,   114,     0,     0,   469,
+       0,     0,   657,     0,    35,     0,     0,   142,   142,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   498,   498,
+       0,     0,     0,     0,   498,   498,   142,     0,   142,     0,
+     142,     0,   142,     0,     0,   446,   115,     0,     0,     0,
+     690,     0,     0,     0,     0,     0,     0,     0,   142,   441,
+      64,    65,    66,    67,    68,     0,     0,     0,   446,   465,
+     446,   442,     0,     0,     0,     0,   443,    71,    72,   444,
+       0,     0,     0,     0,   469,   446,   447,     0,     0,     0,
+       0,     0,   447,     0,   447,     0,   758,     0,     0,   142,
+       0,     0,   766,     0,   767,     0,     0,     0,   446,     0,
+       0,     0,   446,     0,     0,     0,     0,   623,   142,   446,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,    97,   668,     0,     0,     0,    97,    97,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,   458,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,   462,     0,     0,   830,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     5,     6,     7,     8,     9,     0,     0,
-       0,     0,    10,     0,   844,     0,   605,     0,    97,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,   462,     0,     0,     0,     0,     0,     0,
-       0,     0,    11,    12,     0,    97,     0,     0,    13,     0,
+       0,   447,     0,   142,   469,     0,     0,     0,     0,     0,
+       0,   788,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,   446,   257,   258,   259,   260,   261,   262,   263,
+     264,   265,   266,   267,   268,     0,   142,     0,     0,     0,
+       0,     0,     0,   498,     0,     0,     0,     0,     0,     0,
+       0,   447,     0,   142,     0,     0,     0,     0,     0,     0,
+       0,   828,     0,     0,     0,     0,     0,     0,     0,  -403,
+    -403,     0,     0,     0,   447,     0,   447,     0,     0,     0,
+       0,     0,     0,     0,   845,     0,   847,     0,     0,     0,
+       0,   447,     0,     5,     6,     7,     8,     9,     0,     0,
+       0,   862,    10,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,   447,     0,     0,     0,   447,     0,
+       0,     0,     0,     0,   875,   447,     0,     0,   878,     0,
+       0,     0,    11,    12,     0,   881,     0,     0,    13,     0,
       14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
-      24,     0,    25,    26,    27,    28,     0,     0,   486,    29,
-      30,    31,    32,    33,     0,    34,     0,     0,     0,    35,
+      24,     0,    25,    26,    27,    28,     0,     0,   447,    29,
+      30,    31,    32,    33,     0,    34,     0,     0,   903,    35,
       36,    37,    38,     0,    39,     0,    40,     0,    41,     0,
        0,    42,     0,     0,     0,    43,    44,    45,    46,    47,
       48,    49,     0,    50,    51,    52,     0,     0,     0,    53,
       54,    55,     0,    56,    57,    58,    59,    60,    61,     0,
        0,     0,     0,    62,    63,    64,    65,    66,    67,    68,
        5,     6,     7,     8,     9,     0,    69,     0,     0,    10,
-       0,    70,    71,    72,    73,    74,     0,    75,    76,     0,
-      77,    78,    79,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
+       0,    70,    71,    72,    73,    74,    75,     0,    76,    77,
+       0,    78,    79,    80,  -420,  -420,  -420,  -420,   245,   246,
+     247,   248,   249,   250,   251,   252,     0,   253,     0,    11,
       12,     0,     0,     0,     0,    13,     0,    14,    15,    16,
       17,    18,    19,    20,    21,    22,    23,    24,     0,    25,
       26,    27,    28,     0,     0,     0,    29,    30,    31,    32,
@@ -1581,49 +1598,11 @@ static const yytype_int16 yytable[] =
        0,    39,     0,    40,     0,    41,     0,     0,    42,     0,
        0,     0,    43,    44,    45,    46,     0,    48,    49,     0,
       50,     0,    52,     0,     0,     0,    53,    54,    55,     0,
-      56,    57,    58,   476,    60,    61,     0,     0,     0,     0,
-      62,    63,    64,    65,    66,    67,    68,     5,     6,     7,
-       8,     9,     0,    69,     0,     0,    10,     0,   113,    71,
-      72,    73,    74,     0,    75,    76,     0,    77,    78,    79,
-     608,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,    11,    12,     0,     0,
-       0,     0,    13,     0,    14,    15,    16,    17,    18,    19,
-      20,    21,    22,    23,    24,     0,    25,    26,    27,    28,
-       0,     0,     0,    29,    30,    31,    32,    33,     0,    34,
-       0,     0,     0,    35,    36,    37,    38,     0,    39,     0,
-      40,     0,    41,     0,     0,    42,     0,     0,     0,    43,
-      44,    45,    46,     0,    48,    49,     0,    50,     0,    52,
-       0,     0,     0,     0,     0,    55,     0,    56,    57,    58,
-       0,     0,     0,     0,     0,     0,     0,    62,    63,    64,
-      65,    66,    67,    68,     5,     6,     7,     8,     9,     0,
-      69,     0,     0,    10,     0,   113,    71,    72,    73,    74,
-       0,    75,    76,     0,    77,    78,    79,   662,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,    11,    12,     0,     0,     0,     0,    13,
-       0,    14,    15,    16,    17,    18,    19,    20,    21,    22,
-      23,    24,     0,    25,    26,    27,    28,     0,     0,     0,
-      29,    30,    31,    32,    33,     0,    34,     0,     0,     0,
-      35,    36,    37,    38,     0,    39,     0,    40,     0,    41,
-       0,     0,    42,     0,     0,     0,    43,    44,    45,    46,
-       0,    48,    49,     0,    50,     0,    52,     0,     0,     0,
-       0,     0,    55,     0,    56,    57,    58,     0,     0,     0,
-       0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
-      68,     5,     6,     7,     8,     9,     0,    69,     0,     0,
-      10,     0,   113,    71,    72,    73,    74,     0,    75,    76,
-       0,    77,    78,    79,   804,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-      11,    12,     0,     0,     0,     0,    13,     0,    14,    15,
-      16,    17,    18,    19,    20,    21,    22,    23,    24,     0,
-      25,    26,    27,    28,     0,     0,     0,    29,    30,    31,
-      32,    33,     0,    34,     0,     0,     0,    35,    36,    37,
-      38,     0,    39,     0,    40,     0,    41,     0,     0,    42,
-       0,     0,     0,    43,    44,    45,    46,     0,    48,    49,
-       0,    50,     0,    52,     0,     0,     0,     0,     0,    55,
-       0,    56,    57,    58,     0,     0,     0,     0,     0,     0,
-       0,    62,    63,    64,    65,    66,    67,    68,     5,     6,
-       7,     8,     9,     0,    69,     0,     0,    10,     0,   113,
-      71,    72,    73,    74,     0,    75,    76,     0,    77,    78,
-      79,   848,     0,     0,     0,     0,     0,     0,     0,     0,
+      56,    57,    58,   487,    60,    61,     0,     0,     0,     0,
+      62,    63,    64,    65,    66,    67,    68,     0,     5,     6,
+       7,     8,     9,    69,     0,     0,     0,    10,   116,    71,
+      72,    73,     0,    75,     0,    76,    77,     0,    78,    79,
+      80,   626,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,    11,    12,     0,
        0,     0,     0,    13,     0,    14,    15,    16,    17,    18,
       19,    20,    21,    22,    23,    24,     0,    25,    26,    27,
@@ -1633,468 +1612,504 @@ static const yytype_int16 yytable[] =
       43,    44,    45,    46,     0,    48,    49,     0,    50,     0,
       52,     0,     0,     0,     0,     0,    55,     0,    56,    57,
       58,     0,     0,     0,     0,     0,     0,     0,    62,    63,
-      64,    65,    66,    67,    68,     5,     6,     7,     8,     9,
-       0,    69,     0,     0,    10,     0,   113,    71,    72,    73,
-      74,     0,    75,    76,     0,    77,    78,    79,     0,     0,
+      64,    65,    66,    67,    68,     0,     5,     6,     7,     8,
+       9,    69,     0,     0,     0,    10,   116,    71,    72,    73,
+       0,    75,     0,    76,    77,     0,    78,    79,    80,   684,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,    11,    12,     0,     0,     0,     0,
-      13,     0,    14,    15,    16,    17,    18,    19,    20,    21,
-      22,    23,    24,     0,    25,    26,    27,    28,     0,     0,
-       0,    29,    30,    31,    32,    33,     0,    34,     0,     0,
-       0,    35,    36,    37,    38,     0,    39,     0,    40,     0,
-      41,     0,     0,    42,     0,     0,     0,    43,    44,    45,
-      46,     0,    48,    49,     0,    50,     0,    52,     0,     0,
-       0,     0,     0,    55,     0,    56,    57,    58,     0,     0,
-       0,     0,     0,     0,     0,    62,    63,    64,    65,    66,
-      67,    68,     5,     6,     7,     8,     9,     0,    69,     0,
-       0,    10,     0,   113,    71,    72,    73,    74,     0,    75,
-      76,     0,    77,    78,    79,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,    11,    12,     0,     0,     0,
+       0,    13,     0,    14,    15,    16,    17,    18,    19,    20,
+      21,    22,    23,    24,     0,    25,    26,    27,    28,     0,
+       0,     0,    29,    30,    31,    32,    33,     0,    34,     0,
+       0,     0,    35,    36,    37,    38,     0,    39,     0,    40,
+       0,    41,     0,     0,    42,     0,     0,     0,    43,    44,
+      45,    46,     0,    48,    49,     0,    50,     0,    52,     0,
+       0,     0,     0,     0,    55,     0,    56,    57,    58,     0,
+       0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
+      66,    67,    68,     0,     5,     6,     7,     8,     9,    69,
+       0,     0,     0,    10,   116,    71,    72,    73,     0,    75,
+       0,    76,    77,     0,    78,    79,    80,   838,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,    11,    12,     0,     0,     0,     0,    13,
+       0,    14,    15,    16,    17,    18,    19,    20,    21,    22,
+      23,    24,     0,    25,    26,    27,    28,     0,     0,     0,
+      29,    30,    31,    32,    33,     0,    34,     0,     0,     0,
+      35,    36,    37,    38,     0,    39,     0,    40,     0,    41,
+       0,     0,    42,     0,     0,     0,    43,    44,    45,    46,
+       0,    48,    49,     0,    50,     0,    52,     0,     0,     0,
+       0,     0,    55,     0,    56,    57,    58,     0,     0,     0,
+       0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
+      68,     0,     5,     6,     7,     8,     9,    69,     0,     0,
+       0,    10,   116,    71,    72,    73,     0,    75,     0,    76,
+      77,     0,    78,    79,    80,   887,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,    11,    12,     0,     0,     0,     0,    13,     0,    14,
       15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
-       0,    25,    26,    27,     0,     0,     0,     0,    29,    30,
-     111,    32,    33,     0,     0,     0,     0,     0,    35,   229,
-     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
-     240,   241,   242,   243,   244,   245,   246,    46,   247,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     112,     0,     0,    57,    58,     0,     0,     0,     0,     0,
+       0,    25,    26,    27,    28,     0,     0,     0,    29,    30,
+      31,    32,    33,     0,    34,     0,     0,     0,    35,    36,
+      37,    38,     0,    39,     0,    40,     0,    41,     0,     0,
+      42,     0,     0,     0,    43,    44,    45,    46,     0,    48,
+      49,     0,    50,     0,    52,     0,     0,     0,     0,     0,
+      55,     0,    56,    57,    58,     0,     0,     0,     0,     0,
        0,     0,    62,    63,    64,    65,    66,    67,    68,     5,
        6,     7,     8,     9,     0,    69,     0,     0,    10,     0,
-     113,    71,    72,    73,    74,     0,   164,     0,     0,    77,
-      78,    79,     0,     0,     0,     0,     0,     0,     0,     0,
+     116,    71,    72,    73,     0,    75,     0,    76,    77,     0,
+      78,    79,    80,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,    11,    12,
        0,     0,     0,     0,    13,     0,    14,    15,    16,    17,
       18,    19,    20,    21,    22,    23,    24,     0,    25,    26,
-      27,     0,     0,     0,     0,    29,    30,   111,    32,    33,
-       0,     0,     0,     0,     0,    35,     0,   230,   231,   232,
-     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
-     243,   244,   245,   246,    46,   247,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,   112,     0,     0,
+      27,    28,     0,     0,     0,    29,    30,    31,    32,    33,
+       0,    34,     0,     0,     0,    35,    36,    37,    38,     0,
+      39,     0,    40,     0,    41,     0,     0,    42,     0,     0,
+       0,    43,    44,    45,    46,     0,    48,    49,     0,    50,
+       0,    52,     0,     0,     0,     0,     0,    55,     0,    56,
       57,    58,     0,     0,     0,     0,     0,     0,     0,    62,
       63,    64,    65,    66,    67,    68,     5,     6,     7,     8,
-       9,     0,    69,     0,     0,    10,     0,   113,    71,    72,
-      73,    74,     0,   166,     0,     0,    77,    78,    79,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       9,     0,    69,     0,     0,    10,     0,   116,    71,    72,
+      73,     0,    75,     0,    76,    77,     0,    78,    79,    80,
+       0,     0,     0,     0,   493,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,    11,    12,     0,     0,     0,
        0,    13,     0,    14,    15,    16,    17,    18,    19,    20,
       21,    22,    23,    24,     0,    25,    26,    27,     0,     0,
-       0,     0,    29,    30,   111,    32,    33,     0,     0,     0,
-       0,     0,    35,   231,   232,   233,   234,   235,   236,   237,
-     238,   239,   240,   241,   242,   243,   244,   245,   246,     0,
-     247,    46,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,   112,     0,     0,    57,    58,     0,
+       0,     0,    29,    30,   114,    32,    33,     0,     0,     0,
+       0,     0,    35,   235,   236,   237,   238,   239,   240,   241,
+     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
+     252,    46,   253,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,   115,     0,     0,    57,    58,     0,
        0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
       66,    67,    68,     5,     6,     7,     8,     9,     0,    69,
-       0,     0,    10,     0,   113,    71,    72,    73,    74,     0,
-     170,     0,     0,    77,    78,    79,     0,     0,     0,     0,
+       0,     0,    10,     0,   116,    71,    72,    73,    74,    75,
+       0,     0,     0,     0,    78,    79,    80,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,    11,    12,     0,     0,     0,     0,    13,     0,
       14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
       24,     0,    25,    26,    27,     0,     0,     0,     0,    29,
-      30,   111,    32,    33,     0,     0,     0,     0,     0,    35,
-    -401,  -401,  -401,  -401,   235,   236,   237,   238,   239,   240,
-     241,   242,   243,   244,   245,   246,     0,   247,    46,     0,
+      30,   114,    32,    33,     0,     0,     0,     0,     0,    35,
+       0,   236,   237,   238,   239,   240,   241,   242,   243,   244,
+     245,   246,   247,   248,   249,   250,   251,   252,    46,   253,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,   112,     0,     0,    57,    58,     0,     0,     0,     0,
+       0,   115,     0,     0,    57,    58,     0,     0,     0,     0,
        0,     0,     0,    62,    63,    64,    65,    66,    67,    68,
        5,     6,     7,     8,     9,     0,    69,     0,     0,    10,
-       0,   113,    71,    72,    73,    74,   284,     0,     0,     0,
-      77,    78,    79,     0,     0,     0,     0,     0,   326,     0,
+       0,   116,    71,    72,    73,     0,    75,     0,   167,     0,
+       0,    78,    79,    80,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
       12,     0,     0,     0,     0,    13,     0,    14,    15,    16,
       17,    18,    19,    20,    21,    22,    23,    24,     0,    25,
-      26,    27,     0,     0,     0,     0,    29,    30,   111,    32,
-      33,     0,     0,     0,     0,     0,    35,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,    46,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,   112,     0,
+      26,    27,     0,     0,     0,     0,    29,    30,   114,    32,
+      33,     0,     0,     0,     0,     0,    35,   237,   238,   239,
+     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
+     250,   251,   252,     0,   253,    46,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   115,     0,
        0,    57,    58,     0,     0,     0,     0,     0,     0,     0,
       62,    63,    64,    65,    66,    67,    68,     5,     6,     7,
-       8,     9,     0,    69,     0,     0,    10,     0,   113,    71,
-      72,    73,    74,     0,     0,     0,     0,    77,    78,    79,
-       0,     0,     0,     0,     0,   390,     0,     0,     0,     0,
+       8,     9,     0,    69,     0,     0,    10,     0,   116,    71,
+      72,    73,     0,    75,     0,   169,     0,     0,    78,    79,
+      80,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,    11,    12,     0,     0,
        0,     0,    13,     0,    14,    15,    16,    17,    18,    19,
       20,    21,    22,    23,    24,     0,    25,    26,    27,     0,
-       0,     0,     0,    29,    30,   111,    32,    33,     0,     0,
-       0,     0,     0,    35,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,    46,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,   112,     0,     0,    57,    58,
+       0,     0,     0,    29,    30,   114,    32,    33,     0,     0,
+       0,     0,     0,    35,  -420,  -420,  -420,  -420,   241,   242,
+     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
+       0,   253,    46,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,   115,     0,     0,    57,    58,
        0,     0,     0,     0,     0,     0,     0,    62,    63,    64,
       65,    66,    67,    68,     5,     6,     7,     8,     9,     0,
-      69,     0,     0,    10,     0,   113,    71,    72,    73,    74,
-       0,     0,     0,     0,    77,    78,    79,     0,     0,     0,
-       0,     0,   482,     0,     0,     0,     0,     0,     0,     0,
+      69,     0,     0,    10,     0,   116,    71,    72,    73,     0,
+      75,     0,   173,     0,     0,    78,    79,    80,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,    11,    12,     0,     0,     0,     0,    13,
        0,    14,    15,    16,    17,    18,    19,    20,    21,    22,
       23,    24,     0,    25,    26,    27,     0,     0,     0,     0,
-      29,    30,   111,    32,    33,     0,     0,     0,     0,     0,
+      29,    30,   114,    32,    33,     0,     0,     0,     0,     0,
       35,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,    46,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,   112,     0,     0,    57,    58,     0,     0,     0,
+       0,     0,   115,     0,     0,    57,    58,     0,     0,     0,
        0,     0,     0,     0,    62,    63,    64,    65,    66,    67,
       68,     5,     6,     7,     8,     9,     0,    69,     0,     0,
-      10,     0,   113,    71,    72,    73,    74,     0,     0,     0,
-       0,    77,    78,    79,     0,     0,     0,     0,     0,   550,
+      10,     0,   116,    71,    72,    73,     0,    75,   290,     0,
+       0,     0,    78,    79,    80,     0,     0,     0,     0,   332,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       11,    12,     0,     0,     0,     0,    13,     0,    14,    15,
       16,    17,    18,    19,    20,    21,    22,    23,    24,     0,
-      25,    26,    27,     0,     0,     0,     0,    29,    30,   111,
+      25,    26,    27,     0,     0,     0,     0,    29,    30,   114,
       32,    33,     0,     0,     0,     0,     0,    35,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,    46,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,   112,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,   115,
        0,     0,    57,    58,     0,     0,     0,     0,     0,     0,
        0,    62,    63,    64,    65,    66,    67,    68,     5,     6,
-       7,     8,     9,     0,    69,     0,     0,    10,     0,   113,
-      71,    72,    73,    74,     0,     0,     0,     0,    77,    78,
-      79,     0,     0,     0,     0,     0,   552,     0,     0,     0,
+       7,     8,     9,     0,    69,     0,     0,    10,     0,   116,
+      71,    72,    73,     0,    75,     0,     0,     0,     0,    78,
+      79,    80,     0,     0,     0,     0,   397,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,    11,    12,     0,
        0,     0,     0,    13,     0,    14,    15,    16,    17,    18,
       19,    20,    21,    22,    23,    24,     0,    25,    26,    27,
-       0,     0,     0,     0,    29,    30,   111,    32,    33,     0,
+       0,     0,     0,     0,    29,    30,   114,    32,    33,     0,
        0,     0,     0,     0,    35,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,    46,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,   112,     0,     0,    57,
+       0,     0,     0,     0,     0,     0,   115,     0,     0,    57,
       58,     0,     0,     0,     0,     0,     0,     0,    62,    63,
       64,    65,    66,    67,    68,     5,     6,     7,     8,     9,
-       0,    69,     0,     0,    10,     0,   113,    71,    72,    73,
-      74,     0,     0,     0,     0,    77,    78,    79,     0,     0,
-       0,     0,     0,   634,     0,     0,     0,     0,     0,     0,
+       0,    69,     0,     0,    10,     0,   116,    71,    72,    73,
+       0,    75,     0,     0,     0,     0,    78,    79,    80,     0,
+       0,     0,     0,   562,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,    11,    12,     0,     0,     0,     0,
       13,     0,    14,    15,    16,    17,    18,    19,    20,    21,
       22,    23,    24,     0,    25,    26,    27,     0,     0,     0,
-       0,    29,    30,   111,    32,    33,     0,     0,     0,     0,
+       0,    29,    30,   114,    32,    33,     0,     0,     0,     0,
        0,    35,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       46,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,   112,     0,     0,    57,    58,     0,     0,
+       0,     0,     0,   115,     0,     0,    57,    58,     0,     0,
        0,     0,     0,     0,     0,    62,    63,    64,    65,    66,
       67,    68,     5,     6,     7,     8,     9,     0,    69,     0,
-       0,    10,     0,   113,    71,    72,    73,    74,     0,     0,
-       0,     0,    77,    78,    79,     0,     0,     0,     0,     0,
-     683,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,    10,     0,   116,    71,    72,    73,     0,    75,     0,
+       0,     0,     0,    78,    79,    80,     0,     0,     0,     0,
+     564,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,    11,    12,     0,     0,     0,     0,    13,     0,    14,
       15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
        0,    25,    26,    27,     0,     0,     0,     0,    29,    30,
-     111,    32,    33,     0,     0,     0,     0,     0,    35,     0,
+     114,    32,    33,     0,     0,     0,     0,     0,    35,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,    46,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     112,     0,     0,    57,    58,     0,     0,     0,     0,     0,
+     115,     0,     0,    57,    58,     0,     0,     0,     0,     0,
        0,     0,    62,    63,    64,    65,    66,    67,    68,     5,
        6,     7,     8,     9,     0,    69,     0,     0,    10,     0,
-     113,    71,    72,    73,    74,     0,     0,     0,     0,    77,
-      78,    79,     0,     0,     0,     0,     0,     0,     0,     0,
+     116,    71,    72,    73,     0,    75,     0,     0,     0,     0,
+      78,    79,    80,     0,     0,     0,     0,   655,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,    11,    12,
        0,     0,     0,     0,    13,     0,    14,    15,    16,    17,
       18,    19,    20,    21,    22,    23,    24,     0,    25,    26,
-      27,     0,     0,     0,     0,    29,    30,   111,    32,    33,
+      27,     0,     0,     0,     0,    29,    30,   114,    32,    33,
        0,     0,     0,     0,     0,    35,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,    46,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,   112,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,   115,     0,     0,
       57,    58,     0,     0,     0,     0,     0,     0,     0,    62,
       63,    64,    65,    66,    67,    68,     5,     6,     7,     8,
-       9,     0,    69,     0,     0,    10,     0,   113,    71,    72,
-      73,    74,     0,     0,     0,     0,    77,    78,    79,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       9,     0,    69,     0,     0,    10,     0,   116,    71,    72,
+      73,     0,    75,     0,     0,     0,     0,    78,    79,    80,
+       0,     0,     0,     0,   705,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,    11,    12,     0,     0,     0,
        0,    13,     0,    14,    15,    16,    17,    18,    19,    20,
       21,    22,    23,    24,     0,    25,    26,    27,     0,     0,
-       0,     0,    29,    30,   111,   334,    33,     0,     0,     0,
+       0,     0,    29,    30,   114,    32,    33,     0,     0,     0,
        0,     0,    35,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,    46,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,   112,     0,     0,    57,    58,     0,
+       0,     0,     0,     0,   115,     0,     0,    57,    58,     0,
        0,     0,     0,     0,     0,     0,    62,    63,    64,    65,
-      66,    67,    68,     0,     0,     0,     0,     0,     0,    69,
-     222,   223,   224,     0,   113,    71,    72,    73,    74,     0,
-       0,     0,     0,    77,    78,    79,   225,     0,   226,   227,
-     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
-     238,   239,   240,   241,   242,   243,   244,   245,   246,     0,
-     247,   222,   223,   224,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,   225,     0,   226,
-     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
+      66,    67,    68,     5,     6,     7,     8,     9,     0,    69,
+       0,     0,    10,     0,   116,    71,    72,    73,     0,    75,
+       0,     0,     0,     0,    78,    79,    80,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,    11,    12,     0,     0,     0,     0,    13,     0,
+      14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
+      24,     0,    25,    26,    27,     0,     0,     0,     0,    29,
+      30,   114,    32,    33,     0,     0,     0,     0,     0,    35,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,    46,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,   115,     0,     0,    57,    58,     0,     0,     0,     0,
+       0,     0,     0,    62,    63,    64,    65,    66,    67,    68,
+       5,     6,     7,     8,     9,     0,    69,     0,     0,    10,
+       0,   116,    71,    72,    73,     0,    75,     0,     0,     0,
+       0,    78,    79,    80,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
+      12,     0,     0,     0,     0,    13,     0,    14,    15,    16,
+      17,    18,    19,    20,    21,    22,    23,    24,     0,    25,
+      26,    27,     0,     0,     0,     0,    29,    30,   114,   340,
+      33,     0,     0,     0,     0,     0,    35,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,    46,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   115,     0,
+       0,    57,    58,     0,     0,     0,     0,     0,     0,     0,
+      62,    63,    64,    65,    66,    67,    68,     0,     0,     0,
+       0,     0,     0,    69,     0,   228,   229,   230,   116,    71,
+      72,    73,     0,    75,     0,     0,     0,     0,    78,    79,
+      80,   231,     0,   232,   233,   234,   235,   236,   237,   238,
+     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
+     249,   250,   251,   252,     0,   253,   228,   229,   230,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,   231,     0,   232,   233,   234,   235,   236,   237,
+     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
+     248,   249,   250,   251,   252,     0,   253,   228,   229,   230,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,   231,     0,   232,   233,   234,   235,   236,
      237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
-       0,   247,   222,   223,   224,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,   225,     0,
-     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
-     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
-     246,     0,   247,     0,     0,     0,     0,   222,   223,   224,
+     247,   248,   249,   250,   251,   252,     0,   253,     0,     0,
+       0,     0,     0,   228,   229,   230,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,   231,
+     647,   232,   233,   234,   235,   236,   237,   238,   239,   240,
+     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
+     251,   252,     0,   253,   228,   229,   230,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,   477,     0,     0,
+     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
+     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
+     250,   251,   252,     0,   253,   228,   229,   230,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   492,     0,
+       0,   231,     0,   232,   233,   234,   235,   236,   237,   238,
+     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
+     249,   250,   251,   252,     0,   253,     0,   228,   229,   230,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,   225,   629,   226,   227,   228,   229,   230,
-     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
-     241,   242,   243,   244,   245,   246,     0,   247,   222,   223,
-     224,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,   481,     0,     0,   225,     0,   226,   227,   228,   229,
-     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
-     240,   241,   242,   243,   244,   245,   246,     0,   247,   222,
-     223,   224,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,   518,     0,     0,   225,     0,   226,   227,   228,
-     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
-     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
-       0,     0,   222,   223,   224,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,   542,   225,   776,
-     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
-     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
-     246,     0,   247,   222,   223,   224,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,   653,   225,
-       0,   226,   227,   228,   229,   230,   231,   232,   233,   234,
-     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
-     245,   246,     0,   247,   222,   223,   224,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,   721,
-     225,     0,   226,   227,   228,   229,   230,   231,   232,   233,
+       0,     0,     0,   231,   530,   232,   233,   234,   235,   236,
+     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
+     247,   248,   249,   250,   251,   252,     0,   253,     0,     0,
+     228,   229,   230,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,   554,   231,   806,   232,   233,
      234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
-     244,   245,   246,     0,   247,   222,   223,   224,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     777,   225,     0,   226,   227,   228,   229,   230,   231,   232,
+     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
+     253,   228,   229,   230,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,   675,   231,     0,   232,
      233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
-     243,   244,   245,   246,     0,   247,   222,   223,   224,     0,
+     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
+       0,   253,     0,   228,   229,   230,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   747,   231,
+       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
+     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
+     251,   252,     0,   253,   228,   229,   230,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,   807,
+     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
+     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
+     250,   251,   252,     0,   253,   228,   229,   230,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,   248,   225,     0,   226,   227,   228,   229,   230,   231,
-     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
-     242,   243,   244,   245,   246,     0,   247,   222,   223,   224,
+     254,   231,     0,   232,   233,   234,   235,   236,   237,   238,
+     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
+     249,   250,   251,   252,     0,   253,     0,   228,   229,   230,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,   298,   225,     0,   226,   227,   228,   229,   230,
-     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
-     241,   242,   243,   244,   245,   246,     0,   247,   222,   223,
-     224,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,   299,   225,     0,   226,   227,   228,   229,
-     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
-     240,   241,   242,   243,   244,   245,   246,     0,   247,   222,
-     223,   224,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,   305,   225,     0,   226,   227,   228,
-     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
-     239,   240,   241,   242,   243,   244,   245,   246,     0,   247,
-     222,   223,   224,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,   345,     0,   225,     0,   226,   227,
-     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
-     238,   239,   240,   241,   242,   243,   244,   245,   246,     0,
-     247,   222,   223,   224,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,   410,     0,   225,     0,   226,
-     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
+       0,     0,   304,   231,     0,   232,   233,   234,   235,   236,
      237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
-       0,   247,   222,   223,   224,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,   420,     0,   225,     0,
-     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
+     247,   248,   249,   250,   251,   252,     0,   253,   228,   229,
+     230,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,   305,   231,     0,   232,   233,   234,   235,
      236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
-     246,     0,   247,   222,   223,   224,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,   421,     0,   225,
-       0,   226,   227,   228,   229,   230,   231,   232,   233,   234,
+     246,   247,   248,   249,   250,   251,   252,     0,   253,   228,
+     229,   230,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,   311,   231,     0,   232,   233,   234,
      235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
-     245,   246,     0,   247,   222,   223,   224,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,   431,     0,
-     225,     0,   226,   227,   228,   229,   230,   231,   232,   233,
+     245,   246,   247,   248,   249,   250,   251,   252,     0,   253,
+     228,   229,   230,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,   352,   231,     0,   232,   233,
      234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
-     244,   245,   246,     0,   247,   222,   223,   224,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,   524,
-       0,   225,     0,   226,   227,   228,   229,   230,   231,   232,
+     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
+     253,   228,   229,   230,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,   417,   231,     0,   232,
      233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
-     243,   244,   245,   246,     0,   247,   222,   223,   224,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     726,     0,   225,     0,   226,   227,   228,   229,   230,   231,
+     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
+       0,   253,   228,   229,   230,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,   427,   231,     0,
      232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
-     242,   243,   244,   245,   246,     0,   247,   222,   223,   224,
+     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
+     252,     0,   253,   228,   229,   230,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   428,   231,
+       0,   232,   233,   234,   235,   236,   237,   238,   239,   240,
+     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
+     251,   252,     0,   253,   228,   229,   230,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,   438,
+     231,     0,   232,   233,   234,   235,   236,   237,   238,   239,
+     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
+     250,   251,   252,     0,   253,   228,   229,   230,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,   847,     0,   225,     0,   226,   227,   228,   229,   230,
-     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
-     241,   242,   243,   244,   245,   246,     0,   247,     0,     0,
+     536,   231,     0,   232,   233,   234,   235,   236,   237,   238,
+     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
+     249,   250,   251,   252,     0,   253,   228,   229,   230,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,   857,     0,   222,   223,   224,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,   463,
-     225,   584,   226,   227,   228,   229,   230,   231,   232,   233,
-     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
-     244,   245,   246,     0,   247,   222,   223,   224,     0,     0,
+       0,   752,   231,     0,   232,   233,   234,   235,   236,   237,
+     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
+     248,   249,   250,   251,   252,     0,   253,   228,   229,   230,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     627,   225,     0,   226,   227,   228,   229,   230,   231,   232,
-     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
-     243,   244,   245,   246,     0,   247,   223,   224,     0,     0,
+       0,     0,   886,   231,     0,   232,   233,   234,   235,   236,
+     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
+     247,   248,   249,   250,   251,   252,     0,   253,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,   225,     0,   226,   227,   228,   229,   230,   231,   232,
-     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
-     243,   244,   245,   246,   224,   247,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,   225,     0,
-     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
+       0,     0,     0,   897,   228,   229,   230,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,   470,
+     231,   602,   232,   233,   234,   235,   236,   237,   238,   239,
+     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
+     250,   251,   252,     0,   253,   228,   229,   230,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+     645,   231,     0,   232,   233,   234,   235,   236,   237,   238,
+     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
+     249,   250,   251,   252,     0,   253,   229,   230,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,   231,     0,   232,   233,   234,   235,   236,   237,   238,
+     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
+     249,   250,   251,   252,   230,   253,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,   231,     0,
+     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
+     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
+     252,   231,   253,   232,   233,   234,   235,   236,   237,   238,
+     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
+     249,   250,   251,   252,     0,   253,   232,   233,   234,   235,
      236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
-     246,   225,   247,   226,   227,   228,   229,   230,   231,   232,
-     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
-     243,   244,   245,   246,     0,   247,   227,   228,   229,   230,
-     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
-     241,   242,   243,   244,   245,   246,     0,   247,   228,   229,
-     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
-     240,   241,   242,   243,   244,   245,   246,     0,   247
+     246,   247,   248,   249,   250,   251,   252,     0,   253,   233,
+     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
+     244,   245,   246,   247,   248,   249,   250,   251,   252,     0,
+     253,   234,   235,   236,   237,   238,   239,   240,   241,   242,
+     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
+       0,   253
 };
 
 static const yytype_int16 yycheck[] =
 {
-      23,    24,    26,    26,     4,   114,     4,    26,   403,    26,
-      48,   354,   419,   575,   221,   525,     8,     8,   247,   482,
-       8,   416,     8,     8,     8,    26,    61,    26,    51,     8,
-       8,    61,     8,    78,     8,     8,     8,    73,     8,     8,
-     304,     8,    71,    63,    31,    61,   145,    70,   341,    61,
-      73,    71,   140,    73,   145,    61,   144,   264,    71,   140,
-      73,    71,   145,   144,   145,    92,    93,    94,   275,   276,
-      26,   140,   279,     0,   281,   144,    71,   140,    71,   140,
-     475,   144,   145,   144,   108,     0,    73,   550,     8,   552,
-     145,   111,   137,    13,    14,    15,    16,    17,    18,    19,
-      20,    21,    22,    23,    24,   140,    71,    71,    73,    23,
-      24,   134,    26,   148,   150,   145,   145,    71,   148,    73,
-     143,   141,   149,   161,   144,    73,    73,   151,   140,    71,
-     150,    73,   148,   145,   144,   148,   148,   150,   148,    59,
-      60,   301,   148,    71,    90,    73,   141,   148,   147,   144,
-     493,   144,    90,   176,   146,   315,   147,   117,   181,   147,
-     158,   147,   147,   147,   559,   188,   189,   190,   147,   147,
-     146,   634,   146,   146,   146,   198,   146,   146,   201,   146,
-      71,   474,    71,   111,    73,   150,   581,   582,    61,    73,
-      31,    31,   587,   588,   145,   123,   150,   221,   144,   406,
-      93,    94,   150,   150,   221,   145,   144,   117,   150,    71,
-     140,    73,   419,   141,   144,   145,   144,    71,   728,   145,
-     683,   145,   150,   247,   247,    71,   146,   570,   247,    73,
-     247,    71,    73,    73,    78,   148,   612,   145,    31,    71,
-     264,    73,    74,    71,   145,    73,   145,   264,   121,   111,
-     273,   275,   276,    73,   277,   279,   149,   281,   275,   276,
-      73,   150,   279,    73,   281,    78,    71,   181,    73,    31,
-     124,   111,   432,   433,   188,   189,   190,   506,   301,   141,
-      73,    71,   144,   111,   198,   308,   148,   141,   150,   145,
-     144,    71,   315,   855,   138,   139,   672,   640,   674,    59,
-      60,   141,   325,   326,   144,    31,   111,    73,   152,   145,
-     150,    73,    78,   141,   352,   722,   144,   137,   138,   139,
-      93,    94,   150,   718,   137,   138,   139,   487,   138,   139,
-      71,   354,   596,   247,   124,    73,   141,   140,   362,   144,
-      78,    73,   144,   145,   608,   150,    78,   347,   145,   347,
-      73,   141,   140,   760,   144,    78,   146,    66,    67,    68,
-     121,    92,    93,    94,   195,   403,   144,   390,   199,   529,
-      49,   137,   138,   139,   144,   535,   149,   208,   416,   210,
-     211,   212,   406,   543,    45,    46,    47,   144,    49,   406,
-     147,   148,    92,    93,    94,   419,   144,   145,   662,   742,
-     138,   139,   419,    92,    93,    94,   138,   139,   144,   432,
-     433,   325,   326,   140,   437,   138,   139,   121,   149,   140,
-       9,    10,    11,    66,    67,    68,   144,   145,   451,    66,
-      67,    66,    67,   147,   148,   140,    25,   475,    27,    28,
-      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
-      39,    40,    41,    42,    43,    44,    45,    46,    47,   482,
-      49,    23,    24,   144,   487,   140,   489,    78,    79,   145,
-     493,    13,    13,   496,   147,   147,   390,   148,   146,   149,
-      71,    71,   506,   506,   151,   119,    26,   506,   752,   506,
-     754,   145,    13,    14,    15,    16,    17,    18,    19,    20,
-      21,    22,    23,    24,   527,   528,   529,   145,    82,     8,
-     670,   147,   535,    90,   537,   722,   676,    71,   678,    71,
-     543,   559,    73,   546,   522,   548,   146,   550,   566,   552,
-     147,   146,     8,   531,    71,    61,   149,   451,    59,    60,
-     804,   884,    13,   581,   582,   568,   810,   570,   119,   587,
-     588,   711,   575,   760,    42,    43,    44,    45,    46,    47,
-     149,    49,   145,   145,   828,   145,   145,   153,   482,   833,
-      26,    13,   145,   145,    23,    24,   144,    26,    98,   140,
-     603,    71,   149,    13,   848,   145,   106,   107,   108,   109,
-     110,   111,   506,   315,   147,   145,     8,   757,   146,   622,
-     149,   599,   120,   867,   148,   869,   144,   146,    71,   873,
-     145,   634,   146,   527,   528,   137,    71,   640,   102,    13,
-     780,   644,   782,   153,   149,   148,   147,   891,     8,   146,
-     146,   146,   546,   793,   548,     8,   550,   145,   552,   748,
-     147,   122,    13,   666,   147,   147,   146,   670,   122,     8,
-     145,   149,   146,   676,   814,   678,   147,   146,   818,   104,
-     683,     4,     5,     6,   824,     8,     9,    10,    11,    12,
-      13,    14,    73,    16,    17,    18,    19,    20,    21,    22,
-     718,    13,    25,   153,   146,   146,   146,   146,   711,   603,
-     121,    89,   146,    36,   854,   146,    71,   145,   722,    98,
-      43,    44,   702,    13,   148,   722,   121,    50,   622,   148,
-     432,   433,   147,    83,    99,   147,   122,    13,   147,   742,
-     634,   106,   107,   108,   109,   110,   111,   112,    73,    71,
-      13,    74,   181,    73,   757,   146,   760,   145,   147,   188,
-     189,   190,   146,   760,   147,    13,    71,    13,    13,   198,
-      73,    26,   666,   149,   149,   145,    68,   780,    73,   782,
-      73,   147,   146,    87,   149,   487,    13,   765,    99,   683,
-     793,   145,    73,    68,   117,   106,   107,   108,   109,   110,
-     111,   112,   125,   147,    26,    85,   148,   147,   146,    73,
-     145,   814,   149,   149,   102,   818,   146,   148,   247,   308,
-     149,   824,   882,   451,   347,   570,   604,   529,   666,   152,
-     771,   154,   775,   535,   347,   158,   313,   160,   149,   644,
-     163,   543,   639,   703,   650,   616,   622,   181,   592,   826,
-      -1,   854,   855,   831,    -1,   548,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    23,    24,    -1,    -1,    -1,    -1,    -1,
-     193,    -1,   301,    -1,   197,    -1,    -1,    -1,    -1,    -1,
-     858,   884,    -1,    -1,   207,    -1,   315,    -1,    48,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,   325,   326,    -1,    -1,
-     223,    -1,    -1,    -1,    -1,   228,   229,   230,   231,   232,
-     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
-     243,   244,   245,   246,    -1,    -1,    -1,    -1,   251,   252,
-     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
-      -1,     8,    -1,   266,   267,    -1,    13,    14,    15,    16,
-      17,    18,    19,    20,    21,    22,    23,    24,    -1,    -1,
-      -1,   390,    -1,    -1,   287,    -1,    -1,   290,   670,    -1,
-      -1,    -1,    -1,    -1,   676,    -1,   678,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,   310,    42,    43,
-      -1,    -1,    59,    60,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   161,    -1,   432,   433,    -1,    -1,    -1,    -1,   711,
-      -1,    -1,    -1,    -1,    -1,    69,    70,    71,    -1,    -1,
-      -1,   181,   451,    -1,   347,    79,    -1,    -1,   188,   189,
-     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   198,    -1,
-     363,    -1,   365,    -1,   367,   368,   369,    -1,    -1,    -1,
-      -1,    -1,    -1,   482,    -1,   757,    -1,   111,   487,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-     124,   125,   126,   127,   128,   129,    -1,   506,   780,   146,
-     782,    -1,   136,    -1,    -1,    -1,    -1,   141,   142,   143,
-     144,   793,    -1,    -1,    -1,    -1,    -1,    -1,   527,   528,
-     529,    -1,    -1,    -1,    -1,    -1,   535,    -1,    -1,    -1,
-      -1,    -1,   814,    -1,   543,    -1,   818,   546,    -1,   548,
-      -1,   550,   824,   552,    13,    14,    15,    16,    17,    18,
-      19,    20,    21,    22,    23,    24,    -1,    -1,    -1,    -1,
-     463,    -1,   465,    -1,    -1,    -1,   469,    -1,    -1,    -1,
-      -1,    -1,   854,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,   325,   326,    -1,    -1,    -1,
-      59,    60,    -1,    -1,   603,    -1,    -1,    -1,    -1,   502,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,
-      -1,    -1,   352,   622,    -1,    -1,    -1,    -1,    -1,   522,
-      -1,    90,   525,   526,    -1,   634,    -1,    -1,   531,    -1,
-      -1,    13,    14,    15,    16,    17,    18,    19,    20,    21,
-      22,    23,    24,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-     390,    -1,    -1,    -1,    -1,    -1,    -1,   666,    -1,    -1,
-      -1,   670,    -1,   403,    -1,    -1,    -1,   676,    -1,   678,
-      -1,    -1,    -1,    -1,   683,    -1,   416,    59,    60,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   592,
-     593,    -1,    -1,    -1,    -1,   598,   599,    -1,    -1,    -1,
-      -1,    -1,   711,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   451,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   624,    -1,    -1,   627,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,   475,    -1,    -1,    -1,    -1,
-      -1,    -1,   482,    -1,    -1,    -1,   649,    -1,   757,    -1,
-      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
-      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
-      47,   780,    49,   782,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,   793,    -1,    -1,   527,   528,    36,
-      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
-      47,    -1,    49,    -1,    -1,   814,   546,    -1,   548,   818,
-     550,    -1,   552,    -1,    -1,   824,    -1,    -1,    -1,   559,
-      -1,    -1,    -1,    -1,    -1,   728,   566,    -1,    -1,    -1,
-      -1,    -1,    -1,   736,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   581,   582,    -1,    -1,   854,    -1,   587,   588,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,   765,   603,    -1,    -1,    -1,   770,   771,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,   622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,   634,    -1,    -1,   800,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,     3,     4,     5,     6,     7,    -1,    -1,
-      -1,    -1,    12,    -1,   827,    -1,   666,    -1,   831,    -1,
+      23,    24,     4,    26,   117,   361,    26,     4,   253,    83,
+       4,    83,   227,   426,   146,   537,     8,   347,     8,     8,
+      26,     8,     8,     8,     8,   594,     8,    26,    51,    61,
+      26,     8,     8,    71,     8,     8,     8,   493,     8,   410,
+       0,    79,    61,     8,     8,     0,   630,    70,   592,    71,
+      73,    73,   423,   140,   146,   270,    71,   144,    61,   146,
+     144,    66,    67,    68,   148,   149,   281,   282,     8,    73,
+     285,   146,   287,    13,    14,    15,    16,    17,    18,    19,
+      20,    21,    22,    23,    24,    26,     4,     5,     6,    48,
+       8,     9,    10,    11,    12,    13,    14,   666,    16,    17,
+      18,    19,    20,    21,    22,   111,   562,    25,   564,    61,
+     694,   482,   696,    71,   137,    73,    61,   149,    36,    59,
+      60,   140,    71,   146,   580,    43,    44,   146,     8,   151,
+     149,   146,    50,    13,    14,    15,    16,    17,    18,    19,
+      20,    21,    22,    23,    24,    31,   149,   151,   154,   505,
+     149,   481,   148,    61,    71,   147,   179,    75,   148,   148,
+     147,   184,   148,   148,   148,   734,   148,   161,   191,   192,
+     193,   148,   148,   147,   147,   147,    73,   147,   201,    59,
+      60,   204,   147,   147,    90,    71,    73,    73,   140,   146,
+      71,    78,    73,   151,    71,   144,    73,   149,   413,   655,
+     571,   146,   120,   146,   149,   164,    71,   147,    73,    63,
+     128,   426,    78,   121,    73,    90,    71,    71,    26,    73,
+      71,   227,    73,    74,   141,   111,   146,   144,   599,   600,
+     253,   587,   754,   253,   605,   606,    73,   155,   144,   157,
+     140,    78,   146,   161,   144,   163,    31,   253,   166,   705,
+      71,   138,   139,    31,   151,   141,   279,   111,   144,   145,
+     283,    31,   310,    73,   270,   151,   153,   147,   149,   144,
+     151,   137,    31,   518,   151,   281,   282,    71,   196,   285,
+     354,   287,   200,   144,   307,   146,   151,   141,    73,   144,
+     144,   314,   151,   211,   149,    73,    73,   151,   321,    73,
+     137,   138,   139,    73,    78,   661,    66,    67,   331,   332,
+      31,   229,   117,   144,    73,   146,   234,   235,   236,   237,
+     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
+     248,   249,   250,   251,   252,   748,   117,    73,   361,   257,
+     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
+     268,   895,    73,    31,   272,   273,   146,   354,   902,   146,
+     354,   138,   139,   369,   138,   139,    59,    60,    71,    71,
+      73,    73,   140,   744,   397,   293,   144,   790,   296,    13,
+      14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
+      24,   144,   140,   146,    73,    73,   144,   146,   316,    78,
+     359,   137,   138,   139,    93,    94,   146,   413,   111,   111,
+      66,    67,   768,    71,   146,    73,   439,   440,   146,   227,
+     426,   444,   494,    73,    71,    59,    60,    71,    78,    73,
+      71,    23,    24,   149,    26,   458,   354,    31,   141,   141,
+      71,   144,   144,   148,   149,   253,   149,    71,   151,   151,
+      31,   410,   370,   111,   372,    71,   374,   375,   376,   138,
+     139,   150,   270,   140,   423,   123,   146,   111,    23,    24,
+     493,   494,   140,   281,   282,   121,   499,   285,   501,   287,
+      79,    80,   505,   141,   144,   508,   144,   137,   138,   139,
+      71,   144,    73,   151,   146,   518,    49,   141,   518,   144,
+     144,   140,   140,    71,    93,    94,   508,   151,   124,    92,
+      93,    94,   518,   140,   148,    73,   539,   540,   541,   144,
+      78,   140,   594,   482,   547,   141,   549,   148,   144,   145,
+     111,   147,   555,   748,   121,   558,    13,   560,   140,   562,
+     534,   564,   144,   148,   146,   149,    92,    93,    94,   543,
+      13,   147,   470,   146,   472,   150,   124,   580,   476,    71,
+     141,   150,   585,   144,   587,    71,   614,   150,   152,   592,
+     151,   594,   928,   141,   119,   790,   144,   145,   626,    26,
+     138,   139,   106,   107,   108,   109,   110,   111,   112,   140,
+     592,    82,   184,   144,   146,   146,   514,   146,   621,   191,
+     192,   193,    23,    24,   150,   413,   524,   148,     8,   201,
+      90,    71,   571,    92,    93,    94,   534,   640,   426,   537,
+     538,   145,    71,   617,   583,   543,   147,    48,    73,    45,
+      46,    47,   655,    49,   148,     8,   684,   147,   661,    71,
+     599,   600,    61,   666,    13,   150,   605,   606,   109,   110,
+     722,    23,    24,   119,    26,   154,   117,   118,   146,   146,
+     662,   253,   734,   776,   666,   688,    92,    93,    94,   692,
+     146,   146,   198,    26,   146,   698,   202,   700,    66,    67,
+      68,    13,   705,   140,   145,   150,   212,   146,   214,   215,
+     216,   144,   610,   611,    71,    99,    13,   148,   616,   617,
+     150,   814,   106,   107,   108,   109,   110,   111,   112,   711,
+     518,   734,   146,    13,   737,   307,    42,    43,    44,    45,
+      46,    47,   147,    49,   642,     8,   146,   645,   725,   321,
+     147,     8,   780,   144,   120,   783,   149,   146,    71,   331,
+     332,   145,   748,   164,   147,   768,   150,    99,   147,    71,
+     137,   102,    13,   671,   106,   107,   108,   109,   110,   111,
+     112,   154,     8,   184,   787,   150,   147,    79,   147,   149,
+     191,   192,   193,   147,     8,   146,   122,   774,   148,   122,
+     201,    13,   148,   148,   790,   744,   147,   810,     8,   812,
+     838,   146,   150,   145,   148,   104,   844,   147,   150,   147,
+      73,   795,    13,   147,   827,   397,   147,   147,   147,   154,
+     121,   147,   184,   147,    89,    71,    98,   865,   149,   191,
+     192,   193,   870,    73,   149,   146,    13,   850,   121,   201,
+     148,   854,    83,   148,   148,   122,   754,    13,   861,   887,
+      73,    71,    73,    13,   762,    98,   147,   439,   440,   146,
+     148,   307,   147,   106,   107,   108,   109,   110,   111,   148,
+     908,    13,    71,   911,    13,   321,   458,    73,   916,   150,
+     150,   894,   895,    73,   868,   321,    13,   795,   146,   902,
+      26,   253,   800,   801,    68,    73,    71,   935,   148,    87,
+      73,    13,   147,   895,   146,    73,    68,    26,   146,   148,
+     902,   493,   494,    85,   898,   928,   149,   499,   147,   147,
+     331,   332,   148,   150,    73,   150,   834,   146,   577,   147,
+     314,   102,   149,   458,   150,   926,   518,   354,   622,   801,
+     587,   688,   805,   660,   914,   319,   722,   726,   359,   722,
+     748,   672,   813,   634,   184,   610,   864,   539,   540,   541,
+     868,   863,   640,   560,    -1,   547,    -1,    -1,    -1,   331,
+     332,    -1,    -1,   555,    -1,    -1,   558,    -1,   560,    -1,
+     562,    -1,   564,    -1,    -1,    -1,   397,    -1,    -1,    -1,
+     898,    -1,   790,   439,   440,    -1,    -1,    -1,   580,   410,
+      -1,    -1,    -1,   439,   440,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,   423,    13,    14,    15,    16,    17,    18,    19,
+      20,    21,    22,    23,    24,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,   397,    -1,    -1,    -1,   621,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,   458,    -1,    -1,
+      -1,    -1,    -1,   499,    -1,    -1,    -1,    -1,   640,    59,
+      60,    -1,    -1,   499,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,   482,    -1,   655,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,   493,   494,    -1,    -1,    -1,    -1,    -1,    -1,
+      90,    -1,    -1,    -1,    -1,   541,   458,    -1,    -1,    -1,
+      -1,   547,    -1,    -1,    -1,   541,   688,    -1,    -1,   555,
+     692,   547,    -1,    -1,    -1,    -1,   698,    -1,   700,   555,
+      -1,    -1,    -1,   705,    -1,    -1,    -1,    -1,   539,   540,
+      -1,   493,   494,    -1,    -1,    -1,    -1,    42,    43,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,   558,    -1,   560,
+      -1,   562,    -1,   564,    -1,   737,   518,    -1,    -1,    -1,
+     571,    -1,    -1,    -1,    69,    70,    71,    -1,    -1,   580,
+      -1,    -1,   583,    -1,    79,    -1,    -1,   539,   540,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,
+      -1,    -1,    -1,    -1,   605,   606,   558,    -1,   560,    -1,
+     562,    -1,   564,    -1,    -1,   787,   111,    -1,    -1,    -1,
+     621,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   580,   124,
+     125,   126,   127,   128,   129,    -1,    -1,    -1,   810,   640,
+     812,   136,    -1,    -1,    -1,    -1,   141,   142,   143,   144,
+      -1,    -1,    -1,    -1,   655,   827,   692,    -1,    -1,    -1,
+      -1,    -1,   698,    -1,   700,    -1,   692,    -1,    -1,   621,
+      -1,    -1,   698,    -1,   700,    -1,    -1,    -1,   850,    -1,
+      -1,    -1,   854,    -1,    -1,    -1,    -1,   688,   640,   861,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,   683,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    42,    43,    -1,   858,    -1,    -1,    48,    -1,
+      -1,   737,    -1,   655,   705,    -1,    -1,    -1,    -1,    -1,
+      -1,   737,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,   894,    13,    14,    15,    16,    17,    18,    19,
+      20,    21,    22,    23,    24,    -1,   688,    -1,    -1,    -1,
+      -1,    -1,    -1,   744,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,   787,    -1,   705,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,   787,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    59,
+      60,    -1,    -1,    -1,   810,    -1,   812,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,   810,    -1,   812,    -1,    -1,    -1,
+      -1,   827,    -1,     3,     4,     5,     6,     7,    -1,    -1,
+      -1,   827,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,   850,    -1,    -1,    -1,   854,    -1,
+      -1,    -1,    -1,    -1,   850,   861,    -1,    -1,   854,    -1,
+      -1,    -1,    42,    43,    -1,   861,    -1,    -1,    48,    -1,
       50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
-      60,    -1,    62,    63,    64,    65,    -1,    -1,   718,    69,
-      70,    71,    72,    73,    -1,    75,    -1,    -1,    -1,    79,
+      60,    -1,    62,    63,    64,    65,    -1,    -1,   894,    69,
+      70,    71,    72,    73,    -1,    75,    -1,    -1,   894,    79,
       80,    81,    82,    -1,    84,    -1,    86,    -1,    88,    -1,
       -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,    99,
      100,   101,    -1,   103,   104,   105,    -1,    -1,    -1,   109,
      110,   111,    -1,   113,   114,   115,   116,   117,   118,    -1,
       -1,    -1,    -1,   123,   124,   125,   126,   127,   128,   129,
        3,     4,     5,     6,     7,    -1,   136,    -1,    -1,    12,
-      -1,   141,   142,   143,   144,   145,    -1,   147,   148,    -1,
-     150,   151,   152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,
+      -1,   141,   142,   143,   144,   145,   146,    -1,   148,   149,
+      -1,   151,   152,   153,    36,    37,    38,    39,    40,    41,
+      42,    43,    44,    45,    46,    47,    -1,    49,    -1,    42,
       43,    -1,    -1,    -1,    -1,    48,    -1,    50,    51,    52,
       53,    54,    55,    56,    57,    58,    59,    60,    -1,    62,
       63,    64,    65,    -1,    -1,    -1,    69,    70,    71,    72,
@@ -2103,48 +2118,10 @@ static const yytype_int16 yycheck[] =
       -1,    -1,    95,    96,    97,    98,    -1,   100,   101,    -1,
      103,    -1,   105,    -1,    -1,    -1,   109,   110,   111,    -1,
      113,   114,   115,   116,   117,   118,    -1,    -1,    -1,    -1,
-     123,   124,   125,   126,   127,   128,   129,     3,     4,     5,
-       6,     7,    -1,   136,    -1,    -1,    12,    -1,   141,   142,
-     143,   144,   145,    -1,   147,   148,    -1,   150,   151,   152,
-      26,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    42,    43,    -1,    -1,
-      -1,    -1,    48,    -1,    50,    51,    52,    53,    54,    55,
-      56,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
-      -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,    75,
-      -1,    -1,    -1,    79,    80,    81,    82,    -1,    84,    -1,
-      86,    -1,    88,    -1,    -1,    91,    -1,    -1,    -1,    95,
-      96,    97,    98,    -1,   100,   101,    -1,   103,    -1,   105,
-      -1,    -1,    -1,    -1,    -1,   111,    -1,   113,   114,   115,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,   124,   125,
-     126,   127,   128,   129,     3,     4,     5,     6,     7,    -1,
-     136,    -1,    -1,    12,    -1,   141,   142,   143,   144,   145,
-      -1,   147,   148,    -1,   150,   151,   152,    26,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    42,    43,    -1,    -1,    -1,    -1,    48,
-      -1,    50,    51,    52,    53,    54,    55,    56,    57,    58,
-      59,    60,    -1,    62,    63,    64,    65,    -1,    -1,    -1,
-      69,    70,    71,    72,    73,    -1,    75,    -1,    -1,    -1,
-      79,    80,    81,    82,    -1,    84,    -1,    86,    -1,    88,
-      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
-      -1,   100,   101,    -1,   103,    -1,   105,    -1,    -1,    -1,
-      -1,    -1,   111,    -1,   113,   114,   115,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,   123,   124,   125,   126,   127,   128,
-     129,     3,     4,     5,     6,     7,    -1,   136,    -1,    -1,
-      12,    -1,   141,   142,   143,   144,   145,    -1,   147,   148,
-      -1,   150,   151,   152,    26,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      42,    43,    -1,    -1,    -1,    -1,    48,    -1,    50,    51,
-      52,    53,    54,    55,    56,    57,    58,    59,    60,    -1,
-      62,    63,    64,    65,    -1,    -1,    -1,    69,    70,    71,
-      72,    73,    -1,    75,    -1,    -1,    -1,    79,    80,    81,
-      82,    -1,    84,    -1,    86,    -1,    88,    -1,    -1,    91,
-      -1,    -1,    -1,    95,    96,    97,    98,    -1,   100,   101,
-      -1,   103,    -1,   105,    -1,    -1,    -1,    -1,    -1,   111,
-      -1,   113,   114,   115,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   123,   124,   125,   126,   127,   128,   129,     3,     4,
-       5,     6,     7,    -1,   136,    -1,    -1,    12,    -1,   141,
-     142,   143,   144,   145,    -1,   147,   148,    -1,   150,   151,
-     152,    26,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+     123,   124,   125,   126,   127,   128,   129,    -1,     3,     4,
+       5,     6,     7,   136,    -1,    -1,    -1,    12,   141,   142,
+     143,   144,    -1,   146,    -1,   148,   149,    -1,   151,   152,
+     153,    26,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    43,    -1,
       -1,    -1,    -1,    48,    -1,    50,    51,    52,    53,    54,
       55,    56,    57,    58,    59,    60,    -1,    62,    63,    64,
@@ -2154,99 +2131,112 @@ static const yytype_int16 yycheck[] =
       95,    96,    97,    98,    -1,   100,   101,    -1,   103,    -1,
      105,    -1,    -1,    -1,    -1,    -1,   111,    -1,   113,   114,
      115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,   124,
-     125,   126,   127,   128,   129,     3,     4,     5,     6,     7,
-      -1,   136,    -1,    -1,    12,    -1,   141,   142,   143,   144,
-     145,    -1,   147,   148,    -1,   150,   151,   152,    -1,    -1,
+     125,   126,   127,   128,   129,    -1,     3,     4,     5,     6,
+       7,   136,    -1,    -1,    -1,    12,   141,   142,   143,   144,
+      -1,   146,    -1,   148,   149,    -1,   151,   152,   153,    26,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    42,    43,    -1,    -1,    -1,    -1,
-      48,    -1,    50,    51,    52,    53,    54,    55,    56,    57,
-      58,    59,    60,    -1,    62,    63,    64,    65,    -1,    -1,
-      -1,    69,    70,    71,    72,    73,    -1,    75,    -1,    -1,
-      -1,    79,    80,    81,    82,    -1,    84,    -1,    86,    -1,
-      88,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,
-      98,    -1,   100,   101,    -1,   103,    -1,   105,    -1,    -1,
-      -1,    -1,    -1,   111,    -1,   113,   114,   115,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,   123,   124,   125,   126,   127,
-     128,   129,     3,     4,     5,     6,     7,    -1,   136,    -1,
-      -1,    12,    -1,   141,   142,   143,   144,   145,    -1,   147,
-     148,    -1,   150,   151,   152,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    42,    43,    -1,    -1,    -1,
+      -1,    48,    -1,    50,    51,    52,    53,    54,    55,    56,
+      57,    58,    59,    60,    -1,    62,    63,    64,    65,    -1,
+      -1,    -1,    69,    70,    71,    72,    73,    -1,    75,    -1,
+      -1,    -1,    79,    80,    81,    82,    -1,    84,    -1,    86,
+      -1,    88,    -1,    -1,    91,    -1,    -1,    -1,    95,    96,
+      97,    98,    -1,   100,   101,    -1,   103,    -1,   105,    -1,
+      -1,    -1,    -1,    -1,   111,    -1,   113,   114,   115,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,   123,   124,   125,   126,
+     127,   128,   129,    -1,     3,     4,     5,     6,     7,   136,
+      -1,    -1,    -1,    12,   141,   142,   143,   144,    -1,   146,
+      -1,   148,   149,    -1,   151,   152,   153,    26,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    42,    43,    -1,    -1,    -1,    -1,    48,
+      -1,    50,    51,    52,    53,    54,    55,    56,    57,    58,
+      59,    60,    -1,    62,    63,    64,    65,    -1,    -1,    -1,
+      69,    70,    71,    72,    73,    -1,    75,    -1,    -1,    -1,
+      79,    80,    81,    82,    -1,    84,    -1,    86,    -1,    88,
+      -1,    -1,    91,    -1,    -1,    -1,    95,    96,    97,    98,
+      -1,   100,   101,    -1,   103,    -1,   105,    -1,    -1,    -1,
+      -1,    -1,   111,    -1,   113,   114,   115,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,   123,   124,   125,   126,   127,   128,
+     129,    -1,     3,     4,     5,     6,     7,   136,    -1,    -1,
+      -1,    12,   141,   142,   143,   144,    -1,   146,    -1,   148,
+     149,    -1,   151,   152,   153,    26,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    42,    43,    -1,    -1,    -1,    -1,    48,    -1,    50,
       51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
-      -1,    62,    63,    64,    -1,    -1,    -1,    -1,    69,    70,
-      71,    72,    73,    -1,    -1,    -1,    -1,    -1,    79,    30,
-      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
-      41,    42,    43,    44,    45,    46,    47,    98,    49,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-     111,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,    -1,
+      -1,    62,    63,    64,    65,    -1,    -1,    -1,    69,    70,
+      71,    72,    73,    -1,    75,    -1,    -1,    -1,    79,    80,
+      81,    82,    -1,    84,    -1,    86,    -1,    88,    -1,    -1,
+      91,    -1,    -1,    -1,    95,    96,    97,    98,    -1,   100,
+     101,    -1,   103,    -1,   105,    -1,    -1,    -1,    -1,    -1,
+     111,    -1,   113,   114,   115,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   123,   124,   125,   126,   127,   128,   129,     3,
        4,     5,     6,     7,    -1,   136,    -1,    -1,    12,    -1,
-     141,   142,   143,   144,   145,    -1,   147,    -1,    -1,   150,
-     151,   152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+     141,   142,   143,   144,    -1,   146,    -1,   148,   149,    -1,
+     151,   152,   153,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    43,
       -1,    -1,    -1,    -1,    48,    -1,    50,    51,    52,    53,
       54,    55,    56,    57,    58,    59,    60,    -1,    62,    63,
-      64,    -1,    -1,    -1,    -1,    69,    70,    71,    72,    73,
-      -1,    -1,    -1,    -1,    -1,    79,    -1,    31,    32,    33,
-      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
-      44,    45,    46,    47,    98,    49,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
+      64,    65,    -1,    -1,    -1,    69,    70,    71,    72,    73,
+      -1,    75,    -1,    -1,    -1,    79,    80,    81,    82,    -1,
+      84,    -1,    86,    -1,    88,    -1,    -1,    91,    -1,    -1,
+      -1,    95,    96,    97,    98,    -1,   100,   101,    -1,   103,
+      -1,   105,    -1,    -1,    -1,    -1,    -1,   111,    -1,   113,
      114,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      124,   125,   126,   127,   128,   129,     3,     4,     5,     6,
        7,    -1,   136,    -1,    -1,    12,    -1,   141,   142,   143,
-     144,   145,    -1,   147,    -1,    -1,   150,   151,   152,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+     144,    -1,   146,    -1,   148,   149,    -1,   151,   152,   153,
+      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    42,    43,    -1,    -1,    -1,
       -1,    48,    -1,    50,    51,    52,    53,    54,    55,    56,
       57,    58,    59,    60,    -1,    62,    63,    64,    -1,    -1,
       -1,    -1,    69,    70,    71,    72,    73,    -1,    -1,    -1,
-      -1,    -1,    79,    32,    33,    34,    35,    36,    37,    38,
-      39,    40,    41,    42,    43,    44,    45,    46,    47,    -1,
-      49,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    79,    30,    31,    32,    33,    34,    35,    36,
+      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
+      47,    98,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   111,    -1,    -1,   114,   115,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   123,   124,   125,   126,
      127,   128,   129,     3,     4,     5,     6,     7,    -1,   136,
-      -1,    -1,    12,    -1,   141,   142,   143,   144,   145,    -1,
-     147,    -1,    -1,   150,   151,   152,    -1,    -1,    -1,    -1,
+      -1,    -1,    12,    -1,   141,   142,   143,   144,   145,   146,
+      -1,    -1,    -1,    -1,   151,   152,   153,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    42,    43,    -1,    -1,    -1,    -1,    48,    -1,
       50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
       60,    -1,    62,    63,    64,    -1,    -1,    -1,    -1,    69,
       70,    71,    72,    73,    -1,    -1,    -1,    -1,    -1,    79,
-      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
-      42,    43,    44,    45,    46,    47,    -1,    49,    98,    -1,
+      -1,    31,    32,    33,    34,    35,    36,    37,    38,    39,
+      40,    41,    42,    43,    44,    45,    46,    47,    98,    49,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   111,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,   123,   124,   125,   126,   127,   128,   129,
        3,     4,     5,     6,     7,    -1,   136,    -1,    -1,    12,
-      -1,   141,   142,   143,   144,   145,   146,    -1,    -1,    -1,
-     150,   151,   152,    -1,    -1,    -1,    -1,    -1,    31,    -1,
+      -1,   141,   142,   143,   144,    -1,   146,    -1,   148,    -1,
+      -1,   151,   152,   153,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,
       43,    -1,    -1,    -1,    -1,    48,    -1,    50,    51,    52,
       53,    54,    55,    56,    57,    58,    59,    60,    -1,    62,
       63,    64,    -1,    -1,    -1,    -1,    69,    70,    71,    72,
-      73,    -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
+      73,    -1,    -1,    -1,    -1,    -1,    79,    32,    33,    34,
+      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
+      45,    46,    47,    -1,    49,    98,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,
       -1,   114,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      123,   124,   125,   126,   127,   128,   129,     3,     4,     5,
        6,     7,    -1,   136,    -1,    -1,    12,    -1,   141,   142,
-     143,   144,   145,    -1,    -1,    -1,    -1,   150,   151,   152,
-      -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,
+     143,   144,    -1,   146,    -1,   148,    -1,    -1,   151,   152,
+     153,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    42,    43,    -1,    -1,
       -1,    -1,    48,    -1,    50,    51,    52,    53,    54,    55,
       56,    57,    58,    59,    60,    -1,    62,    63,    64,    -1,
       -1,    -1,    -1,    69,    70,    71,    72,    73,    -1,    -1,
-      -1,    -1,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    79,    32,    33,    34,    35,    36,    37,
+      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
+      -1,    49,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,   114,   115,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,   124,   125,
      126,   127,   128,   129,     3,     4,     5,     6,     7,    -1,
-     136,    -1,    -1,    12,    -1,   141,   142,   143,   144,   145,
-      -1,    -1,    -1,    -1,   150,   151,   152,    -1,    -1,    -1,
-      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+     136,    -1,    -1,    12,    -1,   141,   142,   143,   144,    -1,
+     146,    -1,   148,    -1,    -1,   151,   152,   153,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    42,    43,    -1,    -1,    -1,    -1,    48,
       -1,    50,    51,    52,    53,    54,    55,    56,    57,    58,
       59,    60,    -1,    62,    63,    64,    -1,    -1,    -1,    -1,
@@ -2257,8 +2247,8 @@ static const yytype_int16 yycheck[] =
       -1,    -1,   111,    -1,    -1,   114,   115,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   123,   124,   125,   126,   127,   128,
      129,     3,     4,     5,     6,     7,    -1,   136,    -1,    -1,
-      12,    -1,   141,   142,   143,   144,   145,    -1,    -1,    -1,
-      -1,   150,   151,   152,    -1,    -1,    -1,    -1,    -1,    31,
+      12,    -1,   141,   142,   143,   144,    -1,   146,   147,    -1,
+      -1,    -1,   151,   152,   153,    -1,    -1,    -1,    -1,    31,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       42,    43,    -1,    -1,    -1,    -1,    48,    -1,    50,    51,
       52,    53,    54,    55,    56,    57,    58,    59,    60,    -1,
@@ -2270,8 +2260,8 @@ static const yytype_int16 yycheck[] =
       -1,    -1,   114,   115,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,   123,   124,   125,   126,   127,   128,   129,     3,     4,
        5,     6,     7,    -1,   136,    -1,    -1,    12,    -1,   141,
-     142,   143,   144,   145,    -1,    -1,    -1,    -1,   150,   151,
-     152,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
+     142,   143,   144,    -1,   146,    -1,    -1,    -1,    -1,   151,
+     152,   153,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    43,    -1,
       -1,    -1,    -1,    48,    -1,    50,    51,    52,    53,    54,
       55,    56,    57,    58,    59,    60,    -1,    62,    63,    64,
@@ -2283,7 +2273,7 @@ static const yytype_int16 yycheck[] =
      115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,   124,
      125,   126,   127,   128,   129,     3,     4,     5,     6,     7,
       -1,   136,    -1,    -1,    12,    -1,   141,   142,   143,   144,
-     145,    -1,    -1,    -1,    -1,   150,   151,   152,    -1,    -1,
+      -1,   146,    -1,    -1,    -1,    -1,   151,   152,   153,    -1,
       -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    42,    43,    -1,    -1,    -1,    -1,
       48,    -1,    50,    51,    52,    53,    54,    55,    56,    57,
@@ -2295,8 +2285,8 @@ static const yytype_int16 yycheck[] =
       -1,    -1,    -1,   111,    -1,    -1,   114,   115,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,   123,   124,   125,   126,   127,
      128,   129,     3,     4,     5,     6,     7,    -1,   136,    -1,
-      -1,    12,    -1,   141,   142,   143,   144,   145,    -1,    -1,
-      -1,    -1,   150,   151,   152,    -1,    -1,    -1,    -1,    -1,
+      -1,    12,    -1,   141,   142,   143,   144,    -1,   146,    -1,
+      -1,    -1,    -1,   151,   152,   153,    -1,    -1,    -1,    -1,
       31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    42,    43,    -1,    -1,    -1,    -1,    48,    -1,    50,
       51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
@@ -2308,8 +2298,8 @@ static const yytype_int16 yycheck[] =
      111,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,   123,   124,   125,   126,   127,   128,   129,     3,
        4,     5,     6,     7,    -1,   136,    -1,    -1,    12,    -1,
-     141,   142,   143,   144,   145,    -1,    -1,    -1,    -1,   150,
-     151,   152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+     141,   142,   143,   144,    -1,   146,    -1,    -1,    -1,    -1,
+     151,   152,   153,    -1,    -1,    -1,    -1,    31,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    43,
       -1,    -1,    -1,    -1,    48,    -1,    50,    51,    52,    53,
       54,    55,    56,    57,    58,    59,    60,    -1,    62,    63,
@@ -2321,8 +2311,8 @@ static const yytype_int16 yycheck[] =
      114,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      124,   125,   126,   127,   128,   129,     3,     4,     5,     6,
        7,    -1,   136,    -1,    -1,    12,    -1,   141,   142,   143,
-     144,   145,    -1,    -1,    -1,    -1,   150,   151,   152,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+     144,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,   153,
+      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    42,    43,    -1,    -1,    -1,
       -1,    48,    -1,    50,    51,    52,    53,    54,    55,    56,
       57,    58,    59,    60,    -1,    62,    63,    64,    -1,    -1,
@@ -2332,100 +2322,130 @@ static const yytype_int16 yycheck[] =
       -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,   111,    -1,    -1,   114,   115,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,   123,   124,   125,   126,
-     127,   128,   129,    -1,    -1,    -1,    -1,    -1,    -1,   136,
-       9,    10,    11,    -1,   141,   142,   143,   144,   145,    -1,
-      -1,    -1,    -1,   150,   151,   152,    25,    -1,    27,    28,
+     127,   128,   129,     3,     4,     5,     6,     7,    -1,   136,
+      -1,    -1,    12,    -1,   141,   142,   143,   144,    -1,   146,
+      -1,    -1,    -1,    -1,   151,   152,   153,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    42,    43,    -1,    -1,    -1,    -1,    48,    -1,
+      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
+      60,    -1,    62,    63,    64,    -1,    -1,    -1,    -1,    69,
+      70,    71,    72,    73,    -1,    -1,    -1,    -1,    -1,    79,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,   111,    -1,    -1,   114,   115,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,   123,   124,   125,   126,   127,   128,   129,
+       3,     4,     5,     6,     7,    -1,   136,    -1,    -1,    12,
+      -1,   141,   142,   143,   144,    -1,   146,    -1,    -1,    -1,
+      -1,   151,   152,   153,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,
+      43,    -1,    -1,    -1,    -1,    48,    -1,    50,    51,    52,
+      53,    54,    55,    56,    57,    58,    59,    60,    -1,    62,
+      63,    64,    -1,    -1,    -1,    -1,    69,    70,    71,    72,
+      73,    -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,
+      -1,   114,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+     123,   124,   125,   126,   127,   128,   129,    -1,    -1,    -1,
+      -1,    -1,    -1,   136,    -1,     9,    10,    11,   141,   142,
+     143,   144,    -1,   146,    -1,    -1,    -1,    -1,   151,   152,
+     153,    25,    -1,    27,    28,    29,    30,    31,    32,    33,
+      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
+      44,    45,    46,    47,    -1,    49,     9,    10,    11,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    25,    -1,    27,    28,    29,    30,    31,    32,
+      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
+      43,    44,    45,    46,    47,    -1,    49,     9,    10,    11,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    25,    -1,    27,    28,    29,    30,    31,
+      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
+      42,    43,    44,    45,    46,    47,    -1,    49,    -1,    -1,
+      -1,    -1,    -1,     9,    10,    11,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    25,
+     154,    27,    28,    29,    30,    31,    32,    33,    34,    35,
+      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
+      46,    47,    -1,    49,     9,    10,    11,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,
+      25,    -1,    27,    28,    29,    30,    31,    32,    33,    34,
+      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
+      45,    46,    47,    -1,    49,     9,    10,    11,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,
+      -1,    25,    -1,    27,    28,    29,    30,    31,    32,    33,
+      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
+      44,    45,    46,    47,    -1,    49,    -1,     9,    10,    11,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    25,   150,    27,    28,    29,    30,    31,
+      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
+      42,    43,    44,    45,    46,    47,    -1,    49,    -1,    -1,
+       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,   150,    25,    26,    27,    28,
       29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
       39,    40,    41,    42,    43,    44,    45,    46,    47,    -1,
       49,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    25,    -1,    27,
+      -1,    -1,    -1,    -1,    -1,    -1,   150,    25,    -1,    27,
       28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
       38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
-      -1,    49,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    25,    -1,
-      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
-      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
-      47,    -1,    49,    -1,    -1,    -1,    -1,     9,    10,    11,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    25,   153,    27,    28,    29,    30,    31,
-      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
-      42,    43,    44,    45,    46,    47,    -1,    49,     9,    10,
-      11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   149,    -1,    -1,    25,    -1,    27,    28,    29,    30,
-      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
-      41,    42,    43,    44,    45,    46,    47,    -1,    49,     9,
-      10,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,   149,    -1,    -1,    25,    -1,    27,    28,    29,
-      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
-      40,    41,    42,    43,    44,    45,    46,    47,    -1,    49,
-      -1,    -1,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,   149,    25,    26,
-      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
-      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
-      47,    -1,    49,     9,    10,    11,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   149,    25,
+      -1,    49,    -1,     9,    10,    11,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   150,    25,
       -1,    27,    28,    29,    30,    31,    32,    33,    34,    35,
       36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
       46,    47,    -1,    49,     9,    10,    11,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   149,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   148,
       25,    -1,    27,    28,    29,    30,    31,    32,    33,    34,
       35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
       45,    46,    47,    -1,    49,     9,    10,    11,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-     147,    25,    -1,    27,    28,    29,    30,    31,    32,    33,
+     148,    25,    -1,    27,    28,    29,    30,    31,    32,    33,
       34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
-      44,    45,    46,    47,    -1,    49,     9,    10,    11,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   147,    25,    -1,    27,    28,    29,    30,    31,    32,
-      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
-      43,    44,    45,    46,    47,    -1,    49,     9,    10,    11,
+      44,    45,    46,    47,    -1,    49,    -1,     9,    10,    11,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,   147,    25,    -1,    27,    28,    29,    30,    31,
+      -1,    -1,   148,    25,    -1,    27,    28,    29,    30,    31,
       32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
       42,    43,    44,    45,    46,    47,    -1,    49,     9,    10,
       11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,   147,    25,    -1,    27,    28,    29,    30,
+      -1,    -1,    -1,   148,    25,    -1,    27,    28,    29,    30,
       31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
       41,    42,    43,    44,    45,    46,    47,    -1,    49,     9,
       10,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,   147,    25,    -1,    27,    28,    29,
+      -1,    -1,    -1,    -1,   148,    25,    -1,    27,    28,    29,
       30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
       40,    41,    42,    43,    44,    45,    46,    47,    -1,    49,
        9,    10,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,   146,    -1,    25,    -1,    27,    28,
+      -1,    -1,    -1,    -1,    -1,   147,    25,    -1,    27,    28,
       29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
       39,    40,    41,    42,    43,    44,    45,    46,    47,    -1,
       49,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,   146,    -1,    25,    -1,    27,
+      -1,    -1,    -1,    -1,    -1,    -1,   147,    25,    -1,    27,
       28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
       38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
       -1,    49,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    25,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,   147,    25,    -1,
       27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
       37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
       47,    -1,    49,     9,    10,    11,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    25,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   147,    25,
       -1,    27,    28,    29,    30,    31,    32,    33,    34,    35,
       36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
       46,    47,    -1,    49,     9,    10,    11,    -1,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   147,
       25,    -1,    27,    28,    29,    30,    31,    32,    33,    34,
       35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
       45,    46,    47,    -1,    49,     9,    10,    11,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,
-      -1,    25,    -1,    27,    28,    29,    30,    31,    32,    33,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+     147,    25,    -1,    27,    28,    29,    30,    31,    32,    33,
       34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
       44,    45,    46,    47,    -1,    49,     9,    10,    11,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-     146,    -1,    25,    -1,    27,    28,    29,    30,    31,    32,
+      -1,   147,    25,    -1,    27,    28,    29,    30,    31,    32,
       33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
       43,    44,    45,    46,    47,    -1,    49,     9,    10,    11,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   146,    -1,    25,    -1,    27,    28,    29,    30,    31,
+      -1,    -1,   147,    25,    -1,    27,    28,    29,    30,    31,
       32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
       42,    43,    44,    45,    46,    47,    -1,    49,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,   146,    -1,     9,    10,    11,    -1,    -1,    -1,
+      -1,    -1,    -1,   147,     9,    10,    11,    -1,    -1,    -1,
       -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   122,
       25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
       35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
@@ -2443,107 +2463,114 @@ static const yytype_int16 yycheck[] =
       37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
       47,    25,    49,    27,    28,    29,    30,    31,    32,    33,
       34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
-      44,    45,    46,    47,    -1,    49,    28,    29,    30,    31,
-      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
-      42,    43,    44,    45,    46,    47,    -1,    49,    29,    30,
+      44,    45,    46,    47,    -1,    49,    27,    28,    29,    30,
       31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
-      41,    42,    43,    44,    45,    46,    47,    -1,    49
+      41,    42,    43,    44,    45,    46,    47,    -1,    49,    28,
+      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
+      39,    40,    41,    42,    43,    44,    45,    46,    47,    -1,
+      49,    29,    30,    31,    32,    33,    34,    35,    36,    37,
+      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
+      -1,    49
 };
 
 /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
    symbol of state STATE-NUM.  */
 static const yytype_uint16 yystos[] =
 {
-       0,   155,   156,     0,   157,     3,     4,     5,     6,     7,
+       0,   156,   157,     0,   158,     3,     4,     5,     6,     7,
       12,    42,    43,    48,    50,    51,    52,    53,    54,    55,
       56,    57,    58,    59,    60,    62,    63,    64,    65,    69,
       70,    71,    72,    73,    75,    79,    80,    81,    82,    84,
       86,    88,    91,    95,    96,    97,    98,    99,   100,   101,
      103,   104,   105,   109,   110,   111,   113,   114,   115,   116,
      117,   118,   123,   124,   125,   126,   127,   128,   129,   136,
-     141,   142,   143,   144,   145,   147,   148,   150,   151,   152,
-     158,   159,   164,   168,   169,   199,   200,   202,   204,   207,
-     209,   254,   267,   270,   279,   290,   293,   297,   298,   300,
-     301,   309,   310,   311,   312,   313,   314,   315,   321,   331,
-     334,    71,   111,   141,   267,   297,   297,   145,   297,   297,
-     297,   297,   297,   297,   297,   265,   297,   297,   297,   297,
-     297,   297,   297,   141,   144,   158,   279,   300,   301,   311,
-     300,   297,   141,   144,   158,   279,   281,   282,   311,   313,
-     314,   321,   145,   287,   145,    26,   250,   297,   176,   145,
-     145,   145,   186,   145,   147,   297,   147,   297,    71,    71,
-     147,   254,   297,   301,   187,   297,   144,   158,   162,   163,
-      73,   150,   236,   237,   117,   117,    73,   238,   145,   145,
-     145,   145,   145,   145,    73,    78,   137,   138,   139,   327,
-     328,   144,   148,   158,   158,   297,   165,   148,    78,   288,
-     327,    78,   327,   144,   145,     8,   147,    71,    71,    31,
-     201,   140,     9,    10,    11,    25,    27,    28,    29,    30,
-      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
-      41,    42,    43,    44,    45,    46,    47,    49,   147,    59,
-      60,    13,    14,    15,    16,    17,    18,    19,    20,    21,
-      22,    23,    24,   145,   140,   121,    61,   148,   150,   314,
-     201,   297,   297,   144,   158,   140,   140,   144,   158,   140,
-     257,   140,   121,   314,   146,   297,   297,     8,   147,   168,
-     174,   251,   252,   297,   254,   301,   145,   297,   147,   147,
-     147,    13,   147,   147,   148,   147,   158,    90,     8,   147,
-     148,   298,   301,     8,   147,    13,     8,   147,   197,   198,
-     301,   301,   332,   301,   146,   255,    31,   297,   325,   326,
-      61,   121,   137,   328,    72,   297,   301,    78,   137,   328,
-     158,   161,   147,   148,   145,   146,   149,   166,   297,   151,
-     152,    71,   271,    71,   119,   208,   206,    71,   145,    71,
-     309,   314,   321,   260,   297,   261,    26,   262,   258,   259,
-     297,   297,   297,   297,   297,   297,   297,   297,   297,   297,
-     297,   297,   297,   297,   297,   297,   297,   297,   297,   281,
-      31,   297,   297,   297,   297,   297,   297,   297,   297,   297,
-     297,   297,   297,   278,    71,   309,   302,   297,   316,   297,
-     146,   158,    71,    71,   158,   309,   145,   289,   309,   283,
-     146,   146,   297,    82,   297,   147,     8,    90,    90,    71,
-     218,   146,    42,    43,   124,   136,   141,   144,   158,   279,
-     290,   291,   292,   165,    90,    71,   163,   297,   237,   291,
-      73,     8,   146,     8,   146,   146,   147,   123,   301,   322,
-     323,   299,   301,   122,   146,     8,   295,   329,    71,    61,
-     149,   149,   145,   156,   160,   273,   116,   167,   168,   199,
-     200,   149,    31,   234,   235,   254,   301,    13,   141,   144,
-     158,   280,   205,   119,   210,   203,   266,   145,   145,   314,
-     297,   297,   264,   297,   297,   297,    63,   301,   234,   145,
-     145,    71,   148,   309,   317,   319,   320,   153,   149,   234,
-     317,    26,   170,   145,   146,   178,   253,   184,   182,    13,
-       8,   146,   181,   291,   291,   145,    78,   144,   158,   140,
-     149,    71,   149,    13,   198,   147,   333,   145,     8,   146,
-      31,   297,    31,   297,    71,    73,    74,   330,   297,   272,
-     149,   156,   234,   145,   299,   146,     8,   291,   144,   158,
-     120,   211,   212,   280,   148,   145,   124,   231,   232,   233,
-     280,   274,   275,   297,    26,   281,   146,   276,   277,   297,
-     318,   303,    61,   148,   146,   284,   172,   168,   177,   175,
-     251,   297,   301,    31,   214,   301,   291,    71,    26,   168,
-     217,    26,   148,   219,   291,   294,   296,   158,    71,   102,
-     291,   301,   324,   323,    13,   299,   299,   122,   153,   153,
-     234,   149,   146,   146,    31,   254,   301,   158,   212,   148,
-       8,   239,   231,   146,     8,    31,    73,   234,   234,   263,
-     256,   234,   234,   149,   145,   307,   316,   297,   285,   165,
-     171,   297,    26,   168,   224,   147,   122,   213,   301,   213,
-      13,   165,   147,   220,   147,   220,   122,   146,     8,   295,
-     145,   322,   297,    31,   297,   149,   146,   147,   299,   239,
-     280,    99,   106,   107,   108,   109,   110,   111,   112,   149,
-     240,   244,   245,   246,   247,   249,   146,   104,   268,   233,
-      73,    13,   146,   146,   297,   289,   146,   146,   308,   304,
-     153,   149,   121,   286,   173,   225,   146,   165,   179,   214,
-     146,   146,   291,    89,   220,    92,    93,    94,   220,   149,
-     291,   291,   188,   146,   299,   149,    71,   241,   267,   247,
-       8,   147,   148,   145,   148,    31,    73,    13,   291,   234,
-     121,   305,   317,   227,    66,    67,   229,   147,    83,   251,
-     185,   183,   147,    92,   147,   297,    26,   147,   223,   149,
-     122,   280,    13,    73,   248,   201,    71,   165,    31,    73,
-     269,   165,    73,    13,   291,   146,   317,    66,    67,   230,
-     145,   168,   147,   146,    26,   168,   216,   216,   147,   223,
-     222,   291,   189,   291,    13,     8,   147,    71,    13,   149,
-      73,     8,   146,   149,    13,   291,   306,   145,    26,    68,
-     297,   180,   165,   221,   165,    73,   291,    73,   242,   291,
-      31,    73,   291,   307,   297,   165,   147,   146,    26,   168,
-     215,    87,   165,   146,    13,   145,    73,   146,   226,   165,
-     147,   190,   291,   231,    26,   168,    85,   148,   146,   228,
-     147,   165,   147,   148,   243,   165,   149,   165,   191,   149,
-     102,   192,   193,   194,   145,   194,   280,   195,    73,   146,
-     196,   148,   165,   149
+     141,   142,   143,   144,   145,   146,   148,   149,   151,   152,
+     153,   159,   160,   163,   164,   169,   173,   174,   204,   205,
+     207,   209,   212,   214,   261,   274,   277,   286,   297,   300,
+     304,   305,   307,   308,   316,   317,   318,   319,   320,   321,
+     322,   328,   338,   341,    71,   111,   141,   274,   304,   304,
+     146,   304,   304,   304,   304,   304,   304,   304,   272,   304,
+     304,   304,   304,   304,   304,   304,   141,   144,   159,   286,
+     307,   308,   318,   307,   304,   141,   144,   159,   286,   288,
+     289,   318,   320,   321,   328,   146,   294,   146,    26,   257,
+     304,   181,   146,   146,   146,   191,   146,   148,   304,   148,
+     304,    71,    71,   148,   261,   304,   308,   192,   304,   144,
+     159,   167,   168,    73,   151,   241,   242,   117,   117,    73,
+     243,   146,   146,   146,   146,   146,   146,    73,    78,   137,
+     138,   139,   334,   335,   144,   149,   159,   159,    71,   304,
+     170,   149,    78,   295,   334,    78,   334,   144,   146,   164,
+     205,     8,   148,    71,    71,    31,   206,   140,     9,    10,
+      11,    25,    27,    28,    29,    30,    31,    32,    33,    34,
+      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
+      45,    46,    47,    49,   148,    59,    60,    13,    14,    15,
+      16,    17,    18,    19,    20,    21,    22,    23,    24,   146,
+     140,   121,    61,   149,   151,   321,   206,   304,   304,   144,
+     159,   140,   140,   144,   159,   140,   264,   140,   121,   321,
+     147,   304,   304,     8,   148,   173,   179,   258,   259,   304,
+     261,   308,   146,   304,   148,   148,   148,    13,   148,   148,
+     149,   148,   159,    90,     8,   148,   149,   305,   308,     8,
+     148,    13,     8,   148,   202,   203,   308,   308,   339,   308,
+     147,   262,    31,   304,   332,   333,    61,   121,   137,   335,
+      72,   304,   308,    78,   137,   335,   159,   162,   148,   149,
+     146,   146,   147,   150,   171,   304,   152,   153,    71,   278,
+      71,   119,   213,   211,    71,   146,    71,   316,   321,   328,
+     267,   304,   268,    26,   269,   265,   266,   304,   304,   304,
+     304,   304,   304,   304,   304,   304,   304,   304,   304,   304,
+     304,   304,   304,   304,   304,   304,   288,    31,   304,   304,
+     304,   304,   304,   304,   304,   304,   304,   304,   304,   304,
+     285,    71,   316,   309,   304,   323,   304,   147,   159,    71,
+      71,   159,   316,   146,   296,   316,   290,   147,   147,   304,
+      82,   304,   148,     8,    90,    90,    71,   223,   147,    42,
+      43,   124,   136,   141,   144,   159,   286,   297,   298,   299,
+     170,    90,    71,   168,   304,   242,   298,    73,     8,   147,
+       8,   147,   147,   148,   123,   308,   329,   330,   306,   308,
+     122,   147,     8,   302,   336,    71,    61,   150,   150,   146,
+     157,   161,   280,    71,    79,   165,   166,   116,   172,   173,
+     204,   205,   150,    31,   163,   239,   240,   261,   308,    13,
+     141,   144,   159,   287,   210,   119,   215,   208,   273,   146,
+     146,   321,   304,   304,   271,   304,   304,   304,    63,   308,
+     239,   146,   146,    71,   149,   316,   324,   326,   327,   154,
+     150,   239,   324,    26,   175,   146,   147,   183,   260,   189,
+     187,    13,     8,   147,   186,   298,   298,   146,    78,   144,
+     159,   140,   150,    71,   150,    13,   203,   148,   340,   146,
+       8,   147,    31,   304,    31,   304,    71,    73,    74,   337,
+     304,   279,   150,   157,   239,    13,   147,     8,   146,   306,
+      31,   308,   147,     8,   298,   144,   159,   120,   216,   217,
+     287,   149,   146,   124,   163,   236,   237,   238,   287,   281,
+     282,   304,    26,   288,   147,   283,   284,   304,   325,   310,
+      61,   149,   147,   291,   177,   173,   182,   180,   258,   304,
+     308,    31,   219,   308,   298,    71,    26,   173,   222,    26,
+     149,   224,   298,   301,   303,   159,    71,   102,   298,   308,
+     331,   330,    13,   306,   306,   122,   154,   154,   239,   150,
+     147,    79,   166,   147,   306,    31,   261,   308,   159,   217,
+     149,     8,   244,   236,   238,   147,     8,    31,    73,   239,
+     239,   270,   263,   239,   239,   150,   146,   314,   323,   304,
+     292,   170,   176,   304,    26,   173,   229,   148,   122,   218,
+     308,   218,    13,   170,   148,   225,   148,   225,   122,   147,
+       8,   302,   146,   329,   304,    31,   304,   150,   147,   148,
+     306,   244,   287,    99,   106,   107,   108,   109,   110,   111,
+     112,   150,   163,   245,   251,   252,   253,   254,   256,   147,
+      31,    73,   104,   275,   163,   238,    73,    13,   147,   147,
+     304,   296,   147,   147,   315,   311,   154,   150,   121,   293,
+     178,   230,   147,   170,   184,   219,   147,   147,   298,    89,
+     225,    92,    93,    94,   225,   150,   298,   298,   193,   147,
+     306,   150,    71,   251,   252,   246,   274,   254,     8,   148,
+     149,    73,   146,   149,   238,    31,    73,    13,   298,   239,
+     121,   312,   324,   232,    66,    67,   234,   148,    83,   258,
+     190,   188,   148,    92,   148,   304,    26,   148,   228,   150,
+     122,   287,    13,   247,   274,    73,   255,   206,    71,   170,
+      31,    73,   276,   170,    31,    73,    73,    13,   298,   147,
+     324,    66,    67,   235,   146,   173,   148,   147,    26,   173,
+     221,   221,   148,   228,   227,   298,   194,   298,   255,   206,
+      13,     8,   148,    71,    13,   150,    73,     8,   147,   150,
+      73,    13,   298,   313,   146,    26,    68,   304,   185,   170,
+     226,   170,    73,   148,    71,   298,    73,   248,   298,    31,
+      73,   298,   314,   304,   170,   148,   147,    26,   173,   220,
+      87,   170,   147,   249,    13,   146,    73,   147,   231,   170,
+     148,   195,   146,   298,   236,    26,   173,    85,   149,   236,
+     147,   233,   148,   170,   147,   148,   149,   250,   170,   150,
+     250,   170,   196,   150,   102,   197,   198,   199,   146,   199,
+     287,   200,    73,   147,   201,   149,   170,   150
 };
 
 #define yyerrok		(yyerrstatus = 0)
@@ -3358,2081 +3385,2166 @@ yyreduce:
   switch (yyn)
     {
         case 2:
-
+#line 156 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_compilation(TSRMLS_C); }
     break;
 
   case 3:
-
+#line 160 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_extended_info(TSRMLS_C); }
     break;
 
   case 4:
-
+#line 160 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { HANDLE_INTERACTIVE(); }
     break;
 
   case 6:
-
+#line 165 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
   case 7:
-
+#line 166 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_build_namespace_name(&(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
   case 8:
-
+#line 170 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_verify_namespace(TSRMLS_C); }
     break;
 
   case 9:
-
+#line 171 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_verify_namespace(TSRMLS_C); zend_do_early_binding(TSRMLS_C); }
     break;
 
   case 10:
-
+#line 172 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_verify_namespace(TSRMLS_C); zend_do_early_binding(TSRMLS_C); }
     break;
 
   case 11:
-
-    { zend_do_halt_compiler_register(TSRMLS_C); YYACCEPT; }
+#line 173 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_verify_namespace(TSRMLS_C); zend_do_early_binding(TSRMLS_C); }
     break;
 
   case 12:
-
-    { zend_do_begin_namespace(&(yyvsp[(2) - (3)]), 0 TSRMLS_CC); }
+#line 174 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_halt_compiler_register(TSRMLS_C); YYACCEPT; }
     break;
 
   case 13:
-
-    { zend_do_begin_namespace(&(yyvsp[(2) - (3)]), 1 TSRMLS_CC); }
+#line 175 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_begin_namespace(&(yyvsp[(2) - (3)]), 0 TSRMLS_CC); }
     break;
 
   case 14:
-
-    { zend_do_end_namespace(TSRMLS_C); }
+#line 176 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_begin_namespace(&(yyvsp[(2) - (3)]), 1 TSRMLS_CC); }
     break;
 
   case 15:
+#line 177 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_end_namespace(TSRMLS_C); }
+    break;
 
+  case 16:
+#line 178 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_namespace(NULL, 1 TSRMLS_CC); }
     break;
 
-  case 16:
-
+  case 17:
+#line 179 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_namespace(TSRMLS_C); }
     break;
 
-  case 17:
-
+  case 18:
+#line 180 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_verify_namespace(TSRMLS_C); }
     break;
 
-  case 18:
-
+  case 19:
+#line 181 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_verify_namespace(TSRMLS_C); }
     break;
 
-  case 21:
+  case 20:
+#line 185 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_begin_annotation_declaration(&(yyvsp[(2) - (2)]) TSRMLS_CC); }
+    break;
 
-    { zend_do_use(&(yyvsp[(1) - (1)]), NULL, 0 TSRMLS_CC); }
+  case 21:
+#line 186 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_begin_annotation_declaration(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
   case 22:
-
-    { zend_do_use(&(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), 0 TSRMLS_CC); }
+#line 190 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { (yyval) = (yyvsp[(2) - (2)]); }
     break;
 
   case 23:
-
-    { zend_do_use(&(yyvsp[(2) - (2)]), NULL, 1 TSRMLS_CC); }
+#line 191 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { (yyval) = (yyvsp[(2) - (5)]); }
     break;
 
   case 24:
+#line 195 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { (yyval) = (yyvsp[(1) - (1)]); }
+    break;
 
-    { zend_do_use(&(yyvsp[(2) - (4)]), &(yyvsp[(4) - (4)]), 1 TSRMLS_CC); }
+  case 26:
+#line 200 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_add_annotation_arg(&(yyvsp[(1) - (1)]), NULL TSRMLS_CC); }
     break;
 
-  case 25:
+  case 27:
+#line 201 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_add_annotation_arg(&(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
+    break;
 
-    { zend_do_declare_constant(&(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)]) TSRMLS_CC); }
+  case 30:
+#line 210 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_use(&(yyvsp[(1) - (1)]), NULL, 0 TSRMLS_CC); }
     break;
 
-  case 26:
+  case 31:
+#line 211 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_use(&(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), 0 TSRMLS_CC); }
+    break;
 
-    { zend_do_declare_constant(&(yyvsp[(2) - (4)]), &(yyvsp[(4) - (4)]) TSRMLS_CC); }
+  case 32:
+#line 212 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_use(&(yyvsp[(2) - (2)]), NULL, 1 TSRMLS_CC); }
     break;
 
-  case 27:
+  case 33:
+#line 213 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_use(&(yyvsp[(2) - (4)]), &(yyvsp[(4) - (4)]), 1 TSRMLS_CC); }
+    break;
 
-    { zend_do_extended_info(TSRMLS_C); }
+  case 34:
+#line 217 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_declare_constant(&(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)]) TSRMLS_CC); }
+    break;
+
+  case 35:
+#line 218 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_declare_constant(&(yyvsp[(2) - (4)]), &(yyvsp[(4) - (4)]) TSRMLS_CC); }
     break;
 
-  case 28:
+  case 36:
+#line 222 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_extended_info(TSRMLS_C); }
+    break;
 
+  case 37:
+#line 222 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { HANDLE_INTERACTIVE(); }
     break;
 
-  case 33:
-
+  case 42:
+#line 231 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_error(E_COMPILE_ERROR, "__HALT_COMPILER() can only be used from the outermost scope"); }
     break;
 
-  case 34:
-
+  case 43:
+#line 236 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_ticks(TSRMLS_C); }
     break;
 
-  case 35:
-
+  case 44:
+#line 237 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_label(&(yyvsp[(1) - (2)]) TSRMLS_CC); }
     break;
 
-  case 37:
-
+  case 46:
+#line 242 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_cond(&(yyvsp[(3) - (4)]), &(yyvsp[(4) - (4)]) TSRMLS_CC); }
     break;
 
-  case 38:
-
+  case 47:
+#line 242 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_after_statement(&(yyvsp[(4) - (6)]), 1 TSRMLS_CC); }
     break;
 
-  case 39:
-
+  case 48:
+#line 242 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_end(TSRMLS_C); }
     break;
 
-  case 40:
-
+  case 49:
+#line 243 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_cond(&(yyvsp[(3) - (5)]), &(yyvsp[(4) - (5)]) TSRMLS_CC); }
     break;
 
-  case 41:
-
+  case 50:
+#line 243 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_after_statement(&(yyvsp[(4) - (7)]), 1 TSRMLS_CC); }
     break;
 
-  case 42:
-
+  case 51:
+#line 243 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_end(TSRMLS_C); }
     break;
 
-  case 43:
-
+  case 52:
+#line 244 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyvsp[(1) - (2)]).u.opline_num = get_next_op_number(CG(active_op_array));  }
     break;
 
-  case 44:
-
+  case 53:
+#line 244 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_while_cond(&(yyvsp[(4) - (5)]), &(yyvsp[(5) - (5)]) TSRMLS_CC); }
     break;
 
-  case 45:
-
+  case 54:
+#line 244 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_while_end(&(yyvsp[(1) - (7)]), &(yyvsp[(5) - (7)]) TSRMLS_CC); }
     break;
 
-  case 46:
-
+  case 55:
+#line 245 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyvsp[(1) - (1)]).u.opline_num = get_next_op_number(CG(active_op_array));  zend_do_do_while_begin(TSRMLS_C); }
     break;
 
-  case 47:
-
+  case 56:
+#line 245 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyvsp[(5) - (5)]).u.opline_num = get_next_op_number(CG(active_op_array)); }
     break;
 
-  case 48:
-
+  case 57:
+#line 245 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_do_while_end(&(yyvsp[(1) - (9)]), &(yyvsp[(5) - (9)]), &(yyvsp[(7) - (9)]) TSRMLS_CC); }
     break;
 
-  case 49:
-
+  case 58:
+#line 249 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_free(&(yyvsp[(3) - (4)]) TSRMLS_CC); (yyvsp[(4) - (4)]).u.opline_num = get_next_op_number(CG(active_op_array)); }
     break;
 
-  case 50:
-
+  case 59:
+#line 251 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_extended_info(TSRMLS_C); zend_do_for_cond(&(yyvsp[(6) - (7)]), &(yyvsp[(7) - (7)]) TSRMLS_CC); }
     break;
 
-  case 51:
-
+  case 60:
+#line 253 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_free(&(yyvsp[(9) - (10)]) TSRMLS_CC); zend_do_for_before_statement(&(yyvsp[(4) - (10)]), &(yyvsp[(7) - (10)]) TSRMLS_CC); }
     break;
 
-  case 52:
-
+  case 61:
+#line 254 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_for_end(&(yyvsp[(7) - (12)]) TSRMLS_CC); }
     break;
 
-  case 53:
-
+  case 62:
+#line 255 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_switch_cond(&(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 54:
-
+  case 63:
+#line 255 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_switch_end(&(yyvsp[(6) - (6)]) TSRMLS_CC); }
     break;
 
-  case 55:
-
+  case 64:
+#line 256 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_brk_cont(ZEND_BRK, NULL TSRMLS_CC); }
     break;
 
-  case 56:
-
+  case 65:
+#line 257 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_brk_cont(ZEND_BRK, &(yyvsp[(2) - (3)]) TSRMLS_CC); }
     break;
 
-  case 57:
-
+  case 66:
+#line 258 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_brk_cont(ZEND_CONT, NULL TSRMLS_CC); }
     break;
 
-  case 58:
-
+  case 67:
+#line 259 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_brk_cont(ZEND_CONT, &(yyvsp[(2) - (3)]) TSRMLS_CC); }
     break;
 
-  case 59:
-
+  case 68:
+#line 260 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_return(NULL, 0 TSRMLS_CC); }
     break;
 
-  case 60:
-
+  case 69:
+#line 261 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_return(&(yyvsp[(2) - (3)]), 0 TSRMLS_CC); }
     break;
 
-  case 61:
-
+  case 70:
+#line 262 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_return(&(yyvsp[(2) - (3)]), 1 TSRMLS_CC); }
     break;
 
-  case 65:
-
+  case 74:
+#line 266 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_echo(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 66:
-
+  case 75:
+#line 267 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_free(&(yyvsp[(1) - (2)]) TSRMLS_CC); }
     break;
 
-  case 68:
-
+  case 77:
+#line 270 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_foreach_begin(&(yyvsp[(1) - (4)]), &(yyvsp[(2) - (4)]), &(yyvsp[(3) - (4)]), &(yyvsp[(4) - (4)]), 1 TSRMLS_CC); }
     break;
 
-  case 69:
-
+  case 78:
+#line 271 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_foreach_cont(&(yyvsp[(1) - (8)]), &(yyvsp[(2) - (8)]), &(yyvsp[(4) - (8)]), &(yyvsp[(6) - (8)]), &(yyvsp[(7) - (8)]) TSRMLS_CC); }
     break;
 
-  case 70:
-
+  case 79:
+#line 272 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_foreach_end(&(yyvsp[(1) - (10)]), &(yyvsp[(4) - (10)]) TSRMLS_CC); }
     break;
 
-  case 71:
-
+  case 80:
+#line 274 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_foreach_begin(&(yyvsp[(1) - (4)]), &(yyvsp[(2) - (4)]), &(yyvsp[(3) - (4)]), &(yyvsp[(4) - (4)]), 0 TSRMLS_CC); }
     break;
 
-  case 72:
-
+  case 81:
+#line 275 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(6) - (8)])); zend_do_foreach_cont(&(yyvsp[(1) - (8)]), &(yyvsp[(2) - (8)]), &(yyvsp[(4) - (8)]), &(yyvsp[(6) - (8)]), &(yyvsp[(7) - (8)]) TSRMLS_CC); }
     break;
 
-  case 73:
-
+  case 82:
+#line 276 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_foreach_end(&(yyvsp[(1) - (10)]), &(yyvsp[(4) - (10)]) TSRMLS_CC); }
     break;
 
-  case 74:
-
+  case 83:
+#line 277 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyvsp[(1) - (1)]).u.opline_num = get_next_op_number(CG(active_op_array)); zend_do_declare_begin(TSRMLS_C); }
     break;
 
-  case 75:
-
+  case 84:
+#line 277 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_end(&(yyvsp[(1) - (6)]) TSRMLS_CC); }
     break;
 
-  case 77:
-
+  case 86:
+#line 279 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_try(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 78:
-
+  case 87:
+#line 280 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_initialize_try_catch_element(&(yyvsp[(1) - (7)]) TSRMLS_CC); }
     break;
 
-  case 79:
-
+  case 88:
+#line 281 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_first_catch(&(yyvsp[(7) - (9)]) TSRMLS_CC); }
     break;
 
-  case 80:
-
+  case 89:
+#line 282 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_catch(&(yyvsp[(1) - (12)]), &(yyvsp[(9) - (12)]), &(yyvsp[(11) - (12)]), &(yyvsp[(7) - (12)]) TSRMLS_CC); }
     break;
 
-  case 81:
-
+  case 90:
+#line 283 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_catch(&(yyvsp[(1) - (16)]) TSRMLS_CC); }
     break;
 
-  case 82:
-
+  case 91:
+#line 284 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_mark_last_catch(&(yyvsp[(7) - (18)]), &(yyvsp[(18) - (18)]) TSRMLS_CC); }
     break;
 
-  case 83:
-
+  case 92:
+#line 285 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_throw(&(yyvsp[(2) - (3)]) TSRMLS_CC); }
     break;
 
-  case 84:
-
+  case 93:
+#line 286 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_goto(&(yyvsp[(2) - (3)]) TSRMLS_CC); }
     break;
 
-  case 85:
-
+  case 94:
+#line 291 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 86:
-
+  case 95:
+#line 292 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.opline_num = -1; }
     break;
 
-  case 87:
-
+  case 96:
+#line 296 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 88:
-
+  case 97:
+#line 297 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (2)]); }
     break;
 
-  case 89:
-
+  case 98:
+#line 302 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.opline_num = get_next_op_number(CG(active_op_array)); }
     break;
 
-  case 90:
-
+  case 99:
+#line 302 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_catch(&(yyvsp[(1) - (6)]), &(yyvsp[(3) - (6)]), &(yyvsp[(5) - (6)]), NULL TSRMLS_CC); }
     break;
 
-  case 91:
-
+  case 100:
+#line 302 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_catch(&(yyvsp[(1) - (10)]) TSRMLS_CC); }
     break;
 
-  case 94:
-
+  case 103:
+#line 312 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (1)]), BP_VAR_UNSET, 0 TSRMLS_CC); zend_do_unset(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 95:
-
+  case 104:
+#line 316 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_ticks(TSRMLS_C); }
     break;
 
-  case 96:
-
+  case 105:
+#line 320 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_ticks(TSRMLS_C); }
     break;
 
-  case 97:
-
+  case 106:
+#line 325 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = ZEND_RETURN_VAL; }
     break;
 
-  case 98:
-
+  case 107:
+#line 326 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = ZEND_RETURN_REF; }
     break;
 
-  case 99:
-
+  case 108:
+#line 331 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_function_declaration(&(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), 0, (yyvsp[(2) - (3)]).op_type, NULL TSRMLS_CC); }
     break;
 
-  case 100:
-
+  case 109:
+#line 332 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_declaration(&(yyvsp[(1) - (10)]) TSRMLS_CC); }
     break;
 
-  case 101:
-
+  case 110:
+#line 337 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_class_declaration(&(yyvsp[(1) - (3)]), &(yyvsp[(2) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 102:
-
+  case 111:
+#line 341 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_class_declaration(&(yyvsp[(1) - (8)]), &(yyvsp[(2) - (8)]) TSRMLS_CC); }
     break;
 
-  case 103:
-
+  case 112:
+#line 343 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_class_declaration(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]), NULL TSRMLS_CC); }
     break;
 
-  case 104:
-
+  case 113:
+#line 347 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_class_declaration(&(yyvsp[(1) - (7)]), &(yyvsp[(2) - (7)]) TSRMLS_CC); }
     break;
 
-  case 105:
-
+  case 114:
+#line 352 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.opline_num = CG(zend_lineno); (yyval).u.EA.type = 0; }
     break;
 
-  case 106:
-
+  case 115:
+#line 353 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.opline_num = CG(zend_lineno); (yyval).u.EA.type = ZEND_ACC_EXPLICIT_ABSTRACT_CLASS; }
     break;
 
-  case 107:
-
+  case 116:
+#line 354 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.opline_num = CG(zend_lineno); (yyval).u.EA.type = ZEND_ACC_FINAL_CLASS; }
     break;
 
-  case 108:
-
+  case 117:
+#line 358 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_UNUSED; }
     break;
 
-  case 109:
-
+  case 118:
+#line 359 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_class(&(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 110:
-
+  case 119:
+#line 363 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.opline_num = CG(zend_lineno); (yyval).u.EA.type = ZEND_ACC_INTERFACE; }
     break;
 
-  case 115:
-
+  case 124:
+#line 377 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_implements_interface(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 116:
-
+  case 125:
+#line 378 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_implements_interface(&(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 117:
-
+  case 126:
+#line 382 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_UNUSED; }
     break;
 
-  case 118:
-
+  case 127:
+#line 383 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (2)]); }
     break;
 
-  case 119:
-
+  case 128:
+#line 388 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (1)])); (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 120:
-
+  case 129:
+#line 389 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(2) - (2)])); (yyval) = (yyvsp[(2) - (2)]);  (yyval).u.EA.type |= ZEND_PARSED_REFERENCE_VARIABLE; }
     break;
 
-  case 127:
-
+  case 136:
+#line 411 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_stmt(&(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 128:
-
+  case 137:
+#line 412 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_stmt(&(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)]) TSRMLS_CC); }
     break;
 
-  case 129:
-
+  case 138:
+#line 417 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); }
     break;
 
-  case 130:
-
+  case 139:
+#line 418 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (4)]); }
     break;
 
-  case 131:
-
+  case 140:
+#line 419 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (4)]); }
     break;
 
-  case 132:
-
+  case 141:
+#line 420 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (5)]); }
     break;
 
-  case 133:
-
+  case 142:
+#line 425 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_UNUSED; }
     break;
 
-  case 134:
-
+  case 143:
+#line 426 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_extended_info(TSRMLS_C);  zend_do_case_before_statement(&(yyvsp[(1) - (4)]), &(yyvsp[(2) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 135:
-
+  case 144:
+#line 426 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_case_after_statement(&(yyval), &(yyvsp[(2) - (6)]) TSRMLS_CC); (yyval).op_type = IS_CONST; }
     break;
 
-  case 136:
-
+  case 145:
+#line 427 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_extended_info(TSRMLS_C);  zend_do_default_before_statement(&(yyvsp[(1) - (3)]), &(yyvsp[(2) - (3)]) TSRMLS_CC); }
     break;
 
-  case 137:
-
+  case 146:
+#line 427 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_case_after_statement(&(yyval), &(yyvsp[(2) - (5)]) TSRMLS_CC); (yyval).op_type = IS_CONST; }
     break;
 
-  case 143:
-
+  case 152:
+#line 446 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_cond(&(yyvsp[(4) - (5)]), &(yyvsp[(5) - (5)]) TSRMLS_CC); }
     break;
 
-  case 144:
-
+  case 153:
+#line 446 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_after_statement(&(yyvsp[(5) - (7)]), 0 TSRMLS_CC); }
     break;
 
-  case 146:
-
+  case 155:
+#line 452 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_cond(&(yyvsp[(4) - (6)]), &(yyvsp[(5) - (6)]) TSRMLS_CC); }
     break;
 
-  case 147:
-
+  case 156:
+#line 452 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_if_after_statement(&(yyvsp[(5) - (8)]), 0 TSRMLS_CC); }
     break;
 
-  case 154:
-
+  case 163:
+#line 475 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(2) - (2)]), 0 TSRMLS_CC); (yyval).op_type = IS_CONST; Z_LVAL((yyval).u.constant)=1; Z_TYPE((yyval).u.constant)=IS_LONG; INIT_PZVAL(&(yyval).u.constant); zend_do_receive_arg(ZEND_RECV, &tmp, &(yyval), NULL, &(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]), 0 TSRMLS_CC); }
     break;
 
-  case 155:
-
+  case 164:
+#line 476 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(3) - (3)]), 0 TSRMLS_CC); (yyval).op_type = IS_CONST; Z_LVAL((yyval).u.constant)=1; Z_TYPE((yyval).u.constant)=IS_LONG; INIT_PZVAL(&(yyval).u.constant); zend_do_receive_arg(ZEND_RECV, &tmp, &(yyval), NULL, &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), 1 TSRMLS_CC); }
     break;
 
-  case 156:
+  case 165:
+#line 477 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(3) - (3)]), 0 TSRMLS_CC); (yyval).op_type = IS_CONST; Z_LVAL((yyval).u.constant)=1; Z_TYPE((yyval).u.constant)=IS_LONG; INIT_PZVAL(&(yyval).u.constant); zend_do_receive_arg(ZEND_RECV, &tmp, &(yyval), NULL, &(yyvsp[(2) - (3)]), &(yyvsp[(3) - (3)]), 0 TSRMLS_CC); }
+    break;
 
-    { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(3) - (5)]), 0 TSRMLS_CC); (yyval).op_type = IS_CONST; Z_LVAL((yyval).u.constant)=1; Z_TYPE((yyval).u.constant)=IS_LONG; INIT_PZVAL(&(yyval).u.constant); zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &(yyval), &(yyvsp[(5) - (5)]), &(yyvsp[(1) - (5)]), &(yyvsp[(3) - (5)]), 1 TSRMLS_CC); }
+  case 166:
+#line 478 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(4) - (4)]), 0 TSRMLS_CC); (yyval).op_type = IS_CONST; Z_LVAL((yyval).u.constant)=1; Z_TYPE((yyval).u.constant)=IS_LONG; INIT_PZVAL(&(yyval).u.constant); zend_do_receive_arg(ZEND_RECV, &tmp, &(yyval), NULL, &(yyvsp[(2) - (4)]), &(yyvsp[(4) - (4)]), 1 TSRMLS_CC); }
     break;
 
-  case 157:
+  case 167:
+#line 479 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(3) - (5)]), 0 TSRMLS_CC); (yyval).op_type = IS_CONST; Z_LVAL((yyval).u.constant)=1; Z_TYPE((yyval).u.constant)=IS_LONG; INIT_PZVAL(&(yyval).u.constant); zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &(yyval), &(yyvsp[(5) - (5)]), &(yyvsp[(1) - (5)]), &(yyvsp[(3) - (5)]), 1 TSRMLS_CC); }
+    break;
 
+  case 168:
+#line 480 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(2) - (4)]), 0 TSRMLS_CC); (yyval).op_type = IS_CONST; Z_LVAL((yyval).u.constant)=1; Z_TYPE((yyval).u.constant)=IS_LONG; INIT_PZVAL(&(yyval).u.constant); zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &(yyval), &(yyvsp[(4) - (4)]), &(yyvsp[(1) - (4)]), &(yyvsp[(2) - (4)]), 0 TSRMLS_CC); }
     break;
 
-  case 158:
-
+  case 169:
+#line 481 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(4) - (4)]), 0 TSRMLS_CC); (yyval)=(yyvsp[(1) - (4)]); Z_LVAL((yyval).u.constant)++; zend_do_receive_arg(ZEND_RECV, &tmp, &(yyval), NULL, &(yyvsp[(3) - (4)]), &(yyvsp[(4) - (4)]), 0 TSRMLS_CC); }
     break;
 
-  case 159:
-
+  case 170:
+#line 482 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(5) - (5)]), 0 TSRMLS_CC); (yyval)=(yyvsp[(1) - (5)]); Z_LVAL((yyval).u.constant)++; zend_do_receive_arg(ZEND_RECV, &tmp, &(yyval), NULL, &(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)]), 1 TSRMLS_CC); }
     break;
 
-  case 160:
+  case 171:
+#line 483 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(5) - (5)]), 0 TSRMLS_CC); (yyval)=(yyvsp[(2) - (5)]); Z_LVAL((yyval).u.constant)++; zend_do_receive_arg(ZEND_RECV, &tmp, &(yyval), NULL, &(yyvsp[(4) - (5)]), &(yyvsp[(5) - (5)]), 0 TSRMLS_CC); }
+    break;
 
-    { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(5) - (7)]), 0 TSRMLS_CC); (yyval)=(yyvsp[(1) - (7)]); Z_LVAL((yyval).u.constant)++; zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &(yyval), &(yyvsp[(7) - (7)]), &(yyvsp[(3) - (7)]), &(yyvsp[(5) - (7)]), 1 TSRMLS_CC); }
+  case 172:
+#line 484 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(6) - (6)]), 0 TSRMLS_CC); (yyval)=(yyvsp[(2) - (6)]); Z_LVAL((yyval).u.constant)++; zend_do_receive_arg(ZEND_RECV, &tmp, &(yyval), NULL, &(yyvsp[(4) - (6)]), &(yyvsp[(6) - (6)]), 1 TSRMLS_CC); }
     break;
 
-  case 161:
+  case 173:
+#line 485 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(5) - (7)]), 0 TSRMLS_CC); (yyval)=(yyvsp[(1) - (7)]); Z_LVAL((yyval).u.constant)++; zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &(yyval), &(yyvsp[(7) - (7)]), &(yyvsp[(3) - (7)]), &(yyvsp[(5) - (7)]), 1 TSRMLS_CC); }
+    break;
 
+  case 174:
+#line 486 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp;  fetch_simple_variable(&tmp, &(yyvsp[(4) - (6)]), 0 TSRMLS_CC); (yyval)=(yyvsp[(1) - (6)]); Z_LVAL((yyval).u.constant)++; zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &(yyval), &(yyvsp[(6) - (6)]), &(yyvsp[(3) - (6)]), &(yyvsp[(4) - (6)]), 0 TSRMLS_CC); }
     break;
 
-  case 162:
-
+  case 175:
+#line 491 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_UNUSED; }
     break;
 
-  case 163:
-
+  case 176:
+#line 492 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 164:
-
+  case 177:
+#line 493 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; Z_TYPE((yyval).u.constant)=IS_NULL;}
     break;
 
-  case 165:
-
+  case 178:
+#line 498 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 166:
-
+  case 179:
+#line 499 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = 0; }
     break;
 
-  case 167:
-
+  case 180:
+#line 504 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = 1;  zend_do_pass_param(&(yyvsp[(1) - (1)]), ZEND_SEND_VAL, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
     break;
 
-  case 168:
-
+  case 181:
+#line 505 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = 1;  zend_do_pass_param(&(yyvsp[(1) - (1)]), ZEND_SEND_VAR, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
     break;
 
-  case 169:
-
+  case 182:
+#line 506 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = 1;  zend_do_pass_param(&(yyvsp[(2) - (2)]), ZEND_SEND_REF, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
     break;
 
-  case 170:
+  case 183:
+#line 507 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { Z_LVAL((yyval).u.constant) = 1;  zend_do_pass_param(&(yyvsp[(2) - (2)]), ZEND_SEND_VAR, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
+    break;
 
-    { Z_LVAL((yyval).u.constant)=Z_LVAL((yyvsp[(1) - (3)]).u.constant)+1;  zend_do_pass_param(&(yyvsp[(3) - (3)]), ZEND_SEND_VAL, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
+  case 184:
+#line 508 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { Z_LVAL((yyval).u.constant) = 1;  zend_do_pass_param(&(yyvsp[(3) - (3)]), ZEND_SEND_REF, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
     break;
 
-  case 171:
+  case 185:
+#line 509 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { Z_LVAL((yyval).u.constant)=Z_LVAL((yyvsp[(1) - (3)]).u.constant)+1;  zend_do_pass_param(&(yyvsp[(3) - (3)]), ZEND_SEND_VAL, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
+    break;
 
+  case 186:
+#line 510 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant)=Z_LVAL((yyvsp[(1) - (3)]).u.constant)+1;  zend_do_pass_param(&(yyvsp[(3) - (3)]), ZEND_SEND_VAR, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
     break;
 
-  case 172:
-
+  case 187:
+#line 511 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant)=Z_LVAL((yyvsp[(1) - (4)]).u.constant)+1;  zend_do_pass_param(&(yyvsp[(4) - (4)]), ZEND_SEND_REF, Z_LVAL((yyval).u.constant) TSRMLS_CC); }
     break;
 
-  case 173:
-
+  case 188:
+#line 515 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_global_variable(&(yyvsp[(3) - (3)]), NULL, ZEND_FETCH_GLOBAL_LOCK TSRMLS_CC); }
     break;
 
-  case 174:
-
+  case 189:
+#line 516 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_global_variable(&(yyvsp[(1) - (1)]), NULL, ZEND_FETCH_GLOBAL_LOCK TSRMLS_CC); }
     break;
 
-  case 175:
-
+  case 190:
+#line 521 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 176:
-
+  case 191:
+#line 522 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (2)]); }
     break;
 
-  case 177:
-
+  case 192:
+#line 523 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (4)]); }
     break;
 
-  case 178:
-
+  case 193:
+#line 528 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_static_variable(&(yyvsp[(3) - (3)]), NULL, ZEND_FETCH_STATIC TSRMLS_CC); }
     break;
 
-  case 179:
-
+  case 194:
+#line 529 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_static_variable(&(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)]), ZEND_FETCH_STATIC TSRMLS_CC); }
     break;
 
-  case 180:
-
+  case 195:
+#line 530 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_static_variable(&(yyvsp[(1) - (1)]), NULL, ZEND_FETCH_STATIC TSRMLS_CC); }
     break;
 
-  case 181:
-
+  case 196:
+#line 531 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_static_variable(&(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), ZEND_FETCH_STATIC TSRMLS_CC); }
     break;
 
-  case 184:
-
+  case 199:
+#line 543 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { CG(access_type) = Z_LVAL((yyvsp[(1) - (1)]).u.constant); }
     break;
 
-  case 187:
+  case 201:
+#line 544 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { CG(access_type) = Z_LVAL((yyvsp[(2) - (2)]).u.constant); }
+    break;
 
+  case 204:
+#line 546 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_function_declaration(&(yyvsp[(2) - (4)]), &(yyvsp[(4) - (4)]), 1, (yyvsp[(3) - (4)]).op_type, &(yyvsp[(1) - (4)]) TSRMLS_CC); }
     break;
 
-  case 188:
-
+  case 205:
+#line 547 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_abstract_method(&(yyvsp[(4) - (9)]), &(yyvsp[(1) - (9)]), &(yyvsp[(9) - (9)]) TSRMLS_CC); zend_do_end_function_declaration(&(yyvsp[(2) - (9)]) TSRMLS_CC); }
     break;
 
-  case 189:
+  case 206:
+#line 548 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_begin_function_declaration(&(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)]), 1, (yyvsp[(4) - (5)]).op_type, &(yyvsp[(2) - (5)]) TSRMLS_CC); }
+    break;
 
-    { Z_LVAL((yyval).u.constant) = ZEND_ACC_ABSTRACT; }
+  case 207:
+#line 549 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { zend_do_abstract_method(&(yyvsp[(5) - (10)]), &(yyvsp[(2) - (10)]), &(yyvsp[(10) - (10)]) TSRMLS_CC); zend_do_end_function_declaration(&(yyvsp[(3) - (10)]) TSRMLS_CC); }
     break;
 
-  case 190:
+  case 208:
+#line 554 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
+    { Z_LVAL((yyval).u.constant) = ZEND_ACC_ABSTRACT; }
+    break;
 
+  case 209:
+#line 555 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = 0;	}
     break;
 
-  case 191:
-
+  case 210:
+#line 559 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 192:
-
+  case 211:
+#line 560 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = ZEND_ACC_PUBLIC; }
     break;
 
-  case 193:
-
+  case 212:
+#line 564 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = ZEND_ACC_PUBLIC; }
     break;
 
-  case 194:
-
+  case 213:
+#line 565 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]);  if (!(Z_LVAL((yyval).u.constant) & ZEND_ACC_PPP_MASK)) { Z_LVAL((yyval).u.constant) |= ZEND_ACC_PUBLIC; } }
     break;
 
-  case 195:
-
+  case 214:
+#line 569 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 196:
-
+  case 215:
+#line 570 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = zend_do_verify_access_types(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)])); }
     break;
 
-  case 197:
-
+  case 216:
+#line 574 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = ZEND_ACC_PUBLIC; }
     break;
 
-  case 198:
-
+  case 217:
+#line 575 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = ZEND_ACC_PROTECTED; }
     break;
 
-  case 199:
-
+  case 218:
+#line 576 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = ZEND_ACC_PRIVATE; }
     break;
 
-  case 200:
-
+  case 219:
+#line 577 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = ZEND_ACC_STATIC; }
     break;
 
-  case 201:
-
+  case 220:
+#line 578 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = ZEND_ACC_ABSTRACT; }
     break;
 
-  case 202:
-
+  case 221:
+#line 579 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = ZEND_ACC_FINAL; }
     break;
 
-  case 203:
-
+  case 222:
+#line 583 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_property(&(yyvsp[(3) - (3)]), NULL, CG(access_type) TSRMLS_CC); }
     break;
 
-  case 204:
-
+  case 223:
+#line 584 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_property(&(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)]), CG(access_type) TSRMLS_CC); }
     break;
 
-  case 205:
-
+  case 224:
+#line 585 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_property(&(yyvsp[(1) - (1)]), NULL, CG(access_type) TSRMLS_CC); }
     break;
 
-  case 206:
-
+  case 225:
+#line 586 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_property(&(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), CG(access_type) TSRMLS_CC); }
     break;
 
-  case 207:
-
+  case 226:
+#line 590 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_class_constant(&(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)]) TSRMLS_CC); }
     break;
 
-  case 208:
-
+  case 227:
+#line 591 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_class_constant(&(yyvsp[(2) - (4)]), &(yyvsp[(4) - (4)]) TSRMLS_CC); }
     break;
 
-  case 209:
-
+  case 228:
+#line 595 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_echo(&(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 210:
-
+  case 229:
+#line 596 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_echo(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 211:
-
+  case 230:
+#line 601 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST;  Z_TYPE((yyval).u.constant) = IS_BOOL;  Z_LVAL((yyval).u.constant) = 1; }
     break;
 
-  case 212:
-
+  case 231:
+#line 602 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 213:
-
+  case 232:
+#line 606 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_free(&(yyvsp[(1) - (2)]) TSRMLS_CC); }
     break;
 
-  case 214:
-
+  case 233:
+#line 606 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(4) - (4)]); }
     break;
 
-  case 215:
-
+  case 234:
+#line 607 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 216:
-
+  case 235:
+#line 611 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_list_init(TSRMLS_C); }
     break;
 
-  case 217:
-
+  case 236:
+#line 611 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_list_end(&(yyval), &(yyvsp[(7) - (7)]) TSRMLS_CC); }
     break;
 
-  case 218:
-
+  case 237:
+#line 612 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_assign(&(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 219:
-
+  case 238:
+#line 613 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (4)])); zend_do_end_variable_parse(&(yyvsp[(4) - (4)]), BP_VAR_W, 1 TSRMLS_CC); zend_do_end_variable_parse(&(yyvsp[(1) - (4)]), BP_VAR_W, 0 TSRMLS_CC); zend_do_assign_ref(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(4) - (4)]) TSRMLS_CC); }
     break;
 
-  case 220:
-
+  case 239:
+#line 614 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_error(E_DEPRECATED, "Assigning the return value of new by reference is deprecated");  zend_check_writable_variable(&(yyvsp[(1) - (5)])); zend_do_extended_fcall_begin(TSRMLS_C); zend_do_begin_new_object(&(yyvsp[(4) - (5)]), &(yyvsp[(5) - (5)]) TSRMLS_CC); }
     break;
 
-  case 221:
-
+  case 240:
+#line 614 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_new_object(&(yyvsp[(3) - (7)]), &(yyvsp[(4) - (7)]), &(yyvsp[(7) - (7)]) TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C); zend_do_end_variable_parse(&(yyvsp[(1) - (7)]), BP_VAR_W, 0 TSRMLS_CC); (yyvsp[(3) - (7)]).u.EA.type = ZEND_PARSED_NEW; zend_do_assign_ref(&(yyval), &(yyvsp[(1) - (7)]), &(yyvsp[(3) - (7)]) TSRMLS_CC); }
     break;
 
-  case 222:
-
+  case 241:
+#line 615 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_extended_fcall_begin(TSRMLS_C); zend_do_begin_new_object(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 223:
-
+  case 242:
+#line 615 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_new_object(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(4) - (4)]) TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C);}
     break;
 
-  case 224:
-
+  case 243:
+#line 616 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_clone(&(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 225:
-
+  case 244:
+#line 617 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_ADD, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 226:
-
+  case 245:
+#line 618 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_SUB, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 227:
-
+  case 246:
+#line 619 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_MUL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 228:
-
+  case 247:
+#line 620 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_DIV, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 229:
-
+  case 248:
+#line 621 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_CONCAT, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 230:
-
+  case 249:
+#line 622 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_MOD, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 231:
-
+  case 250:
+#line 623 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_BW_AND, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 232:
-
+  case 251:
+#line 624 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_BW_OR, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 233:
-
+  case 252:
+#line 625 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_BW_XOR, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 234:
-
+  case 253:
+#line 626 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_SL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 235:
-
+  case 254:
+#line 627 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_check_writable_variable(&(yyvsp[(1) - (3)])); zend_do_end_variable_parse(&(yyvsp[(1) - (3)]), BP_VAR_RW, 0 TSRMLS_CC); zend_do_binary_assign_op(ZEND_ASSIGN_SR, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 236:
-
+  case 255:
+#line 628 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_post_incdec(&(yyval), &(yyvsp[(1) - (2)]), ZEND_POST_INC TSRMLS_CC); }
     break;
 
-  case 237:
-
+  case 256:
+#line 629 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_pre_incdec(&(yyval), &(yyvsp[(2) - (2)]), ZEND_PRE_INC TSRMLS_CC); }
     break;
 
-  case 238:
-
+  case 257:
+#line 630 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_post_incdec(&(yyval), &(yyvsp[(1) - (2)]), ZEND_POST_DEC TSRMLS_CC); }
     break;
 
-  case 239:
-
+  case 258:
+#line 631 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_pre_incdec(&(yyval), &(yyvsp[(2) - (2)]), ZEND_PRE_DEC TSRMLS_CC); }
     break;
 
-  case 240:
-
+  case 259:
+#line 632 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_or_begin(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 241:
-
+  case 260:
+#line 632 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_or_end(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(4) - (4)]), &(yyvsp[(2) - (4)]) TSRMLS_CC); }
     break;
 
-  case 242:
-
+  case 261:
+#line 633 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_and_begin(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 243:
-
+  case 262:
+#line 633 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_and_end(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(4) - (4)]), &(yyvsp[(2) - (4)]) TSRMLS_CC); }
     break;
 
-  case 244:
-
+  case 263:
+#line 634 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_or_begin(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 245:
-
+  case 264:
+#line 634 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_or_end(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(4) - (4)]), &(yyvsp[(2) - (4)]) TSRMLS_CC); }
     break;
 
-  case 246:
-
+  case 265:
+#line 635 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_and_begin(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 247:
-
+  case 266:
+#line 635 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_and_end(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(4) - (4)]), &(yyvsp[(2) - (4)]) TSRMLS_CC); }
     break;
 
-  case 248:
-
+  case 267:
+#line 636 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_BOOL_XOR, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 249:
-
+  case 268:
+#line 637 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_BW_OR, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 250:
-
+  case 269:
+#line 638 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_BW_AND, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 251:
-
+  case 270:
+#line 639 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_BW_XOR, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 252:
-
+  case 271:
+#line 640 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_CONCAT, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 253:
-
+  case 272:
+#line 641 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_ADD, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 254:
-
+  case 273:
+#line 642 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_SUB, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 255:
-
+  case 274:
+#line 643 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_MUL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 256:
-
+  case 275:
+#line 644 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_DIV, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 257:
-
+  case 276:
+#line 645 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_MOD, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 258:
-
+  case 277:
+#line 646 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_SL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 259:
-
+  case 278:
+#line 647 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_SR, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 260:
-
+  case 279:
+#line 648 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { ZVAL_LONG(&(yyvsp[(1) - (2)]).u.constant, 0); if ((yyvsp[(2) - (2)]).op_type == IS_CONST) { add_function(&(yyvsp[(2) - (2)]).u.constant, &(yyvsp[(1) - (2)]).u.constant, &(yyvsp[(2) - (2)]).u.constant TSRMLS_CC); (yyval) = (yyvsp[(2) - (2)]); } else { (yyvsp[(1) - (2)]).op_type = IS_CONST; INIT_PZVAL(&(yyvsp[(1) - (2)]).u.constant); zend_do_binary_op(ZEND_ADD, &(yyval), &(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); } }
     break;
 
-  case 261:
-
+  case 280:
+#line 649 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { ZVAL_LONG(&(yyvsp[(1) - (2)]).u.constant, 0); if ((yyvsp[(2) - (2)]).op_type == IS_CONST) { sub_function(&(yyvsp[(2) - (2)]).u.constant, &(yyvsp[(1) - (2)]).u.constant, &(yyvsp[(2) - (2)]).u.constant TSRMLS_CC); (yyval) = (yyvsp[(2) - (2)]); } else { (yyvsp[(1) - (2)]).op_type = IS_CONST; INIT_PZVAL(&(yyvsp[(1) - (2)]).u.constant); zend_do_binary_op(ZEND_SUB, &(yyval), &(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); } }
     break;
 
-  case 262:
-
+  case 281:
+#line 650 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_unary_op(ZEND_BOOL_NOT, &(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 263:
-
+  case 282:
+#line 651 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_unary_op(ZEND_BW_NOT, &(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 264:
-
+  case 283:
+#line 652 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_IS_IDENTICAL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 265:
-
+  case 284:
+#line 653 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_IS_NOT_IDENTICAL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 266:
-
+  case 285:
+#line 654 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_IS_EQUAL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 267:
-
+  case 286:
+#line 655 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_IS_NOT_EQUAL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 268:
-
+  case 287:
+#line 656 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_IS_SMALLER, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 269:
-
+  case 288:
+#line 657 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_IS_SMALLER_OR_EQUAL, &(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 270:
-
+  case 289:
+#line 658 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_IS_SMALLER, &(yyval), &(yyvsp[(3) - (3)]), &(yyvsp[(1) - (3)]) TSRMLS_CC); }
     break;
 
-  case 271:
-
+  case 290:
+#line 659 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_binary_op(ZEND_IS_SMALLER_OR_EQUAL, &(yyval), &(yyvsp[(3) - (3)]), &(yyvsp[(1) - (3)]) TSRMLS_CC); }
     break;
 
-  case 272:
-
+  case 291:
+#line 660 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_instanceof(&(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), 0 TSRMLS_CC); }
     break;
 
-  case 273:
-
+  case 292:
+#line 661 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); }
     break;
 
-  case 274:
-
+  case 293:
+#line 662 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_qm_op(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 275:
-
+  case 294:
+#line 663 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_qm_true(&(yyvsp[(4) - (5)]), &(yyvsp[(2) - (5)]), &(yyvsp[(5) - (5)]) TSRMLS_CC); }
     break;
 
-  case 276:
-
+  case 295:
+#line 664 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_qm_false(&(yyval), &(yyvsp[(7) - (7)]), &(yyvsp[(2) - (7)]), &(yyvsp[(5) - (7)]) TSRMLS_CC); }
     break;
 
-  case 277:
-
+  case 296:
+#line 665 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_jmp_set(&(yyvsp[(1) - (3)]), &(yyvsp[(2) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 278:
-
+  case 297:
+#line 666 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_jmp_set_else(&(yyval), &(yyvsp[(5) - (5)]), &(yyvsp[(2) - (5)]), &(yyvsp[(3) - (5)]) TSRMLS_CC); }
     break;
 
-  case 279:
-
+  case 298:
+#line 667 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 280:
-
+  case 299:
+#line 668 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_cast(&(yyval), &(yyvsp[(2) - (2)]), IS_LONG TSRMLS_CC); }
     break;
 
-  case 281:
-
+  case 300:
+#line 669 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_cast(&(yyval), &(yyvsp[(2) - (2)]), IS_DOUBLE TSRMLS_CC); }
     break;
 
-  case 282:
-
+  case 301:
+#line 670 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_cast(&(yyval), &(yyvsp[(2) - (2)]), IS_STRING TSRMLS_CC); }
     break;
 
-  case 283:
-
+  case 302:
+#line 671 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_cast(&(yyval), &(yyvsp[(2) - (2)]), IS_ARRAY TSRMLS_CC); }
     break;
 
-  case 284:
-
+  case 303:
+#line 672 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_cast(&(yyval), &(yyvsp[(2) - (2)]), IS_OBJECT TSRMLS_CC); }
     break;
 
-  case 285:
-
+  case 304:
+#line 673 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_cast(&(yyval), &(yyvsp[(2) - (2)]), IS_BOOL TSRMLS_CC); }
     break;
 
-  case 286:
-
+  case 305:
+#line 674 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_cast(&(yyval), &(yyvsp[(2) - (2)]), IS_NULL TSRMLS_CC); }
     break;
 
-  case 287:
-
+  case 306:
+#line 675 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_exit(&(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 288:
-
+  case 307:
+#line 676 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_silence(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 289:
-
+  case 308:
+#line 676 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_silence(&(yyvsp[(1) - (3)]) TSRMLS_CC); (yyval) = (yyvsp[(3) - (3)]); }
     break;
 
-  case 290:
-
+  case 309:
+#line 677 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 291:
-
+  case 310:
+#line 678 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (4)]); }
     break;
 
-  case 292:
-
+  case 311:
+#line 679 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_shell_exec(&(yyval), &(yyvsp[(2) - (3)]) TSRMLS_CC); }
     break;
 
-  case 293:
-
+  case 312:
+#line 680 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_print(&(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 294:
-
+  case 313:
+#line 681 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_lambda_function_declaration(&(yyval), &(yyvsp[(1) - (3)]), (yyvsp[(2) - (3)]).op_type TSRMLS_CC); }
     break;
 
-  case 295:
-
+  case 314:
+#line 682 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     {  zend_do_end_function_declaration(&(yyvsp[(1) - (10)]) TSRMLS_CC); (yyval) = (yyvsp[(4) - (10)]); }
     break;
 
-  case 296:
-
+  case 315:
+#line 686 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.opline_num = CG(zend_lineno); }
     break;
 
-  case 299:
-
+  case 318:
+#line 695 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_lexical_variable(&(yyvsp[(3) - (3)]), 0 TSRMLS_CC); }
     break;
 
-  case 300:
-
+  case 319:
+#line 696 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_lexical_variable(&(yyvsp[(4) - (4)]), 1 TSRMLS_CC); }
     break;
 
-  case 301:
-
+  case 320:
+#line 697 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_lexical_variable(&(yyvsp[(1) - (1)]), 0 TSRMLS_CC); }
     break;
 
-  case 302:
-
+  case 321:
+#line 698 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_lexical_variable(&(yyvsp[(2) - (2)]), 1 TSRMLS_CC); }
     break;
 
-  case 303:
-
+  case 322:
+#line 702 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyvsp[(2) - (2)]).u.opline_num = zend_do_begin_function_call(&(yyvsp[(1) - (2)]), 1 TSRMLS_CC); }
     break;
 
-  case 304:
-
+  case 323:
+#line 704 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call(&(yyvsp[(1) - (5)]), &(yyval), &(yyvsp[(4) - (5)]), 0, (yyvsp[(2) - (5)]).u.opline_num TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C); }
     break;
 
-  case 305:
-
+  case 324:
+#line 705 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyvsp[(1) - (4)]).op_type = IS_CONST; ZVAL_EMPTY_STRING(&(yyvsp[(1) - (4)]).u.constant);  zend_do_build_namespace_name(&(yyvsp[(1) - (4)]), &(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); (yyvsp[(4) - (4)]).u.opline_num = zend_do_begin_function_call(&(yyvsp[(1) - (4)]), 0 TSRMLS_CC); }
     break;
 
-  case 306:
-
+  case 325:
+#line 707 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call(&(yyvsp[(1) - (7)]), &(yyval), &(yyvsp[(6) - (7)]), 0, (yyvsp[(4) - (7)]).u.opline_num TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C); }
     break;
 
-  case 307:
-
+  case 326:
+#line 708 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyvsp[(3) - (3)]).u.opline_num = zend_do_begin_function_call(&(yyvsp[(2) - (3)]), 0 TSRMLS_CC); }
     break;
 
-  case 308:
-
+  case 327:
+#line 710 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call(&(yyvsp[(2) - (6)]), &(yyval), &(yyvsp[(5) - (6)]), 0, (yyvsp[(3) - (6)]).u.opline_num TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C); }
     break;
 
-  case 309:
-
+  case 328:
+#line 711 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyvsp[(4) - (4)]).u.opline_num = zend_do_begin_class_member_function_call(&(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 310:
-
+  case 329:
+#line 713 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call((yyvsp[(4) - (7)]).u.opline_num?NULL:&(yyvsp[(3) - (7)]), &(yyval), &(yyvsp[(6) - (7)]), (yyvsp[(4) - (7)]).u.opline_num, (yyvsp[(4) - (7)]).u.opline_num TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C);}
     break;
 
-  case 311:
-
+  case 330:
+#line 714 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(3) - (4)]), BP_VAR_R, 0 TSRMLS_CC); zend_do_begin_class_member_function_call(&(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 312:
-
+  case 331:
+#line 716 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call(NULL, &(yyval), &(yyvsp[(6) - (7)]), 1, 1 TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C);}
     break;
 
-  case 313:
-
+  case 332:
+#line 717 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_class_member_function_call(&(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 314:
-
+  case 333:
+#line 719 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call(NULL, &(yyval), &(yyvsp[(6) - (7)]), 1, 1 TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C);}
     break;
 
-  case 315:
-
+  case 334:
+#line 720 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(3) - (4)]), BP_VAR_R, 0 TSRMLS_CC); zend_do_begin_class_member_function_call(&(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 316:
-
+  case 335:
+#line 722 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call(NULL, &(yyval), &(yyvsp[(6) - (7)]), 1, 1 TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C);}
     break;
 
-  case 317:
-
+  case 336:
+#line 723 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (2)]), BP_VAR_R, 0 TSRMLS_CC); zend_do_begin_dynamic_function_call(&(yyvsp[(1) - (2)]), 0 TSRMLS_CC); }
     break;
 
-  case 318:
-
+  case 337:
+#line 725 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call(&(yyvsp[(1) - (5)]), &(yyval), &(yyvsp[(4) - (5)]), 0, 1 TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C);}
     break;
 
-  case 319:
-
+  case 338:
+#line 729 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; ZVAL_STRINGL(&(yyval).u.constant, "static", sizeof("static")-1, 1);}
     break;
 
-  case 320:
-
+  case 339:
+#line 730 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 321:
-
+  case 340:
+#line 731 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; ZVAL_EMPTY_STRING(&(yyval).u.constant);  zend_do_build_namespace_name(&(yyval), &(yyval), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 322:
-
+  case 341:
+#line 732 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { char *tmp = estrndup(Z_STRVAL((yyvsp[(2) - (2)]).u.constant), Z_STRLEN((yyvsp[(2) - (2)]).u.constant)+1); memcpy(&(tmp[1]), Z_STRVAL((yyvsp[(2) - (2)]).u.constant), Z_STRLEN((yyvsp[(2) - (2)]).u.constant)+1); tmp[0] = '\\'; efree(Z_STRVAL((yyvsp[(2) - (2)]).u.constant)); Z_STRVAL((yyvsp[(2) - (2)]).u.constant) = tmp; ++Z_STRLEN((yyvsp[(2) - (2)]).u.constant); (yyval) = (yyvsp[(2) - (2)]); }
     break;
 
-  case 323:
-
+  case 342:
+#line 736 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 324:
-
+  case 343:
+#line 737 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; ZVAL_EMPTY_STRING(&(yyval).u.constant);  zend_do_build_namespace_name(&(yyval), &(yyval), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 325:
-
+  case 344:
+#line 738 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { char *tmp = estrndup(Z_STRVAL((yyvsp[(2) - (2)]).u.constant), Z_STRLEN((yyvsp[(2) - (2)]).u.constant)+1); memcpy(&(tmp[1]), Z_STRVAL((yyvsp[(2) - (2)]).u.constant), Z_STRLEN((yyvsp[(2) - (2)]).u.constant)+1); tmp[0] = '\\'; efree(Z_STRVAL((yyvsp[(2) - (2)]).u.constant)); Z_STRVAL((yyvsp[(2) - (2)]).u.constant) = tmp; ++Z_STRLEN((yyvsp[(2) - (2)]).u.constant); (yyval) = (yyvsp[(2) - (2)]); }
     break;
 
-  case 326:
-
+  case 345:
+#line 744 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_class(&(yyval), &(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 327:
-
+  case 346:
+#line 745 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (1)]), BP_VAR_R, 0 TSRMLS_CC); zend_do_fetch_class(&(yyval), &(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 328:
-
+  case 347:
+#line 750 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_push_object(&(yyvsp[(1) - (2)]) TSRMLS_CC); }
     break;
 
-  case 329:
-
+  case 348:
+#line 751 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_push_object(&(yyvsp[(4) - (4)]) TSRMLS_CC); zend_do_declare_implicit_property(TSRMLS_C); }
     break;
 
-  case 330:
-
+  case 349:
+#line 752 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_pop_object(&(yyval) TSRMLS_CC); (yyval).u.EA.type = ZEND_PARSED_MEMBER; }
     break;
 
-  case 331:
-
+  case 350:
+#line 753 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 334:
-
+  case 353:
+#line 764 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_push_object(&(yyvsp[(2) - (2)]) TSRMLS_CC); zend_do_declare_implicit_property(TSRMLS_C); }
     break;
 
-  case 335:
-
+  case 354:
+#line 768 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { memset(&(yyval), 0, sizeof(znode)); (yyval).op_type = IS_UNUSED; }
     break;
 
-  case 336:
-
+  case 355:
+#line 769 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { memset(&(yyval), 0, sizeof(znode)); (yyval).op_type = IS_UNUSED; }
     break;
 
-  case 337:
-
+  case 356:
+#line 770 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); }
     break;
 
-  case 338:
-
+  case 357:
+#line 774 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { ZVAL_EMPTY_STRING(&(yyval).u.constant); INIT_PZVAL(&(yyval).u.constant); (yyval).op_type = IS_CONST; }
     break;
 
-  case 339:
-
+  case 358:
+#line 775 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 340:
-
+  case 359:
+#line 776 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 341:
-
+  case 360:
+#line 781 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant)=0; }
     break;
 
-  case 342:
-
+  case 361:
+#line 782 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); }
     break;
 
-  case 343:
-
+  case 362:
+#line 787 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 344:
-
+  case 363:
+#line 788 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 345:
-
+  case 364:
+#line 789 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 346:
-
+  case 365:
+#line 790 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 347:
-
+  case 366:
+#line 791 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 348:
-
+  case 367:
+#line 792 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 349:
-
+  case 368:
+#line 793 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 350:
-
+  case 369:
+#line 794 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 351:
-
+  case 370:
+#line 795 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 352:
-
+  case 371:
+#line 796 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 353:
-
+  case 372:
+#line 797 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); CG(heredoc) = Z_STRVAL((yyvsp[(1) - (3)]).u.constant); CG(heredoc_len) = Z_STRLEN((yyvsp[(1) - (3)]).u.constant); }
     break;
 
-  case 354:
-
+  case 373:
+#line 798 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { ZVAL_EMPTY_STRING(&(yyval).u.constant); INIT_PZVAL(&(yyval).u.constant); (yyval).op_type = IS_CONST; CG(heredoc) = Z_STRVAL((yyvsp[(1) - (2)]).u.constant); CG(heredoc_len) = Z_STRLEN((yyvsp[(1) - (2)]).u.constant); }
     break;
 
-  case 355:
-
+  case 374:
+#line 803 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 356:
-
+  case 375:
+#line 804 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_constant(&(yyval), NULL, &(yyvsp[(1) - (1)]), ZEND_CT, 1 TSRMLS_CC); }
     break;
 
-  case 357:
-
+  case 376:
+#line 805 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; ZVAL_EMPTY_STRING(&(yyval).u.constant);  zend_do_build_namespace_name(&(yyval), &(yyval), &(yyvsp[(3) - (3)]) TSRMLS_CC); (yyvsp[(3) - (3)]) = (yyval); zend_do_fetch_constant(&(yyval), NULL, &(yyvsp[(3) - (3)]), ZEND_CT, 0 TSRMLS_CC); }
     break;
 
-  case 358:
-
+  case 377:
+#line 806 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { char *tmp = estrndup(Z_STRVAL((yyvsp[(2) - (2)]).u.constant), Z_STRLEN((yyvsp[(2) - (2)]).u.constant)+1); memcpy(&(tmp[1]), Z_STRVAL((yyvsp[(2) - (2)]).u.constant), Z_STRLEN((yyvsp[(2) - (2)]).u.constant)+1); tmp[0] = '\\'; efree(Z_STRVAL((yyvsp[(2) - (2)]).u.constant)); Z_STRVAL((yyvsp[(2) - (2)]).u.constant) = tmp; ++Z_STRLEN((yyvsp[(2) - (2)]).u.constant); zend_do_fetch_constant(&(yyval), NULL, &(yyvsp[(2) - (2)]), ZEND_CT, 0 TSRMLS_CC); }
     break;
 
-  case 359:
-
+  case 378:
+#line 807 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { ZVAL_LONG(&(yyvsp[(1) - (2)]).u.constant, 0); add_function(&(yyvsp[(2) - (2)]).u.constant, &(yyvsp[(1) - (2)]).u.constant, &(yyvsp[(2) - (2)]).u.constant TSRMLS_CC); (yyval) = (yyvsp[(2) - (2)]); }
     break;
 
-  case 360:
-
+  case 379:
+#line 808 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { ZVAL_LONG(&(yyvsp[(1) - (2)]).u.constant, 0); sub_function(&(yyvsp[(2) - (2)]).u.constant, &(yyvsp[(1) - (2)]).u.constant, &(yyvsp[(2) - (2)]).u.constant TSRMLS_CC); (yyval) = (yyvsp[(2) - (2)]); }
     break;
 
-  case 361:
-
+  case 380:
+#line 809 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (4)]); Z_TYPE((yyval).u.constant) = IS_CONSTANT_ARRAY; }
     break;
 
-  case 362:
-
+  case 381:
+#line 810 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 363:
-
+  case 382:
+#line 814 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_constant(&(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), ZEND_CT, 0 TSRMLS_CC); }
     break;
 
-  case 364:
-
+  case 383:
+#line 818 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 365:
-
+  case 384:
+#line 819 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 366:
-
+  case 385:
+#line 820 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_constant(&(yyval), NULL, &(yyvsp[(1) - (1)]), ZEND_RT, 1 TSRMLS_CC); }
     break;
 
-  case 367:
-
+  case 386:
+#line 821 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; ZVAL_EMPTY_STRING(&(yyval).u.constant);  zend_do_build_namespace_name(&(yyval), &(yyval), &(yyvsp[(3) - (3)]) TSRMLS_CC); (yyvsp[(3) - (3)]) = (yyval); zend_do_fetch_constant(&(yyval), NULL, &(yyvsp[(3) - (3)]), ZEND_RT, 0 TSRMLS_CC); }
     break;
 
-  case 368:
-
+  case 387:
+#line 822 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { char *tmp = estrndup(Z_STRVAL((yyvsp[(2) - (2)]).u.constant), Z_STRLEN((yyvsp[(2) - (2)]).u.constant)+1); memcpy(&(tmp[1]), Z_STRVAL((yyvsp[(2) - (2)]).u.constant), Z_STRLEN((yyvsp[(2) - (2)]).u.constant)+1); tmp[0] = '\\'; efree(Z_STRVAL((yyvsp[(2) - (2)]).u.constant)); Z_STRVAL((yyvsp[(2) - (2)]).u.constant) = tmp; ++Z_STRLEN((yyvsp[(2) - (2)]).u.constant); zend_do_fetch_constant(&(yyval), NULL, &(yyvsp[(2) - (2)]), ZEND_RT, 0 TSRMLS_CC); }
     break;
 
-  case 369:
-
+  case 388:
+#line 823 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 370:
-
+  case 389:
+#line 824 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); }
     break;
 
-  case 371:
-
+  case 390:
+#line 825 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); CG(heredoc) = Z_STRVAL((yyvsp[(1) - (3)]).u.constant); CG(heredoc_len) = Z_STRLEN((yyvsp[(1) - (3)]).u.constant); }
     break;
 
-  case 372:
-
+  case 391:
+#line 830 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; INIT_PZVAL(&(yyval).u.constant); array_init(&(yyval).u.constant); }
     break;
 
-  case 373:
-
+  case 392:
+#line 831 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (2)]); }
     break;
 
-  case 376:
-
+  case 395:
+#line 840 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_static_array_element(&(yyval), &(yyvsp[(3) - (5)]), &(yyvsp[(5) - (5)])); }
     break;
 
-  case 377:
-
+  case 396:
+#line 841 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_static_array_element(&(yyval), NULL, &(yyvsp[(3) - (3)])); }
     break;
 
-  case 378:
-
+  case 397:
+#line 842 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; INIT_PZVAL(&(yyval).u.constant); array_init(&(yyval).u.constant); zend_do_add_static_array_element(&(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)])); }
     break;
 
-  case 379:
-
+  case 398:
+#line 843 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_CONST; INIT_PZVAL(&(yyval).u.constant); array_init(&(yyval).u.constant); zend_do_add_static_array_element(&(yyval), NULL, &(yyvsp[(1) - (1)])); }
     break;
 
-  case 380:
-
+  case 399:
+#line 847 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 381:
-
+  case 400:
+#line 848 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 382:
-
+  case 401:
+#line 853 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (1)]), BP_VAR_R, 0 TSRMLS_CC); (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 383:
-
+  case 402:
+#line 858 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (1)]), BP_VAR_W, 0 TSRMLS_CC); (yyval) = (yyvsp[(1) - (1)]);
 				  zend_check_writable_variable(&(yyvsp[(1) - (1)])); }
     break;
 
-  case 384:
-
+  case 403:
+#line 863 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (1)]), BP_VAR_RW, 0 TSRMLS_CC); (yyval) = (yyvsp[(1) - (1)]);
 				  zend_check_writable_variable(&(yyvsp[(1) - (1)])); }
     break;
 
-  case 385:
-
+  case 404:
+#line 868 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_push_object(&(yyvsp[(1) - (2)]) TSRMLS_CC); }
     break;
 
-  case 386:
-
+  case 405:
+#line 869 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_push_object(&(yyvsp[(4) - (4)]) TSRMLS_CC); }
     break;
 
-  case 387:
-
+  case 406:
+#line 870 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_pop_object(&(yyval) TSRMLS_CC); (yyval).u.EA.type = (yyvsp[(1) - (7)]).u.EA.type | ((yyvsp[(7) - (7)]).u.EA.type ? (yyvsp[(7) - (7)]).u.EA.type : (yyvsp[(6) - (7)]).u.EA.type); }
     break;
 
-  case 388:
-
+  case 407:
+#line 871 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 389:
-
+  case 408:
+#line 875 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.EA.type = (yyvsp[(2) - (2)]).u.EA.type; }
     break;
 
-  case 390:
-
+  case 409:
+#line 876 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.EA.type = 0; }
     break;
 
-  case 391:
-
+  case 410:
+#line 881 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_push_object(&(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 392:
-
+  case 411:
+#line 881 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).u.EA.type = (yyvsp[(4) - (4)]).u.EA.type; }
     break;
 
-  case 393:
-
+  case 412:
+#line 885 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_pop_object(&(yyvsp[(1) - (1)]) TSRMLS_CC); zend_do_begin_method_call(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 394:
-
+  case 413:
+#line 887 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_function_call(&(yyvsp[(1) - (4)]), &(yyval), &(yyvsp[(3) - (4)]), 1, 1 TSRMLS_CC); zend_do_extended_fcall_end(TSRMLS_C);
 			  zend_do_push_object(&(yyval) TSRMLS_CC); (yyval).u.EA.type = ZEND_PARSED_METHOD_CALL; }
     break;
 
-  case 395:
-
+  case 414:
+#line 889 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_declare_implicit_property(TSRMLS_C); (yyval).u.EA.type = ZEND_PARSED_MEMBER; }
     break;
 
-  case 396:
-
+  case 415:
+#line 893 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 397:
-
+  case 416:
+#line 894 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_indirect_references(&(yyval), &(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 398:
-
+  case 417:
+#line 898 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (3)]); zend_do_fetch_static_member(&(yyval), &(yyvsp[(1) - (3)]) TSRMLS_CC); }
     break;
 
-  case 399:
-
+  case 418:
+#line 899 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (3)]); zend_do_fetch_static_member(&(yyval), &(yyvsp[(1) - (3)]) TSRMLS_CC); }
     break;
 
-  case 400:
-
+  case 419:
+#line 904 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (1)]), BP_VAR_R, 0 TSRMLS_CC); (yyval)=(yyvsp[(1) - (1)]);; }
     break;
 
-  case 401:
-
+  case 420:
+#line 908 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 402:
-
+  case 421:
+#line 909 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_variable_parse(TSRMLS_C); (yyval) = (yyvsp[(1) - (1)]); (yyval).u.EA.type = ZEND_PARSED_FUNCTION_CALL; }
     break;
 
-  case 403:
-
+  case 422:
+#line 914 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); (yyval).u.EA.type = ZEND_PARSED_VARIABLE; }
     break;
 
-  case 404:
-
+  case 423:
+#line 915 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_indirect_references(&(yyval), &(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); (yyval).u.EA.type = ZEND_PARSED_VARIABLE; }
     break;
 
-  case 405:
-
+  case 424:
+#line 916 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); (yyval).u.EA.type = ZEND_PARSED_STATIC_MEMBER; }
     break;
 
-  case 406:
-
+  case 425:
+#line 920 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { fetch_array_dim(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 407:
-
+  case 426:
+#line 921 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { fetch_string_offset(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 408:
-
+  case 427:
+#line 922 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_variable_parse(TSRMLS_C); fetch_simple_variable(&(yyval), &(yyvsp[(1) - (1)]), 1 TSRMLS_CC); }
     break;
 
-  case 409:
-
+  case 428:
+#line 927 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 410:
-
+  case 429:
+#line 928 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (4)]); }
     break;
 
-  case 411:
-
+  case 430:
+#line 932 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval).op_type = IS_UNUSED; }
     break;
 
-  case 412:
-
+  case 431:
+#line 933 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 413:
-
+  case 432:
+#line 938 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 414:
-
+  case 433:
+#line 939 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (1)]), BP_VAR_R, 0 TSRMLS_CC); }
     break;
 
-  case 415:
-
+  case 434:
+#line 939 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp_znode;  zend_do_pop_object(&tmp_znode TSRMLS_CC);  zend_do_fetch_property(&(yyval), &tmp_znode, &(yyvsp[(1) - (2)]) TSRMLS_CC);}
     break;
 
-  case 416:
-
+  case 435:
+#line 943 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { fetch_array_dim(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 417:
-
+  case 436:
+#line 944 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { fetch_string_offset(&(yyval), &(yyvsp[(1) - (4)]), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 418:
-
+  case 437:
+#line 945 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp_znode;  zend_do_pop_object(&tmp_znode TSRMLS_CC);  zend_do_fetch_property(&(yyval), &tmp_znode, &(yyvsp[(1) - (1)]) TSRMLS_CC);}
     break;
 
-  case 419:
-
+  case 438:
+#line 949 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 420:
-
+  case 439:
+#line 950 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); }
     break;
 
-  case 421:
-
+  case 440:
+#line 954 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant) = 1; }
     break;
 
-  case 422:
-
+  case 441:
+#line 955 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { Z_LVAL((yyval).u.constant)++; }
     break;
 
-  case 425:
-
+  case 444:
+#line 965 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_list_element(&(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 426:
-
+  case 445:
+#line 966 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_new_list_begin(TSRMLS_C); }
     break;
 
-  case 427:
-
+  case 446:
+#line 966 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_new_list_end(TSRMLS_C); }
     break;
 
-  case 428:
-
+  case 447:
+#line 967 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_list_element(NULL TSRMLS_CC); }
     break;
 
-  case 429:
-
+  case 448:
+#line 972 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_init_array(&(yyval), NULL, NULL, 0 TSRMLS_CC); }
     break;
 
-  case 430:
-
+  case 449:
+#line 973 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (2)]); }
     break;
 
-  case 431:
-
+  case 450:
+#line 977 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_array_element(&(yyval), &(yyvsp[(5) - (5)]), &(yyvsp[(3) - (5)]), 0 TSRMLS_CC); }
     break;
 
-  case 432:
-
+  case 451:
+#line 978 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_array_element(&(yyval), &(yyvsp[(3) - (3)]), NULL, 0 TSRMLS_CC); }
     break;
 
-  case 433:
-
+  case 452:
+#line 979 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_init_array(&(yyval), &(yyvsp[(3) - (3)]), &(yyvsp[(1) - (3)]), 0 TSRMLS_CC); }
     break;
 
-  case 434:
-
+  case 453:
+#line 980 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_init_array(&(yyval), &(yyvsp[(1) - (1)]), NULL, 0 TSRMLS_CC); }
     break;
 
-  case 435:
-
+  case 454:
+#line 981 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_array_element(&(yyval), &(yyvsp[(6) - (6)]), &(yyvsp[(3) - (6)]), 1 TSRMLS_CC); }
     break;
 
-  case 436:
-
+  case 455:
+#line 982 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_array_element(&(yyval), &(yyvsp[(4) - (4)]), NULL, 1 TSRMLS_CC); }
     break;
 
-  case 437:
-
+  case 456:
+#line 983 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_init_array(&(yyval), &(yyvsp[(4) - (4)]), &(yyvsp[(1) - (4)]), 1 TSRMLS_CC); }
     break;
 
-  case 438:
-
+  case 457:
+#line 984 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_init_array(&(yyval), &(yyvsp[(2) - (2)]), NULL, 1 TSRMLS_CC); }
     break;
 
-  case 439:
-
+  case 458:
+#line 988 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(2) - (2)]), BP_VAR_R, 0 TSRMLS_CC);  zend_do_add_variable(&(yyval), &(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 440:
-
+  case 459:
+#line 989 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_string(&(yyval), &(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 441:
-
+  case 460:
+#line 990 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_end_variable_parse(&(yyvsp[(1) - (1)]), BP_VAR_R, 0 TSRMLS_CC); zend_do_add_variable(&(yyval), NULL, &(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 442:
-
+  case 461:
+#line 991 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_add_string(&(yyval), NULL, &(yyvsp[(1) - (2)]) TSRMLS_CC); zend_do_end_variable_parse(&(yyvsp[(2) - (2)]), BP_VAR_R, 0 TSRMLS_CC); zend_do_add_variable(&(yyval), &(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 443:
-
+  case 462:
+#line 997 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_variable_parse(TSRMLS_C); fetch_simple_variable(&(yyval), &(yyvsp[(1) - (1)]), 1 TSRMLS_CC); }
     break;
 
-  case 444:
-
+  case 463:
+#line 998 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_variable_parse(TSRMLS_C); }
     break;
 
-  case 445:
-
+  case 464:
+#line 998 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { fetch_array_begin(&(yyval), &(yyvsp[(1) - (5)]), &(yyvsp[(4) - (5)]) TSRMLS_CC); }
     break;
 
-  case 446:
-
+  case 465:
+#line 999 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_variable_parse(TSRMLS_C); fetch_simple_variable(&(yyvsp[(2) - (3)]), &(yyvsp[(1) - (3)]), 1 TSRMLS_CC); zend_do_fetch_property(&(yyval), &(yyvsp[(2) - (3)]), &(yyvsp[(3) - (3)]) TSRMLS_CC); }
     break;
 
-  case 447:
-
+  case 466:
+#line 1000 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_variable_parse(TSRMLS_C);  fetch_simple_variable(&(yyval), &(yyvsp[(2) - (3)]), 1 TSRMLS_CC); }
     break;
 
-  case 448:
-
+  case 467:
+#line 1001 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_begin_variable_parse(TSRMLS_C);  fetch_array_begin(&(yyval), &(yyvsp[(2) - (6)]), &(yyvsp[(4) - (6)]) TSRMLS_CC); }
     break;
 
-  case 449:
-
+  case 468:
+#line 1002 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(2) - (3)]); }
     break;
 
-  case 450:
-
+  case 469:
+#line 1007 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 451:
-
+  case 470:
+#line 1008 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(1) - (1)]); }
     break;
 
-  case 452:
-
+  case 471:
+#line 1009 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { fetch_simple_variable(&(yyval), &(yyvsp[(1) - (1)]), 1 TSRMLS_CC); }
     break;
 
-  case 453:
-
+  case 472:
+#line 1014 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { (yyval) = (yyvsp[(3) - (4)]); }
     break;
 
-  case 454:
-
+  case 473:
+#line 1015 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_isset_or_isempty(ZEND_ISEMPTY, &(yyval), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 455:
-
+  case 474:
+#line 1016 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_include_or_eval(ZEND_INCLUDE, &(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 456:
-
+  case 475:
+#line 1017 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_include_or_eval(ZEND_INCLUDE_ONCE, &(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 457:
-
+  case 476:
+#line 1018 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_include_or_eval(ZEND_EVAL, &(yyval), &(yyvsp[(3) - (4)]) TSRMLS_CC); }
     break;
 
-  case 458:
-
+  case 477:
+#line 1019 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_include_or_eval(ZEND_REQUIRE, &(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 459:
-
+  case 478:
+#line 1020 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_include_or_eval(ZEND_REQUIRE_ONCE, &(yyval), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 460:
-
+  case 479:
+#line 1024 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_isset_or_isempty(ZEND_ISSET, &(yyval), &(yyvsp[(1) - (1)]) TSRMLS_CC); }
     break;
 
-  case 461:
-
+  case 480:
+#line 1025 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_boolean_and_begin(&(yyvsp[(1) - (2)]), &(yyvsp[(2) - (2)]) TSRMLS_CC); }
     break;
 
-  case 462:
-
+  case 481:
+#line 1025 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { znode tmp; zend_do_isset_or_isempty(ZEND_ISSET, &tmp, &(yyvsp[(4) - (4)]) TSRMLS_CC); zend_do_boolean_and_end(&(yyval), &(yyvsp[(1) - (4)]), &tmp, &(yyvsp[(2) - (4)]) TSRMLS_CC); }
     break;
 
-  case 463:
-
+  case 482:
+#line 1029 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_constant(&(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), ZEND_RT, 0 TSRMLS_CC); }
     break;
 
-  case 464:
-
+  case 483:
+#line 1030 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
     { zend_do_fetch_constant(&(yyval), &(yyvsp[(1) - (3)]), &(yyvsp[(3) - (3)]), ZEND_RT, 0 TSRMLS_CC); }
     break;
 
 
 /* Line 1267 of yacc.c.  */
-
+#line 5548 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.c"
       default: break;
     }
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
@@ -5646,7 +5758,7 @@ yyreturn:
 }
 
 
-
+#line 1033 "/export/users/marcelog/src/sts/PHP-5.3.5/Zend/zend_language_parser.y"
 
 
 /*
diff --git a/Zend/zend_language_parser.h b/Zend/zend_language_parser.h
index 32ff2d9..3ec23b8 100644
--- a/Zend/zend_language_parser.h
+++ b/Zend/zend_language_parser.h
@@ -161,7 +161,8 @@
      T_NAMESPACE = 377,
      T_NS_C = 378,
      T_DIR = 379,
-     T_NS_SEPARATOR = 380
+     T_NS_SEPARATOR = 380,
+     T_ANNOTATION = 381
    };
 #endif
 /* Tokens.  */
@@ -288,6 +289,7 @@
 #define T_NS_C 378
 #define T_DIR 379
 #define T_NS_SEPARATOR 380
+#define T_ANNOTATION 381
 
 
 
diff --git a/Zend/zend_language_parser.output b/Zend/zend_language_parser.output
index 71dcb30..b2d5af8 100644
--- a/Zend/zend_language_parser.output
+++ b/Zend/zend_language_parser.output
@@ -10,7 +10,7 @@ Terminals which are not used
    T_WHITESPACE
 
 
-State 725 conflicts: 2 shift/reduce
+State 751 conflicts: 2 shift/reduce
 
 
 Grammar
@@ -29,1229 +29,1273 @@ Grammar
 
     7 top_statement: statement
     8              | function_declaration_statement
-    9              | class_declaration_statement
-   10              | T_HALT_COMPILER '(' ')' ';'
-   11              | T_NAMESPACE namespace_name ';'
+    9              | annotations class_declaration_statement
+   10              | class_declaration_statement
+   11              | T_HALT_COMPILER '(' ')' ';'
+   12              | T_NAMESPACE namespace_name ';'
 
-   12 @2: /* empty */
+   13 @2: /* empty */
 
-   13 top_statement: T_NAMESPACE namespace_name '{' @2 top_statement_list '}'
+   14 top_statement: T_NAMESPACE namespace_name '{' @2 top_statement_list '}'
 
-   14 @3: /* empty */
+   15 @3: /* empty */
 
-   15 top_statement: T_NAMESPACE '{' @3 top_statement_list '}'
-   16              | T_USE use_declarations ';'
-   17              | constant_declaration ';'
+   16 top_statement: T_NAMESPACE '{' @3 top_statement_list '}'
+   17              | T_USE use_declarations ';'
+   18              | constant_declaration ';'
 
-   18 use_declarations: use_declarations ',' use_declaration
-   19                 | use_declaration
+   19 annotations: annotations annotation
+   20            | annotation
 
-   20 use_declaration: namespace_name
-   21                | namespace_name T_AS T_STRING
-   22                | T_NS_SEPARATOR namespace_name
-   23                | T_NS_SEPARATOR namespace_name T_AS T_STRING
+   21 annotation: T_ANNOTATION T_STRING
+   22           | T_ANNOTATION T_STRING '(' annotation_args ')'
 
-   24 constant_declaration: constant_declaration ',' T_STRING '=' static_scalar
-   25                     | T_CONST T_STRING '=' static_scalar
+   23 annotation_args: annotation_arg
+   24                | annotation_arg ',' annotation_arg
 
-   26 @4: /* empty */
+   25 annotation_arg: T_CONSTANT_ENCAPSED_STRING
+   26               | T_STRING '=' T_CONSTANT_ENCAPSED_STRING
 
-   27 inner_statement_list: inner_statement_list @4 inner_statement
-   28                     | /* empty */
+   27 use_declarations: use_declarations ',' use_declaration
+   28                 | use_declaration
 
-   29 inner_statement: statement
-   30                | function_declaration_statement
-   31                | class_declaration_statement
-   32                | T_HALT_COMPILER '(' ')' ';'
+   29 use_declaration: namespace_name
+   30                | namespace_name T_AS T_STRING
+   31                | T_NS_SEPARATOR namespace_name
+   32                | T_NS_SEPARATOR namespace_name T_AS T_STRING
 
-   33 statement: unticked_statement
-   34          | T_STRING ':'
+   33 constant_declaration: constant_declaration ',' T_STRING '=' static_scalar
+   34                     | T_CONST T_STRING '=' static_scalar
 
-   35 unticked_statement: '{' inner_statement_list '}'
+   35 @4: /* empty */
 
-   36 @5: /* empty */
+   36 inner_statement_list: inner_statement_list @4 inner_statement
+   37                     | /* empty */
 
-   37 @6: /* empty */
+   38 inner_statement: statement
+   39                | function_declaration_statement
+   40                | class_declaration_statement
+   41                | T_HALT_COMPILER '(' ')' ';'
 
-   38 unticked_statement: T_IF '(' expr ')' @5 statement @6 elseif_list else_single
+   42 statement: unticked_statement
+   43          | T_STRING ':'
 
-   39 @7: /* empty */
+   44 unticked_statement: '{' inner_statement_list '}'
 
-   40 @8: /* empty */
+   45 @5: /* empty */
 
-   41 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
+   46 @6: /* empty */
 
-   42 @9: /* empty */
+   47 unticked_statement: T_IF '(' expr ')' @5 statement @6 elseif_list else_single
 
-   43 @10: /* empty */
+   48 @7: /* empty */
 
-   44 unticked_statement: T_WHILE '(' @9 expr ')' @10 while_statement
+   49 @8: /* empty */
 
-   45 @11: /* empty */
+   50 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
 
-   46 @12: /* empty */
+   51 @9: /* empty */
 
-   47 unticked_statement: T_DO @11 statement T_WHILE '(' @12 expr ')' ';'
+   52 @10: /* empty */
 
-   48 @13: /* empty */
+   53 unticked_statement: T_WHILE '(' @9 expr ')' @10 while_statement
 
-   49 @14: /* empty */
+   54 @11: /* empty */
 
-   50 @15: /* empty */
+   55 @12: /* empty */
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement
+   56 unticked_statement: T_DO @11 statement T_WHILE '(' @12 expr ')' ';'
 
-   52 @16: /* empty */
+   57 @13: /* empty */
 
-   53 unticked_statement: T_SWITCH '(' expr ')' @16 switch_case_list
-   54                   | T_BREAK ';'
-   55                   | T_BREAK expr ';'
-   56                   | T_CONTINUE ';'
-   57                   | T_CONTINUE expr ';'
-   58                   | T_RETURN ';'
-   59                   | T_RETURN expr_without_variable ';'
-   60                   | T_RETURN variable ';'
-   61                   | T_GLOBAL global_var_list ';'
-   62                   | T_STATIC static_var_list ';'
-   63                   | T_ECHO echo_expr_list ';'
-   64                   | T_INLINE_HTML
-   65                   | expr ';'
-   66                   | T_UNSET '(' unset_variables ')' ';'
+   58 @14: /* empty */
 
-   67 @17: /* empty */
+   59 @15: /* empty */
 
-   68 @18: /* empty */
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement
 
-   69 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
+   61 @16: /* empty */
 
-   70 @19: /* empty */
+   62 unticked_statement: T_SWITCH '(' expr ')' @16 switch_case_list
+   63                   | T_BREAK ';'
+   64                   | T_BREAK expr ';'
+   65                   | T_CONTINUE ';'
+   66                   | T_CONTINUE expr ';'
+   67                   | T_RETURN ';'
+   68                   | T_RETURN expr_without_variable ';'
+   69                   | T_RETURN variable ';'
+   70                   | T_GLOBAL global_var_list ';'
+   71                   | T_STATIC static_var_list ';'
+   72                   | T_ECHO echo_expr_list ';'
+   73                   | T_INLINE_HTML
+   74                   | expr ';'
+   75                   | T_UNSET '(' unset_variables ')' ';'
 
-   71 @20: /* empty */
+   76 @17: /* empty */
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement
+   77 @18: /* empty */
 
-   73 @21: /* empty */
+   78 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
 
-   74 unticked_statement: T_DECLARE @21 '(' declare_list ')' declare_statement
-   75                   | ';'
+   79 @19: /* empty */
 
-   76 @22: /* empty */
+   80 @20: /* empty */
 
-   77 @23: /* empty */
+   81 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement
 
-   78 @24: /* empty */
+   82 @21: /* empty */
 
-   79 @25: /* empty */
+   83 unticked_statement: T_DECLARE @21 '(' declare_list ')' declare_statement
+   84                   | ';'
 
-   80 @26: /* empty */
+   85 @22: /* empty */
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
-   82                   | T_THROW expr ';'
-   83                   | T_GOTO T_STRING ';'
+   86 @23: /* empty */
 
-   84 additional_catches: non_empty_additional_catches
-   85                   | /* empty */
+   87 @24: /* empty */
 
-   86 non_empty_additional_catches: additional_catch
-   87                             | non_empty_additional_catches additional_catch
+   88 @25: /* empty */
 
-   88 @27: /* empty */
+   89 @26: /* empty */
 
-   89 @28: /* empty */
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   91                   | T_THROW expr ';'
+   92                   | T_GOTO T_STRING ';'
 
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list '}'
+   93 additional_catches: non_empty_additional_catches
+   94                   | /* empty */
 
-   91 unset_variables: unset_variable
-   92                | unset_variables ',' unset_variable
+   95 non_empty_additional_catches: additional_catch
+   96                             | non_empty_additional_catches additional_catch
 
-   93 unset_variable: variable
+   97 @27: /* empty */
 
-   94 function_declaration_statement: unticked_function_declaration_statement
+   98 @28: /* empty */
 
-   95 class_declaration_statement: unticked_class_declaration_statement
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list '}'
 
-   96 is_reference: /* empty */
-   97             | '&'
+  100 unset_variables: unset_variable
+  101                | unset_variables ',' unset_variable
 
-   98 @29: /* empty */
+  102 unset_variable: variable
 
-   99 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'
+  103 function_declaration_statement: unticked_function_declaration_statement
 
-  100 @30: /* empty */
+  104 class_declaration_statement: unticked_class_declaration_statement
 
-  101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list '{' class_statement_list '}'
+  105 is_reference: /* empty */
+  106             | '&'
 
-  102 @31: /* empty */
+  107 @29: /* empty */
 
-  103 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list '{' class_statement_list '}'
+  108 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'
 
-  104 class_entry_type: T_CLASS
-  105                 | T_ABSTRACT T_CLASS
-  106                 | T_FINAL T_CLASS
+  109 @30: /* empty */
 
-  107 extends_from: /* empty */
-  108             | T_EXTENDS fully_qualified_class_name
+  110 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list '{' class_statement_list '}'
 
-  109 interface_entry: T_INTERFACE
+  111 @31: /* empty */
 
-  110 interface_extends_list: /* empty */
-  111                       | T_EXTENDS interface_list
+  112 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list '{' class_statement_list '}'
 
-  112 implements_list: /* empty */
-  113                | T_IMPLEMENTS interface_list
+  113 class_entry_type: T_CLASS
+  114                 | T_ABSTRACT T_CLASS
+  115                 | T_FINAL T_CLASS
 
-  114 interface_list: fully_qualified_class_name
-  115               | interface_list ',' fully_qualified_class_name
+  116 extends_from: /* empty */
+  117             | T_EXTENDS fully_qualified_class_name
 
-  116 foreach_optional_arg: /* empty */
-  117                     | T_DOUBLE_ARROW foreach_variable
+  118 interface_entry: T_INTERFACE
 
-  118 foreach_variable: variable
-  119                 | '&' variable
+  119 interface_extends_list: /* empty */
+  120                       | T_EXTENDS interface_list
 
-  120 for_statement: statement
-  121              | ':' inner_statement_list T_ENDFOR ';'
+  121 implements_list: /* empty */
+  122                | T_IMPLEMENTS interface_list
 
-  122 foreach_statement: statement
-  123                  | ':' inner_statement_list T_ENDFOREACH ';'
+  123 interface_list: fully_qualified_class_name
+  124               | interface_list ',' fully_qualified_class_name
 
-  124 declare_statement: statement
-  125                  | ':' inner_statement_list T_ENDDECLARE ';'
+  125 foreach_optional_arg: /* empty */
+  126                     | T_DOUBLE_ARROW foreach_variable
 
-  126 declare_list: T_STRING '=' static_scalar
-  127             | declare_list ',' T_STRING '=' static_scalar
+  127 foreach_variable: variable
+  128                 | '&' variable
 
-  128 switch_case_list: '{' case_list '}'
-  129                 | '{' ';' case_list '}'
-  130                 | ':' case_list T_ENDSWITCH ';'
-  131                 | ':' ';' case_list T_ENDSWITCH ';'
+  129 for_statement: statement
+  130              | ':' inner_statement_list T_ENDFOR ';'
 
-  132 case_list: /* empty */
+  131 foreach_statement: statement
+  132                  | ':' inner_statement_list T_ENDFOREACH ';'
 
-  133 @32: /* empty */
+  133 declare_statement: statement
+  134                  | ':' inner_statement_list T_ENDDECLARE ';'
 
-  134 case_list: case_list T_CASE expr case_separator @32 inner_statement_list
+  135 declare_list: T_STRING '=' static_scalar
+  136             | declare_list ',' T_STRING '=' static_scalar
 
-  135 @33: /* empty */
+  137 switch_case_list: '{' case_list '}'
+  138                 | '{' ';' case_list '}'
+  139                 | ':' case_list T_ENDSWITCH ';'
+  140                 | ':' ';' case_list T_ENDSWITCH ';'
 
-  136 case_list: case_list T_DEFAULT case_separator @33 inner_statement_list
+  141 case_list: /* empty */
 
-  137 case_separator: ':'
-  138               | ';'
+  142 @32: /* empty */
 
-  139 while_statement: statement
-  140                | ':' inner_statement_list T_ENDWHILE ';'
+  143 case_list: case_list T_CASE expr case_separator @32 inner_statement_list
 
-  141 elseif_list: /* empty */
+  144 @33: /* empty */
 
-  142 @34: /* empty */
+  145 case_list: case_list T_DEFAULT case_separator @33 inner_statement_list
 
-  143 elseif_list: elseif_list T_ELSEIF '(' expr ')' @34 statement
+  146 case_separator: ':'
+  147               | ';'
 
-  144 new_elseif_list: /* empty */
+  148 while_statement: statement
+  149                | ':' inner_statement_list T_ENDWHILE ';'
 
-  145 @35: /* empty */
+  150 elseif_list: /* empty */
 
-  146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' @35 inner_statement_list
+  151 @34: /* empty */
 
-  147 else_single: /* empty */
-  148            | T_ELSE statement
+  152 elseif_list: elseif_list T_ELSEIF '(' expr ')' @34 statement
 
-  149 new_else_single: /* empty */
-  150                | T_ELSE ':' inner_statement_list
+  153 new_elseif_list: /* empty */
 
-  151 parameter_list: non_empty_parameter_list
-  152               | /* empty */
+  154 @35: /* empty */
 
-  153 non_empty_parameter_list: optional_class_type T_VARIABLE
-  154                         | optional_class_type '&' T_VARIABLE
-  155                         | optional_class_type '&' T_VARIABLE '=' static_scalar
-  156                         | optional_class_type T_VARIABLE '=' static_scalar
-  157                         | non_empty_parameter_list ',' optional_class_type T_VARIABLE
-  158                         | non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE
-  159                         | non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' static_scalar
-  160                         | non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' static_scalar
+  155 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' @35 inner_statement_list
 
-  161 optional_class_type: /* empty */
-  162                    | fully_qualified_class_name
-  163                    | T_ARRAY
+  156 else_single: /* empty */
+  157            | T_ELSE statement
 
-  164 function_call_parameter_list: non_empty_function_call_parameter_list
-  165                             | /* empty */
+  158 new_else_single: /* empty */
+  159                | T_ELSE ':' inner_statement_list
 
-  166 non_empty_function_call_parameter_list: expr_without_variable
-  167                                       | variable
-  168                                       | '&' w_variable
-  169                                       | non_empty_function_call_parameter_list ',' expr_without_variable
-  170                                       | non_empty_function_call_parameter_list ',' variable
-  171                                       | non_empty_function_call_parameter_list ',' '&' w_variable
+  160 parameter_list: non_empty_parameter_list
+  161               | /* empty */
 
-  172 global_var_list: global_var_list ',' global_var
-  173                | global_var
+  162 non_empty_parameter_list: optional_class_type T_VARIABLE
+  163                         | optional_class_type '&' T_VARIABLE
+  164                         | annotations optional_class_type T_VARIABLE
+  165                         | annotations optional_class_type '&' T_VARIABLE
+  166                         | optional_class_type '&' T_VARIABLE '=' static_scalar
+  167                         | optional_class_type T_VARIABLE '=' static_scalar
+  168                         | non_empty_parameter_list ',' optional_class_type T_VARIABLE
+  169                         | non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE
+  170                         | non_empty_parameter_list ',' annotations optional_class_type T_VARIABLE
+  171                         | non_empty_parameter_list ',' annotations optional_class_type '&' T_VARIABLE
+  172                         | non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' static_scalar
+  173                         | non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' static_scalar
 
-  174 global_var: T_VARIABLE
-  175           | '$' r_variable
-  176           | '$' '{' expr '}'
+  174 optional_class_type: /* empty */
+  175                    | fully_qualified_class_name
+  176                    | T_ARRAY
 
-  177 static_var_list: static_var_list ',' T_VARIABLE
-  178                | static_var_list ',' T_VARIABLE '=' static_scalar
-  179                | T_VARIABLE
-  180                | T_VARIABLE '=' static_scalar
+  177 function_call_parameter_list: non_empty_function_call_parameter_list
+  178                             | /* empty */
 
-  181 class_statement_list: class_statement_list class_statement
-  182                     | /* empty */
+  179 non_empty_function_call_parameter_list: expr_without_variable
+  180                                       | variable
+  181                                       | '&' w_variable
+  182                                       | annotations variable
+  183                                       | annotations '&' w_variable
+  184                                       | non_empty_function_call_parameter_list ',' expr_without_variable
+  185                                       | non_empty_function_call_parameter_list ',' variable
+  186                                       | non_empty_function_call_parameter_list ',' '&' w_variable
 
-  183 @36: /* empty */
+  187 global_var_list: global_var_list ',' global_var
+  188                | global_var
 
-  184 class_statement: variable_modifiers @36 class_variable_declaration ';'
-  185                | class_constant_declaration ';'
+  189 global_var: T_VARIABLE
+  190           | '$' r_variable
+  191           | '$' '{' expr '}'
 
-  186 @37: /* empty */
+  192 static_var_list: static_var_list ',' T_VARIABLE
+  193                | static_var_list ',' T_VARIABLE '=' static_scalar
+  194                | T_VARIABLE
+  195                | T_VARIABLE '=' static_scalar
 
-  187 class_statement: method_modifiers function is_reference T_STRING @37 '(' parameter_list ')' method_body
+  196 class_statement_list: class_statement_list class_statement
+  197                     | /* empty */
 
-  188 method_body: ';'
-  189            | '{' inner_statement_list '}'
+  198 @36: /* empty */
 
-  190 variable_modifiers: non_empty_member_modifiers
-  191                   | T_VAR
+  199 class_statement: variable_modifiers @36 class_variable_declaration ';'
 
-  192 method_modifiers: /* empty */
-  193                 | non_empty_member_modifiers
+  200 @37: /* empty */
 
-  194 non_empty_member_modifiers: member_modifier
-  195                           | non_empty_member_modifiers member_modifier
+  201 class_statement: annotations variable_modifiers @37 class_variable_declaration ';'
+  202                | class_constant_declaration ';'
 
-  196 member_modifier: T_PUBLIC
-  197                | T_PROTECTED
-  198                | T_PRIVATE
-  199                | T_STATIC
-  200                | T_ABSTRACT
-  201                | T_FINAL
+  203 @38: /* empty */
 
-  202 class_variable_declaration: class_variable_declaration ',' T_VARIABLE
-  203                           | class_variable_declaration ',' T_VARIABLE '=' static_scalar
-  204                           | T_VARIABLE
-  205                           | T_VARIABLE '=' static_scalar
+  204 class_statement: method_modifiers function is_reference T_STRING @38 '(' parameter_list ')' method_body
 
-  206 class_constant_declaration: class_constant_declaration ',' T_STRING '=' static_scalar
-  207                           | T_CONST T_STRING '=' static_scalar
+  205 @39: /* empty */
 
-  208 echo_expr_list: echo_expr_list ',' expr
-  209               | expr
+  206 class_statement: annotations method_modifiers function is_reference T_STRING @39 '(' parameter_list ')' method_body
 
-  210 for_expr: /* empty */
-  211         | non_empty_for_expr
+  207 method_body: ';'
+  208            | '{' inner_statement_list '}'
 
-  212 @38: /* empty */
+  209 variable_modifiers: non_empty_member_modifiers
+  210                   | T_VAR
 
-  213 non_empty_for_expr: non_empty_for_expr ',' @38 expr
-  214                   | expr
+  211 method_modifiers: /* empty */
+  212                 | non_empty_member_modifiers
 
-  215 @39: /* empty */
+  213 non_empty_member_modifiers: member_modifier
+  214                           | non_empty_member_modifiers member_modifier
 
-  216 expr_without_variable: T_LIST '(' @39 assignment_list ')' '=' expr
-  217                      | variable '=' expr
-  218                      | variable '=' '&' variable
+  215 member_modifier: T_PUBLIC
+  216                | T_PROTECTED
+  217                | T_PRIVATE
+  218                | T_STATIC
+  219                | T_ABSTRACT
+  220                | T_FINAL
 
-  219 @40: /* empty */
+  221 class_variable_declaration: class_variable_declaration ',' T_VARIABLE
+  222                           | class_variable_declaration ',' T_VARIABLE '=' static_scalar
+  223                           | T_VARIABLE
+  224                           | T_VARIABLE '=' static_scalar
 
-  220 expr_without_variable: variable '=' '&' T_NEW class_name_reference @40 ctor_arguments
+  225 class_constant_declaration: class_constant_declaration ',' T_STRING '=' static_scalar
+  226                           | T_CONST T_STRING '=' static_scalar
 
-  221 @41: /* empty */
+  227 echo_expr_list: echo_expr_list ',' expr
+  228               | expr
 
-  222 expr_without_variable: T_NEW class_name_reference @41 ctor_arguments
-  223                      | T_CLONE expr
-  224                      | variable T_PLUS_EQUAL expr
-  225                      | variable T_MINUS_EQUAL expr
-  226                      | variable T_MUL_EQUAL expr
-  227                      | variable T_DIV_EQUAL expr
-  228                      | variable T_CONCAT_EQUAL expr
-  229                      | variable T_MOD_EQUAL expr
-  230                      | variable T_AND_EQUAL expr
-  231                      | variable T_OR_EQUAL expr
-  232                      | variable T_XOR_EQUAL expr
-  233                      | variable T_SL_EQUAL expr
-  234                      | variable T_SR_EQUAL expr
-  235                      | rw_variable T_INC
-  236                      | T_INC rw_variable
-  237                      | rw_variable T_DEC
-  238                      | T_DEC rw_variable
+  229 for_expr: /* empty */
+  230         | non_empty_for_expr
 
-  239 @42: /* empty */
+  231 @40: /* empty */
+
+  232 non_empty_for_expr: non_empty_for_expr ',' @40 expr
+  233                   | expr
+
+  234 @41: /* empty */
+
+  235 expr_without_variable: T_LIST '(' @41 assignment_list ')' '=' expr
+  236                      | variable '=' expr
+  237                      | variable '=' '&' variable
 
-  240 expr_without_variable: expr T_BOOLEAN_OR @42 expr
+  238 @42: /* empty */
 
-  241 @43: /* empty */
+  239 expr_without_variable: variable '=' '&' T_NEW class_name_reference @42 ctor_arguments
 
-  242 expr_without_variable: expr T_BOOLEAN_AND @43 expr
+  240 @43: /* empty */
 
-  243 @44: /* empty */
+  241 expr_without_variable: T_NEW class_name_reference @43 ctor_arguments
+  242                      | T_CLONE expr
+  243                      | variable T_PLUS_EQUAL expr
+  244                      | variable T_MINUS_EQUAL expr
+  245                      | variable T_MUL_EQUAL expr
+  246                      | variable T_DIV_EQUAL expr
+  247                      | variable T_CONCAT_EQUAL expr
+  248                      | variable T_MOD_EQUAL expr
+  249                      | variable T_AND_EQUAL expr
+  250                      | variable T_OR_EQUAL expr
+  251                      | variable T_XOR_EQUAL expr
+  252                      | variable T_SL_EQUAL expr
+  253                      | variable T_SR_EQUAL expr
+  254                      | rw_variable T_INC
+  255                      | T_INC rw_variable
+  256                      | rw_variable T_DEC
+  257                      | T_DEC rw_variable
 
-  244 expr_without_variable: expr T_LOGICAL_OR @44 expr
+  258 @44: /* empty */
 
-  245 @45: /* empty */
+  259 expr_without_variable: expr T_BOOLEAN_OR @44 expr
 
-  246 expr_without_variable: expr T_LOGICAL_AND @45 expr
-  247                      | expr T_LOGICAL_XOR expr
-  248                      | expr '|' expr
-  249                      | expr '&' expr
-  250                      | expr '^' expr
-  251                      | expr '.' expr
-  252                      | expr '+' expr
-  253                      | expr '-' expr
-  254                      | expr '*' expr
-  255                      | expr '/' expr
-  256                      | expr '%' expr
-  257                      | expr T_SL expr
-  258                      | expr T_SR expr
-  259                      | '+' expr
-  260                      | '-' expr
-  261                      | '!' expr
-  262                      | '~' expr
-  263                      | expr T_IS_IDENTICAL expr
-  264                      | expr T_IS_NOT_IDENTICAL expr
-  265                      | expr T_IS_EQUAL expr
-  266                      | expr T_IS_NOT_EQUAL expr
-  267                      | expr '<' expr
-  268                      | expr T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr '>' expr
-  270                      | expr T_IS_GREATER_OR_EQUAL expr
-  271                      | expr T_INSTANCEOF class_name_reference
-  272                      | '(' expr ')'
+  260 @45: /* empty */
 
-  273 @46: /* empty */
+  261 expr_without_variable: expr T_BOOLEAN_AND @45 expr
 
-  274 @47: /* empty */
+  262 @46: /* empty */
 
-  275 expr_without_variable: expr '?' @46 expr ':' @47 expr
+  263 expr_without_variable: expr T_LOGICAL_OR @46 expr
 
-  276 @48: /* empty */
+  264 @47: /* empty */
 
-  277 expr_without_variable: expr '?' ':' @48 expr
-  278                      | internal_functions_in_yacc
-  279                      | T_INT_CAST expr
-  280                      | T_DOUBLE_CAST expr
-  281                      | T_STRING_CAST expr
-  282                      | T_ARRAY_CAST expr
-  283                      | T_OBJECT_CAST expr
-  284                      | T_BOOL_CAST expr
-  285                      | T_UNSET_CAST expr
-  286                      | T_EXIT exit_expr
+  265 expr_without_variable: expr T_LOGICAL_AND @47 expr
+  266                      | expr T_LOGICAL_XOR expr
+  267                      | expr '|' expr
+  268                      | expr '&' expr
+  269                      | expr '^' expr
+  270                      | expr '.' expr
+  271                      | expr '+' expr
+  272                      | expr '-' expr
+  273                      | expr '*' expr
+  274                      | expr '/' expr
+  275                      | expr '%' expr
+  276                      | expr T_SL expr
+  277                      | expr T_SR expr
+  278                      | '+' expr
+  279                      | '-' expr
+  280                      | '!' expr
+  281                      | '~' expr
+  282                      | expr T_IS_IDENTICAL expr
+  283                      | expr T_IS_NOT_IDENTICAL expr
+  284                      | expr T_IS_EQUAL expr
+  285                      | expr T_IS_NOT_EQUAL expr
+  286                      | expr '<' expr
+  287                      | expr T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr '>' expr
+  289                      | expr T_IS_GREATER_OR_EQUAL expr
+  290                      | expr T_INSTANCEOF class_name_reference
+  291                      | '(' expr ')'
 
-  287 @49: /* empty */
+  292 @48: /* empty */
 
-  288 expr_without_variable: '@' @49 expr
-  289                      | scalar
-  290                      | T_ARRAY '(' array_pair_list ')'
-  291                      | '`' backticks_expr '`'
-  292                      | T_PRINT expr
+  293 @49: /* empty */
 
-  293 @50: /* empty */
+  294 expr_without_variable: expr '?' @48 expr ':' @49 expr
 
-  294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
+  295 @50: /* empty */
 
-  295 function: T_FUNCTION
+  296 expr_without_variable: expr '?' ':' @50 expr
+  297                      | internal_functions_in_yacc
+  298                      | T_INT_CAST expr
+  299                      | T_DOUBLE_CAST expr
+  300                      | T_STRING_CAST expr
+  301                      | T_ARRAY_CAST expr
+  302                      | T_OBJECT_CAST expr
+  303                      | T_BOOL_CAST expr
+  304                      | T_UNSET_CAST expr
+  305                      | T_EXIT exit_expr
 
-  296 lexical_vars: /* empty */
-  297             | T_USE '(' lexical_var_list ')'
+  306 @51: /* empty */
 
-  298 lexical_var_list: lexical_var_list ',' T_VARIABLE
-  299                 | lexical_var_list ',' '&' T_VARIABLE
-  300                 | T_VARIABLE
-  301                 | '&' T_VARIABLE
+  307 expr_without_variable: '@' @51 expr
+  308                      | scalar
+  309                      | T_ARRAY '(' array_pair_list ')'
+  310                      | '`' backticks_expr '`'
+  311                      | T_PRINT expr
 
-  302 @51: /* empty */
+  312 @52: /* empty */
 
-  303 function_call: namespace_name '(' @51 function_call_parameter_list ')'
+  313 expr_without_variable: function is_reference '(' @52 parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
-  304 @52: /* empty */
+  314 function: T_FUNCTION
 
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' @52 function_call_parameter_list ')'
+  315 lexical_vars: /* empty */
+  316             | T_USE '(' lexical_var_list ')'
 
-  306 @53: /* empty */
+  317 lexical_var_list: lexical_var_list ',' T_VARIABLE
+  318                 | lexical_var_list ',' '&' T_VARIABLE
+  319                 | T_VARIABLE
+  320                 | '&' T_VARIABLE
 
-  307 function_call: T_NS_SEPARATOR namespace_name '(' @53 function_call_parameter_list ')'
+  321 @53: /* empty */
 
-  308 @54: /* empty */
+  322 function_call: namespace_name '(' @53 function_call_parameter_list ')'
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @54 function_call_parameter_list ')'
+  323 @54: /* empty */
 
-  310 @55: /* empty */
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' @54 function_call_parameter_list ')'
 
-  311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @55 function_call_parameter_list ')'
+  325 @55: /* empty */
 
-  312 @56: /* empty */
+  326 function_call: T_NS_SEPARATOR namespace_name '(' @55 function_call_parameter_list ')'
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list ')'
+  327 @56: /* empty */
 
-  314 @57: /* empty */
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list ')'
 
-  315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list ')'
+  329 @57: /* empty */
 
-  316 @58: /* empty */
+  330 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list ')'
 
-  317 function_call: variable_without_objects '(' @58 function_call_parameter_list ')'
+  331 @58: /* empty */
 
-  318 class_name: T_STATIC
-  319           | namespace_name
-  320           | T_NAMESPACE T_NS_SEPARATOR namespace_name
-  321           | T_NS_SEPARATOR namespace_name
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @58 function_call_parameter_list ')'
 
-  322 fully_qualified_class_name: namespace_name
-  323                           | T_NAMESPACE T_NS_SEPARATOR namespace_name
-  324                           | T_NS_SEPARATOR namespace_name
+  333 @59: /* empty */
 
-  325 class_name_reference: class_name
-  326                     | dynamic_class_name_reference
+  334 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @59 function_call_parameter_list ')'
 
-  327 @59: /* empty */
+  335 @60: /* empty */
 
-  328 @60: /* empty */
+  336 function_call: variable_without_objects '(' @60 function_call_parameter_list ')'
 
-  329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @59 object_property @60 dynamic_class_name_variable_properties
-  330                             | base_variable
+  337 class_name: T_STATIC
+  338           | namespace_name
+  339           | T_NAMESPACE T_NS_SEPARATOR namespace_name
+  340           | T_NS_SEPARATOR namespace_name
 
-  331 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property
-  332                                       | /* empty */
+  341 fully_qualified_class_name: namespace_name
+  342                           | T_NAMESPACE T_NS_SEPARATOR namespace_name
+  343                           | T_NS_SEPARATOR namespace_name
 
-  333 dynamic_class_name_variable_property: T_OBJECT_OPERATOR object_property
+  344 class_name_reference: class_name
+  345                     | dynamic_class_name_reference
 
-  334 exit_expr: /* empty */
-  335          | '(' ')'
-  336          | '(' expr ')'
+  346 @61: /* empty */
 
-  337 backticks_expr: /* empty */
-  338               | T_ENCAPSED_AND_WHITESPACE
-  339               | encaps_list
+  347 @62: /* empty */
 
-  340 ctor_arguments: /* empty */
-  341               | '(' function_call_parameter_list ')'
+  348 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @61 object_property @62 dynamic_class_name_variable_properties
+  349                             | base_variable
 
-  342 common_scalar: T_LNUMBER
-  343              | T_DNUMBER
-  344              | T_CONSTANT_ENCAPSED_STRING
-  345              | T_LINE
-  346              | T_FILE
-  347              | T_DIR
-  348              | T_CLASS_C
-  349              | T_METHOD_C
-  350              | T_FUNC_C
-  351              | T_NS_C
-  352              | T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC
-  353              | T_START_HEREDOC T_END_HEREDOC
+  350 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property
+  351                                       | /* empty */
 
-  354 static_scalar: common_scalar
-  355              | namespace_name
-  356              | T_NAMESPACE T_NS_SEPARATOR namespace_name
-  357              | T_NS_SEPARATOR namespace_name
-  358              | '+' static_scalar
-  359              | '-' static_scalar
-  360              | T_ARRAY '(' static_array_pair_list ')'
-  361              | static_class_constant
+  352 dynamic_class_name_variable_property: T_OBJECT_OPERATOR object_property
 
-  362 static_class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING
+  353 exit_expr: /* empty */
+  354          | '(' ')'
+  355          | '(' expr ')'
 
-  363 scalar: T_STRING_VARNAME
-  364       | class_constant
-  365       | namespace_name
-  366       | T_NAMESPACE T_NS_SEPARATOR namespace_name
-  367       | T_NS_SEPARATOR namespace_name
-  368       | common_scalar
-  369       | '"' encaps_list '"'
-  370       | T_START_HEREDOC encaps_list T_END_HEREDOC
+  356 backticks_expr: /* empty */
+  357               | T_ENCAPSED_AND_WHITESPACE
+  358               | encaps_list
 
-  371 static_array_pair_list: /* empty */
-  372                       | non_empty_static_array_pair_list possible_comma
+  359 ctor_arguments: /* empty */
+  360               | '(' function_call_parameter_list ')'
 
-  373 possible_comma: /* empty */
-  374               | ','
+  361 common_scalar: T_LNUMBER
+  362              | T_DNUMBER
+  363              | T_CONSTANT_ENCAPSED_STRING
+  364              | T_LINE
+  365              | T_FILE
+  366              | T_DIR
+  367              | T_CLASS_C
+  368              | T_METHOD_C
+  369              | T_FUNC_C
+  370              | T_NS_C
+  371              | T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC
+  372              | T_START_HEREDOC T_END_HEREDOC
 
-  375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar
-  376                                 | non_empty_static_array_pair_list ',' static_scalar
-  377                                 | static_scalar T_DOUBLE_ARROW static_scalar
-  378                                 | static_scalar
+  373 static_scalar: common_scalar
+  374              | namespace_name
+  375              | T_NAMESPACE T_NS_SEPARATOR namespace_name
+  376              | T_NS_SEPARATOR namespace_name
+  377              | '+' static_scalar
+  378              | '-' static_scalar
+  379              | T_ARRAY '(' static_array_pair_list ')'
+  380              | static_class_constant
 
-  379 expr: r_variable
-  380     | expr_without_variable
+  381 static_class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING
 
-  381 r_variable: variable
+  382 scalar: T_STRING_VARNAME
+  383       | class_constant
+  384       | namespace_name
+  385       | T_NAMESPACE T_NS_SEPARATOR namespace_name
+  386       | T_NS_SEPARATOR namespace_name
+  387       | common_scalar
+  388       | '"' encaps_list '"'
+  389       | T_START_HEREDOC encaps_list T_END_HEREDOC
 
-  382 w_variable: variable
+  390 static_array_pair_list: /* empty */
+  391                       | non_empty_static_array_pair_list possible_comma
 
-  383 rw_variable: variable
+  392 possible_comma: /* empty */
+  393               | ','
 
-  384 @61: /* empty */
+  394 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar
+  395                                 | non_empty_static_array_pair_list ',' static_scalar
+  396                                 | static_scalar T_DOUBLE_ARROW static_scalar
+  397                                 | static_scalar
 
-  385 @62: /* empty */
+  398 expr: r_variable
+  399     | expr_without_variable
 
-  386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @61 object_property @62 method_or_not variable_properties
-  387         | base_variable_with_function_calls
+  400 r_variable: variable
 
-  388 variable_properties: variable_properties variable_property
-  389                    | /* empty */
+  401 w_variable: variable
 
-  390 @63: /* empty */
+  402 rw_variable: variable
 
-  391 variable_property: T_OBJECT_OPERATOR object_property @63 method_or_not
+  403 @63: /* empty */
 
-  392 @64: /* empty */
+  404 @64: /* empty */
 
-  393 method_or_not: '(' @64 function_call_parameter_list ')'
-  394              | /* empty */
+  405 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @63 object_property @64 method_or_not variable_properties
+  406         | base_variable_with_function_calls
 
-  395 variable_without_objects: reference_variable
-  396                         | simple_indirect_reference reference_variable
+  407 variable_properties: variable_properties variable_property
+  408                    | /* empty */
 
-  397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
-  398              | variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
+  409 @65: /* empty */
 
-  399 variable_class_name: reference_variable
+  410 variable_property: T_OBJECT_OPERATOR object_property @65 method_or_not
 
-  400 base_variable_with_function_calls: base_variable
-  401                                  | function_call
+  411 @66: /* empty */
 
-  402 base_variable: reference_variable
-  403              | simple_indirect_reference reference_variable
-  404              | static_member
+  412 method_or_not: '(' @66 function_call_parameter_list ')'
+  413              | /* empty */
 
-  405 reference_variable: reference_variable '[' dim_offset ']'
-  406                   | reference_variable '{' expr '}'
-  407                   | compound_variable
+  414 variable_without_objects: reference_variable
+  415                         | simple_indirect_reference reference_variable
 
-  408 compound_variable: T_VARIABLE
-  409                  | '$' '{' expr '}'
+  416 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
+  417              | variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
 
-  410 dim_offset: /* empty */
-  411           | expr
+  418 variable_class_name: reference_variable
 
-  412 object_property: object_dim_list
+  419 base_variable_with_function_calls: base_variable
+  420                                  | function_call
 
-  413 @65: /* empty */
+  421 base_variable: reference_variable
+  422              | simple_indirect_reference reference_variable
+  423              | static_member
 
-  414 object_property: variable_without_objects @65
+  424 reference_variable: reference_variable '[' dim_offset ']'
+  425                   | reference_variable '{' expr '}'
+  426                   | compound_variable
 
-  415 object_dim_list: object_dim_list '[' dim_offset ']'
-  416                | object_dim_list '{' expr '}'
-  417                | variable_name
+  427 compound_variable: T_VARIABLE
+  428                  | '$' '{' expr '}'
 
-  418 variable_name: T_STRING
-  419              | '{' expr '}'
+  429 dim_offset: /* empty */
+  430           | expr
 
-  420 simple_indirect_reference: '$'
-  421                          | simple_indirect_reference '$'
+  431 object_property: object_dim_list
 
-  422 assignment_list: assignment_list ',' assignment_list_element
-  423                | assignment_list_element
+  432 @67: /* empty */
 
-  424 assignment_list_element: variable
+  433 object_property: variable_without_objects @67
 
-  425 @66: /* empty */
+  434 object_dim_list: object_dim_list '[' dim_offset ']'
+  435                | object_dim_list '{' expr '}'
+  436                | variable_name
 
-  426 assignment_list_element: T_LIST '(' @66 assignment_list ')'
-  427                        | /* empty */
+  437 variable_name: T_STRING
+  438              | '{' expr '}'
 
-  428 array_pair_list: /* empty */
-  429                | non_empty_array_pair_list possible_comma
+  439 simple_indirect_reference: '$'
+  440                          | simple_indirect_reference '$'
 
-  430 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr
-  431                          | non_empty_array_pair_list ',' expr
-  432                          | expr T_DOUBLE_ARROW expr
-  433                          | expr
-  434                          | non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_variable
-  435                          | non_empty_array_pair_list ',' '&' w_variable
-  436                          | expr T_DOUBLE_ARROW '&' w_variable
-  437                          | '&' w_variable
+  441 assignment_list: assignment_list ',' assignment_list_element
+  442                | assignment_list_element
 
-  438 encaps_list: encaps_list encaps_var
-  439            | encaps_list T_ENCAPSED_AND_WHITESPACE
-  440            | encaps_var
-  441            | T_ENCAPSED_AND_WHITESPACE encaps_var
+  443 assignment_list_element: variable
 
-  442 encaps_var: T_VARIABLE
+  444 @68: /* empty */
 
-  443 @67: /* empty */
+  445 assignment_list_element: T_LIST '(' @68 assignment_list ')'
+  446                        | /* empty */
 
-  444 encaps_var: T_VARIABLE '[' @67 encaps_var_offset ']'
-  445           | T_VARIABLE T_OBJECT_OPERATOR T_STRING
-  446           | T_DOLLAR_OPEN_CURLY_BRACES expr '}'
-  447           | T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'
-  448           | T_CURLY_OPEN variable '}'
+  447 array_pair_list: /* empty */
+  448                | non_empty_array_pair_list possible_comma
 
-  449 encaps_var_offset: T_STRING
-  450                  | T_NUM_STRING
-  451                  | T_VARIABLE
+  449 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr
+  450                          | non_empty_array_pair_list ',' expr
+  451                          | expr T_DOUBLE_ARROW expr
+  452                          | expr
+  453                          | non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_variable
+  454                          | non_empty_array_pair_list ',' '&' w_variable
+  455                          | expr T_DOUBLE_ARROW '&' w_variable
+  456                          | '&' w_variable
 
-  452 internal_functions_in_yacc: T_ISSET '(' isset_variables ')'
-  453                           | T_EMPTY '(' variable ')'
-  454                           | T_INCLUDE expr
-  455                           | T_INCLUDE_ONCE expr
-  456                           | T_EVAL '(' expr ')'
-  457                           | T_REQUIRE expr
-  458                           | T_REQUIRE_ONCE expr
+  457 encaps_list: encaps_list encaps_var
+  458            | encaps_list T_ENCAPSED_AND_WHITESPACE
+  459            | encaps_var
+  460            | T_ENCAPSED_AND_WHITESPACE encaps_var
 
-  459 isset_variables: variable
+  461 encaps_var: T_VARIABLE
 
-  460 @68: /* empty */
+  462 @69: /* empty */
 
-  461 isset_variables: isset_variables ',' @68 variable
+  463 encaps_var: T_VARIABLE '[' @69 encaps_var_offset ']'
+  464           | T_VARIABLE T_OBJECT_OPERATOR T_STRING
+  465           | T_DOLLAR_OPEN_CURLY_BRACES expr '}'
+  466           | T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'
+  467           | T_CURLY_OPEN variable '}'
 
-  462 class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING
-  463               | variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING
+  468 encaps_var_offset: T_STRING
+  469                  | T_NUM_STRING
+  470                  | T_VARIABLE
+
+  471 internal_functions_in_yacc: T_ISSET '(' isset_variables ')'
+  472                           | T_EMPTY '(' variable ')'
+  473                           | T_INCLUDE expr
+  474                           | T_INCLUDE_ONCE expr
+  475                           | T_EVAL '(' expr ')'
+  476                           | T_REQUIRE expr
+  477                           | T_REQUIRE_ONCE expr
+
+  478 isset_variables: variable
+
+  479 @70: /* empty */
+
+  480 isset_variables: isset_variables ',' @70 variable
+
+  481 class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING
+  482               | variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING
 
 
 Terminals, with rules where they appear
 
 $end (0) 0
-'!' (33) 261
-'"' (34) 369
-'$' (36) 175 176 409 420 421
-'%' (37) 256
-'&' (38) 97 119 154 155 158 159 168 171 218 220 249 299 301 434 435
-    436 437
-'(' (40) 10 32 38 41 44 47 51 53 66 69 72 74 81 90 99 143 146 187 216
-    272 290 294 297 303 305 307 309 311 313 315 317 335 336 341 360
-    393 426 452 453 456
-')' (41) 10 32 38 41 44 47 51 53 66 69 72 74 81 90 99 143 146 187 216
-    272 290 294 297 303 305 307 309 311 313 315 317 335 336 341 360
-    393 426 452 453 456
-'*' (42) 254
-'+' (43) 252 259 358
-',' (44) 18 24 92 115 127 157 158 159 160 169 170 171 172 177 178 202
-    203 206 208 213 298 299 374 375 376 422 430 431 434 435 461
-'-' (45) 253 260 359
-'.' (46) 251
-'/' (47) 255
-':' (58) 34 41 121 123 125 130 131 137 140 146 150 275 277
-';' (59) 10 11 16 17 32 41 47 51 54 55 56 57 58 59 60 61 62 63 65 66
-    75 82 83 121 123 125 129 130 131 138 140 184 185 188
-'<' (60) 267
-'=' (61) 24 25 126 127 155 156 159 160 178 180 203 205 206 207 216
-    217 218 220
-'>' (62) 269
-'?' (63) 275 277
-'@' (64) 288
-'[' (91) 405 415 444 447
-']' (93) 405 415 444 447
-'^' (94) 250
-'`' (96) 291
-'{' (123) 13 15 35 81 90 99 101 103 128 129 176 189 294 406 409 416
-    419
-'|' (124) 248
-'}' (125) 13 15 35 81 90 99 101 103 128 129 176 189 294 406 409 416
-    419 446 447 448
-'~' (126) 262
+'!' (33) 280
+'"' (34) 388
+'$' (36) 190 191 428 439 440
+'%' (37) 275
+'&' (38) 106 128 163 165 166 169 171 172 181 183 186 237 239 268 318
+    320 453 454 455 456
+'(' (40) 11 22 41 47 50 53 56 60 62 75 78 81 83 90 99 108 152 155 204
+    206 235 291 309 313 316 322 324 326 328 330 332 334 336 354 355
+    360 379 412 445 471 472 475
+')' (41) 11 22 41 47 50 53 56 60 62 75 78 81 83 90 99 108 152 155 204
+    206 235 291 309 313 316 322 324 326 328 330 332 334 336 354 355
+    360 379 412 445 471 472 475
+'*' (42) 273
+'+' (43) 271 278 377
+',' (44) 24 27 33 101 124 136 168 169 170 171 172 173 184 185 186 187
+    192 193 221 222 225 227 232 317 318 393 394 395 441 449 450 453
+    454 480
+'-' (45) 272 279 378
+'.' (46) 270
+'/' (47) 274
+':' (58) 43 50 130 132 134 139 140 146 149 155 159 294 296
+';' (59) 11 12 17 18 41 50 56 60 63 64 65 66 67 68 69 70 71 72 74 75
+    84 91 92 130 132 134 138 139 140 147 149 199 201 202 207
+'<' (60) 286
+'=' (61) 26 33 34 135 136 166 167 172 173 193 195 222 224 225 226 235
+    236 237 239
+'>' (62) 288
+'?' (63) 294 296
+'@' (64) 307
+'[' (91) 424 434 463 466
+']' (93) 424 434 463 466
+'^' (94) 269
+'`' (96) 310
+'{' (123) 14 16 44 90 99 108 110 112 137 138 191 208 313 425 428 435
+    438
+'|' (124) 267
+'}' (125) 14 16 44 90 99 108 110 112 137 138 191 208 313 425 428 435
+    438 465 466 467
+'~' (126) 281
 error (256)
-T_REQUIRE_ONCE (258) 458
-T_REQUIRE (259) 457
-T_EVAL (260) 456
-T_INCLUDE_ONCE (261) 455
-T_INCLUDE (262) 454
-T_LOGICAL_OR (263) 244
-T_LOGICAL_XOR (264) 247
-T_LOGICAL_AND (265) 246
-T_PRINT (266) 292
-T_SR_EQUAL (267) 234
-T_SL_EQUAL (268) 233
-T_XOR_EQUAL (269) 232
-T_OR_EQUAL (270) 231
-T_AND_EQUAL (271) 230
-T_MOD_EQUAL (272) 229
-T_CONCAT_EQUAL (273) 228
-T_DIV_EQUAL (274) 227
-T_MUL_EQUAL (275) 226
-T_MINUS_EQUAL (276) 225
-T_PLUS_EQUAL (277) 224
-T_BOOLEAN_OR (278) 240
-T_BOOLEAN_AND (279) 242
-T_IS_NOT_IDENTICAL (280) 264
-T_IS_IDENTICAL (281) 263
-T_IS_NOT_EQUAL (282) 266
-T_IS_EQUAL (283) 265
-T_IS_GREATER_OR_EQUAL (284) 270
-T_IS_SMALLER_OR_EQUAL (285) 268
-T_SR (286) 258
-T_SL (287) 257
-T_INSTANCEOF (288) 271
-T_UNSET_CAST (289) 285
-T_BOOL_CAST (290) 284
-T_OBJECT_CAST (291) 283
-T_ARRAY_CAST (292) 282
-T_STRING_CAST (293) 281
-T_DOUBLE_CAST (294) 280
-T_INT_CAST (295) 279
-T_DEC (296) 237 238
-T_INC (297) 235 236
-T_CLONE (298) 223
-T_NEW (299) 220 222
-T_EXIT (300) 286
-T_IF (301) 38 41
-T_ELSEIF (302) 143 146
-T_ELSE (303) 148 150
-T_ENDIF (304) 41
-T_LNUMBER (305) 342
-T_DNUMBER (306) 343
-T_STRING (307) 5 6 21 23 24 25 34 83 99 101 103 126 127 187 206 207
-    309 313 362 418 445 449 462 463
-T_STRING_VARNAME (308) 363 447
-T_VARIABLE (309) 81 90 153 154 155 156 157 158 159 160 174 177 178
-    179 180 202 203 204 205 298 299 300 301 408 442 444 445 451
-T_NUM_STRING (310) 450
-T_INLINE_HTML (311) 64
+T_REQUIRE_ONCE (258) 477
+T_REQUIRE (259) 476
+T_EVAL (260) 475
+T_INCLUDE_ONCE (261) 474
+T_INCLUDE (262) 473
+T_LOGICAL_OR (263) 263
+T_LOGICAL_XOR (264) 266
+T_LOGICAL_AND (265) 265
+T_PRINT (266) 311
+T_SR_EQUAL (267) 253
+T_SL_EQUAL (268) 252
+T_XOR_EQUAL (269) 251
+T_OR_EQUAL (270) 250
+T_AND_EQUAL (271) 249
+T_MOD_EQUAL (272) 248
+T_CONCAT_EQUAL (273) 247
+T_DIV_EQUAL (274) 246
+T_MUL_EQUAL (275) 245
+T_MINUS_EQUAL (276) 244
+T_PLUS_EQUAL (277) 243
+T_BOOLEAN_OR (278) 259
+T_BOOLEAN_AND (279) 261
+T_IS_NOT_IDENTICAL (280) 283
+T_IS_IDENTICAL (281) 282
+T_IS_NOT_EQUAL (282) 285
+T_IS_EQUAL (283) 284
+T_IS_GREATER_OR_EQUAL (284) 289
+T_IS_SMALLER_OR_EQUAL (285) 287
+T_SR (286) 277
+T_SL (287) 276
+T_INSTANCEOF (288) 290
+T_UNSET_CAST (289) 304
+T_BOOL_CAST (290) 303
+T_OBJECT_CAST (291) 302
+T_ARRAY_CAST (292) 301
+T_STRING_CAST (293) 300
+T_DOUBLE_CAST (294) 299
+T_INT_CAST (295) 298
+T_DEC (296) 256 257
+T_INC (297) 254 255
+T_CLONE (298) 242
+T_NEW (299) 239 241
+T_EXIT (300) 305
+T_IF (301) 47 50
+T_ELSEIF (302) 152 155
+T_ELSE (303) 157 159
+T_ENDIF (304) 50
+T_LNUMBER (305) 361
+T_DNUMBER (306) 362
+T_STRING (307) 5 6 21 22 26 30 32 33 34 43 92 108 110 112 135 136 204
+    206 225 226 328 332 381 437 464 468 481 482
+T_STRING_VARNAME (308) 382 466
+T_VARIABLE (309) 90 99 162 163 164 165 166 167 168 169 170 171 172
+    173 189 192 193 194 195 221 222 223 224 317 318 319 320 427 461
+    463 464 470
+T_NUM_STRING (310) 469
+T_INLINE_HTML (311) 73
 T_CHARACTER (312)
 T_BAD_CHARACTER (313)
-T_ENCAPSED_AND_WHITESPACE (314) 338 352 439 441
-T_CONSTANT_ENCAPSED_STRING (315) 344
-T_ECHO (316) 63
-T_DO (317) 47
-T_WHILE (318) 44 47
-T_ENDWHILE (319) 140
-T_FOR (320) 51
-T_ENDFOR (321) 121
-T_FOREACH (322) 69 72
-T_ENDFOREACH (323) 123
-T_DECLARE (324) 74
-T_ENDDECLARE (325) 125
-T_AS (326) 21 23 69 72
-T_SWITCH (327) 53
-T_ENDSWITCH (328) 130 131
-T_CASE (329) 134
-T_DEFAULT (330) 136
-T_BREAK (331) 54 55
-T_CONTINUE (332) 56 57
-T_GOTO (333) 83
-T_FUNCTION (334) 295
-T_CONST (335) 25 207
-T_RETURN (336) 58 59 60
-T_TRY (337) 81
-T_CATCH (338) 81 90
-T_THROW (339) 82
-T_USE (340) 16 297
-T_GLOBAL (341) 61
-T_PUBLIC (342) 196
-T_PROTECTED (343) 197
-T_PRIVATE (344) 198
-T_FINAL (345) 106 201
-T_ABSTRACT (346) 105 200
-T_STATIC (347) 62 199 318
-T_VAR (348) 191
-T_UNSET (349) 66
-T_ISSET (350) 452
-T_EMPTY (351) 453
-T_HALT_COMPILER (352) 10 32
-T_CLASS (353) 104 105 106
-T_INTERFACE (354) 109
-T_EXTENDS (355) 108 111
-T_IMPLEMENTS (356) 113
-T_OBJECT_OPERATOR (357) 329 333 386 391 445
-T_DOUBLE_ARROW (358) 117 375 377 430 432 434 436
-T_LIST (359) 216 426
-T_ARRAY (360) 163 290 360
-T_CLASS_C (361) 348
-T_METHOD_C (362) 349
-T_FUNC_C (363) 350
-T_LINE (364) 345
-T_FILE (365) 346
+T_ENCAPSED_AND_WHITESPACE (314) 357 371 458 460
+T_CONSTANT_ENCAPSED_STRING (315) 25 26 363
+T_ECHO (316) 72
+T_DO (317) 56
+T_WHILE (318) 53 56
+T_ENDWHILE (319) 149
+T_FOR (320) 60
+T_ENDFOR (321) 130
+T_FOREACH (322) 78 81
+T_ENDFOREACH (323) 132
+T_DECLARE (324) 83
+T_ENDDECLARE (325) 134
+T_AS (326) 30 32 78 81
+T_SWITCH (327) 62
+T_ENDSWITCH (328) 139 140
+T_CASE (329) 143
+T_DEFAULT (330) 145
+T_BREAK (331) 63 64
+T_CONTINUE (332) 65 66
+T_GOTO (333) 92
+T_FUNCTION (334) 314
+T_CONST (335) 34 226
+T_RETURN (336) 67 68 69
+T_TRY (337) 90
+T_CATCH (338) 90 99
+T_THROW (339) 91
+T_USE (340) 17 316
+T_GLOBAL (341) 70
+T_PUBLIC (342) 215
+T_PROTECTED (343) 216
+T_PRIVATE (344) 217
+T_FINAL (345) 115 220
+T_ABSTRACT (346) 114 219
+T_STATIC (347) 71 218 337
+T_VAR (348) 210
+T_UNSET (349) 75
+T_ISSET (350) 471
+T_EMPTY (351) 472
+T_HALT_COMPILER (352) 11 41
+T_CLASS (353) 113 114 115
+T_INTERFACE (354) 118
+T_EXTENDS (355) 117 120
+T_IMPLEMENTS (356) 122
+T_OBJECT_OPERATOR (357) 348 352 405 410 464
+T_DOUBLE_ARROW (358) 126 394 396 449 451 453 455
+T_LIST (359) 235 445
+T_ARRAY (360) 176 309 379
+T_CLASS_C (361) 367
+T_METHOD_C (362) 368
+T_FUNC_C (363) 369
+T_LINE (364) 364
+T_FILE (365) 365
 T_COMMENT (366)
 T_DOC_COMMENT (367)
 T_OPEN_TAG (368)
 T_OPEN_TAG_WITH_ECHO (369)
 T_CLOSE_TAG (370)
 T_WHITESPACE (371)
-T_START_HEREDOC (372) 352 353 370
-T_END_HEREDOC (373) 352 353 370
-T_DOLLAR_OPEN_CURLY_BRACES (374) 446 447
-T_CURLY_OPEN (375) 448
-T_PAAMAYIM_NEKUDOTAYIM (376) 309 311 313 315 362 397 398 462 463
-T_NAMESPACE (377) 11 13 15 305 320 323 356 366
-T_NS_C (378) 351
-T_DIR (379) 347
-T_NS_SEPARATOR (380) 6 22 23 305 307 320 321 323 324 356 357 366 367
+T_START_HEREDOC (372) 371 372 389
+T_END_HEREDOC (373) 371 372 389
+T_DOLLAR_OPEN_CURLY_BRACES (374) 465 466
+T_CURLY_OPEN (375) 467
+T_PAAMAYIM_NEKUDOTAYIM (376) 328 330 332 334 381 416 417 481 482
+T_NAMESPACE (377) 12 14 16 324 339 342 375 385
+T_NS_C (378) 370
+T_DIR (379) 366
+T_NS_SEPARATOR (380) 6 31 32 324 326 339 340 342 343 375 376 385 386
+T_ANNOTATION (381) 21 22
 
 
 Nonterminals, with rules where they appear
 
-$accept (154)
+$accept (155)
     on left: 0
-start (155)
+start (156)
     on left: 1, on right: 0
-top_statement_list (156)
-    on left: 3 4, on right: 1 3 13 15
-@1 (157)
+top_statement_list (157)
+    on left: 3 4, on right: 1 3 14 16
+@1 (158)
     on left: 2, on right: 3
-namespace_name (158)
-    on left: 5 6, on right: 6 11 13 20 21 22 23 303 305 307 319 320
-    321 322 323 324 355 356 357 365 366 367
-top_statement (159)
-    on left: 7 8 9 10 11 13 15 16 17, on right: 3
-@2 (160)
-    on left: 12, on right: 13
-@3 (161)
-    on left: 14, on right: 15
-use_declarations (162)
-    on left: 18 19, on right: 16 18
-use_declaration (163)
-    on left: 20 21 22 23, on right: 18 19
-constant_declaration (164)
-    on left: 24 25, on right: 17 24
-inner_statement_list (165)
-    on left: 27 28, on right: 27 35 41 81 90 99 121 123 125 134 136
-    140 146 150 189 294
-@4 (166)
-    on left: 26, on right: 27
-inner_statement (167)
-    on left: 29 30 31 32, on right: 27
-statement (168)
-    on left: 33 34, on right: 7 29 38 47 120 122 124 139 143 148
-unticked_statement (169)
-    on left: 35 38 41 44 47 51 53 54 55 56 57 58 59 60 61 62 63 64
-    65 66 69 72 74 75 81 82 83, on right: 33
-@5 (170)
-    on left: 36, on right: 38
-@6 (171)
-    on left: 37, on right: 38
-@7 (172)
-    on left: 39, on right: 41
-@8 (173)
-    on left: 40, on right: 41
-@9 (174)
-    on left: 42, on right: 44
-@10 (175)
-    on left: 43, on right: 44
-@11 (176)
+namespace_name (159)
+    on left: 5 6, on right: 6 12 14 29 30 31 32 322 324 326 338 339
+    340 341 342 343 374 375 376 384 385 386
+top_statement (160)
+    on left: 7 8 9 10 11 12 14 16 17 18, on right: 3
+@2 (161)
+    on left: 13, on right: 14
+@3 (162)
+    on left: 15, on right: 16
+annotations (163)
+    on left: 19 20, on right: 9 19 164 165 170 171 182 183 201 206
+annotation (164)
+    on left: 21 22, on right: 19 20
+annotation_args (165)
+    on left: 23 24, on right: 22
+annotation_arg (166)
+    on left: 25 26, on right: 23 24
+use_declarations (167)
+    on left: 27 28, on right: 17 27
+use_declaration (168)
+    on left: 29 30 31 32, on right: 27 28
+constant_declaration (169)
+    on left: 33 34, on right: 18 33
+inner_statement_list (170)
+    on left: 36 37, on right: 36 44 50 90 99 108 130 132 134 143 145
+    149 155 159 208 313
+@4 (171)
+    on left: 35, on right: 36
+inner_statement (172)
+    on left: 38 39 40 41, on right: 36
+statement (173)
+    on left: 42 43, on right: 7 38 47 56 129 131 133 148 152 157
+unticked_statement (174)
+    on left: 44 47 50 53 56 60 62 63 64 65 66 67 68 69 70 71 72 73
+    74 75 78 81 83 84 90 91 92, on right: 42
+@5 (175)
     on left: 45, on right: 47
-@12 (177)
+@6 (176)
     on left: 46, on right: 47
-@13 (178)
-    on left: 48, on right: 51
-@14 (179)
-    on left: 49, on right: 51
-@15 (180)
-    on left: 50, on right: 51
-@16 (181)
+@7 (177)
+    on left: 48, on right: 50
+@8 (178)
+    on left: 49, on right: 50
+@9 (179)
+    on left: 51, on right: 53
+@10 (180)
     on left: 52, on right: 53
-@17 (182)
-    on left: 67, on right: 69
-@18 (183)
-    on left: 68, on right: 69
-@19 (184)
-    on left: 70, on right: 72
-@20 (185)
-    on left: 71, on right: 72
-@21 (186)
-    on left: 73, on right: 74
-@22 (187)
-    on left: 76, on right: 81
-@23 (188)
-    on left: 77, on right: 81
-@24 (189)
-    on left: 78, on right: 81
-@25 (190)
+@11 (181)
+    on left: 54, on right: 56
+@12 (182)
+    on left: 55, on right: 56
+@13 (183)
+    on left: 57, on right: 60
+@14 (184)
+    on left: 58, on right: 60
+@15 (185)
+    on left: 59, on right: 60
+@16 (186)
+    on left: 61, on right: 62
+@17 (187)
+    on left: 76, on right: 78
+@18 (188)
+    on left: 77, on right: 78
+@19 (189)
     on left: 79, on right: 81
-@26 (191)
+@20 (190)
     on left: 80, on right: 81
-additional_catches (192)
-    on left: 84 85, on right: 81
-non_empty_additional_catches (193)
-    on left: 86 87, on right: 84 87
-additional_catch (194)
-    on left: 90, on right: 86 87
-@27 (195)
+@21 (191)
+    on left: 82, on right: 83
+@22 (192)
+    on left: 85, on right: 90
+@23 (193)
+    on left: 86, on right: 90
+@24 (194)
+    on left: 87, on right: 90
+@25 (195)
     on left: 88, on right: 90
-@28 (196)
+@26 (196)
     on left: 89, on right: 90
-unset_variables (197)
-    on left: 91 92, on right: 66 92
-unset_variable (198)
-    on left: 93, on right: 91 92
-function_declaration_statement (199)
-    on left: 94, on right: 8 30
-class_declaration_statement (200)
-    on left: 95, on right: 9 31
-is_reference (201)
-    on left: 96 97, on right: 99 187 294
-unticked_function_declaration_statement (202)
-    on left: 99, on right: 94
-@29 (203)
+additional_catches (197)
+    on left: 93 94, on right: 90
+non_empty_additional_catches (198)
+    on left: 95 96, on right: 93 96
+additional_catch (199)
+    on left: 99, on right: 95 96
+@27 (200)
+    on left: 97, on right: 99
+@28 (201)
     on left: 98, on right: 99
-unticked_class_declaration_statement (204)
-    on left: 101 103, on right: 95
-@30 (205)
-    on left: 100, on right: 101
-@31 (206)
-    on left: 102, on right: 103
-class_entry_type (207)
-    on left: 104 105 106, on right: 101
-extends_from (208)
-    on left: 107 108, on right: 101
-interface_entry (209)
-    on left: 109, on right: 103
-interface_extends_list (210)
-    on left: 110 111, on right: 103
-implements_list (211)
-    on left: 112 113, on right: 101
-interface_list (212)
-    on left: 114 115, on right: 111 113 115
-foreach_optional_arg (213)
-    on left: 116 117, on right: 69 72
-foreach_variable (214)
-    on left: 118 119, on right: 69 117
-for_statement (215)
-    on left: 120 121, on right: 51
-foreach_statement (216)
-    on left: 122 123, on right: 69 72
-declare_statement (217)
-    on left: 124 125, on right: 74
-declare_list (218)
-    on left: 126 127, on right: 74 127
-switch_case_list (219)
-    on left: 128 129 130 131, on right: 53
-case_list (220)
-    on left: 132 134 136, on right: 128 129 130 131 134 136
-@32 (221)
-    on left: 133, on right: 134
-@33 (222)
-    on left: 135, on right: 136
-case_separator (223)
-    on left: 137 138, on right: 134 136
-while_statement (224)
-    on left: 139 140, on right: 44
-elseif_list (225)
-    on left: 141 143, on right: 38 143
-@34 (226)
+unset_variables (202)
+    on left: 100 101, on right: 75 101
+unset_variable (203)
+    on left: 102, on right: 100 101
+function_declaration_statement (204)
+    on left: 103, on right: 8 39
+class_declaration_statement (205)
+    on left: 104, on right: 9 10 40
+is_reference (206)
+    on left: 105 106, on right: 108 204 206 313
+unticked_function_declaration_statement (207)
+    on left: 108, on right: 103
+@29 (208)
+    on left: 107, on right: 108
+unticked_class_declaration_statement (209)
+    on left: 110 112, on right: 104
+@30 (210)
+    on left: 109, on right: 110
+@31 (211)
+    on left: 111, on right: 112
+class_entry_type (212)
+    on left: 113 114 115, on right: 110
+extends_from (213)
+    on left: 116 117, on right: 110
+interface_entry (214)
+    on left: 118, on right: 112
+interface_extends_list (215)
+    on left: 119 120, on right: 112
+implements_list (216)
+    on left: 121 122, on right: 110
+interface_list (217)
+    on left: 123 124, on right: 120 122 124
+foreach_optional_arg (218)
+    on left: 125 126, on right: 78 81
+foreach_variable (219)
+    on left: 127 128, on right: 78 126
+for_statement (220)
+    on left: 129 130, on right: 60
+foreach_statement (221)
+    on left: 131 132, on right: 78 81
+declare_statement (222)
+    on left: 133 134, on right: 83
+declare_list (223)
+    on left: 135 136, on right: 83 136
+switch_case_list (224)
+    on left: 137 138 139 140, on right: 62
+case_list (225)
+    on left: 141 143 145, on right: 137 138 139 140 143 145
+@32 (226)
     on left: 142, on right: 143
-new_elseif_list (227)
-    on left: 144 146, on right: 41 146
-@35 (228)
-    on left: 145, on right: 146
-else_single (229)
-    on left: 147 148, on right: 38
-new_else_single (230)
-    on left: 149 150, on right: 41
-parameter_list (231)
-    on left: 151 152, on right: 99 187 294
-non_empty_parameter_list (232)
-    on left: 153 154 155 156 157 158 159 160, on right: 151 157 158
-    159 160
-optional_class_type (233)
-    on left: 161 162 163, on right: 153 154 155 156 157 158 159 160
-function_call_parameter_list (234)
-    on left: 164 165, on right: 303 305 307 309 311 313 315 317 341
-    393
-non_empty_function_call_parameter_list (235)
-    on left: 166 167 168 169 170 171, on right: 164 169 170 171
-global_var_list (236)
-    on left: 172 173, on right: 61 172
-global_var (237)
-    on left: 174 175 176, on right: 172 173
-static_var_list (238)
-    on left: 177 178 179 180, on right: 62 177 178
-class_statement_list (239)
-    on left: 181 182, on right: 101 103 181
-class_statement (240)
-    on left: 184 185 187, on right: 181
-@36 (241)
-    on left: 183, on right: 184
-@37 (242)
-    on left: 186, on right: 187
-method_body (243)
-    on left: 188 189, on right: 187
-variable_modifiers (244)
-    on left: 190 191, on right: 184
-method_modifiers (245)
-    on left: 192 193, on right: 187
-non_empty_member_modifiers (246)
-    on left: 194 195, on right: 190 193 195
-member_modifier (247)
-    on left: 196 197 198 199 200 201, on right: 194 195
-class_variable_declaration (248)
-    on left: 202 203 204 205, on right: 184 202 203
-class_constant_declaration (249)
-    on left: 206 207, on right: 185 206
-echo_expr_list (250)
-    on left: 208 209, on right: 63 208
-for_expr (251)
-    on left: 210 211, on right: 51
-non_empty_for_expr (252)
-    on left: 213 214, on right: 211 213
-@38 (253)
-    on left: 212, on right: 213
-expr_without_variable (254)
-    on left: 216 217 218 220 222 223 224 225 226 227 228 229 230 231
-    232 233 234 235 236 237 238 240 242 244 246 247 248 249 250 251
-    252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267
-    268 269 270 271 272 275 277 278 279 280 281 282 283 284 285 286
-    288 289 290 291 292 294, on right: 59 72 166 169 380
-@39 (255)
-    on left: 215, on right: 216
-@40 (256)
-    on left: 219, on right: 220
-@41 (257)
-    on left: 221, on right: 222
-@42 (258)
-    on left: 239, on right: 240
-@43 (259)
-    on left: 241, on right: 242
-@44 (260)
-    on left: 243, on right: 244
-@45 (261)
-    on left: 245, on right: 246
-@46 (262)
-    on left: 273, on right: 275
-@47 (263)
-    on left: 274, on right: 275
-@48 (264)
-    on left: 276, on right: 277
-@49 (265)
-    on left: 287, on right: 288
-@50 (266)
+@33 (227)
+    on left: 144, on right: 145
+case_separator (228)
+    on left: 146 147, on right: 143 145
+while_statement (229)
+    on left: 148 149, on right: 53
+elseif_list (230)
+    on left: 150 152, on right: 47 152
+@34 (231)
+    on left: 151, on right: 152
+new_elseif_list (232)
+    on left: 153 155, on right: 50 155
+@35 (233)
+    on left: 154, on right: 155
+else_single (234)
+    on left: 156 157, on right: 47
+new_else_single (235)
+    on left: 158 159, on right: 50
+parameter_list (236)
+    on left: 160 161, on right: 108 204 206 313
+non_empty_parameter_list (237)
+    on left: 162 163 164 165 166 167 168 169 170 171 172 173,
+    on right: 160 168 169 170 171 172 173
+optional_class_type (238)
+    on left: 174 175 176, on right: 162 163 164 165 166 167 168 169
+    170 171 172 173
+function_call_parameter_list (239)
+    on left: 177 178, on right: 322 324 326 328 330 332 334 336 360
+    412
+non_empty_function_call_parameter_list (240)
+    on left: 179 180 181 182 183 184 185 186, on right: 177 184 185
+    186
+global_var_list (241)
+    on left: 187 188, on right: 70 187
+global_var (242)
+    on left: 189 190 191, on right: 187 188
+static_var_list (243)
+    on left: 192 193 194 195, on right: 71 192 193
+class_statement_list (244)
+    on left: 196 197, on right: 110 112 196
+class_statement (245)
+    on left: 199 201 202 204 206, on right: 196
+@36 (246)
+    on left: 198, on right: 199
+@37 (247)
+    on left: 200, on right: 201
+@38 (248)
+    on left: 203, on right: 204
+@39 (249)
+    on left: 205, on right: 206
+method_body (250)
+    on left: 207 208, on right: 204 206
+variable_modifiers (251)
+    on left: 209 210, on right: 199 201
+method_modifiers (252)
+    on left: 211 212, on right: 204 206
+non_empty_member_modifiers (253)
+    on left: 213 214, on right: 209 212 214
+member_modifier (254)
+    on left: 215 216 217 218 219 220, on right: 213 214
+class_variable_declaration (255)
+    on left: 221 222 223 224, on right: 199 201 221 222
+class_constant_declaration (256)
+    on left: 225 226, on right: 202 225
+echo_expr_list (257)
+    on left: 227 228, on right: 72 227
+for_expr (258)
+    on left: 229 230, on right: 60
+non_empty_for_expr (259)
+    on left: 232 233, on right: 230 232
+@40 (260)
+    on left: 231, on right: 232
+expr_without_variable (261)
+    on left: 235 236 237 239 241 242 243 244 245 246 247 248 249 250
+    251 252 253 254 255 256 257 259 261 263 265 266 267 268 269 270
+    271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286
+    287 288 289 290 291 294 296 297 298 299 300 301 302 303 304 305
+    307 308 309 310 311 313, on right: 68 81 179 184 399
+@41 (262)
+    on left: 234, on right: 235
+@42 (263)
+    on left: 238, on right: 239
+@43 (264)
+    on left: 240, on right: 241
+@44 (265)
+    on left: 258, on right: 259
+@45 (266)
+    on left: 260, on right: 261
+@46 (267)
+    on left: 262, on right: 263
+@47 (268)
+    on left: 264, on right: 265
+@48 (269)
+    on left: 292, on right: 294
+@49 (270)
     on left: 293, on right: 294
-function (267)
-    on left: 295, on right: 99 187 294
-lexical_vars (268)
-    on left: 296 297, on right: 294
-lexical_var_list (269)
-    on left: 298 299 300 301, on right: 297 298 299
-function_call (270)
-    on left: 303 305 307 309 311 313 315 317, on right: 401
-@51 (271)
-    on left: 302, on right: 303
-@52 (272)
-    on left: 304, on right: 305
-@53 (273)
+@50 (271)
+    on left: 295, on right: 296
+@51 (272)
     on left: 306, on right: 307
-@54 (274)
-    on left: 308, on right: 309
-@55 (275)
-    on left: 310, on right: 311
-@56 (276)
+@52 (273)
     on left: 312, on right: 313
-@57 (277)
-    on left: 314, on right: 315
-@58 (278)
-    on left: 316, on right: 317
-class_name (279)
-    on left: 318 319 320 321, on right: 309 311 325 362 397 462
-fully_qualified_class_name (280)
-    on left: 322 323 324, on right: 81 90 108 114 115 162
-class_name_reference (281)
-    on left: 325 326, on right: 220 222 271
-dynamic_class_name_reference (282)
-    on left: 329 330, on right: 326
-@59 (283)
-    on left: 327, on right: 329
-@60 (284)
-    on left: 328, on right: 329
-dynamic_class_name_variable_properties (285)
-    on left: 331 332, on right: 329 331
-dynamic_class_name_variable_property (286)
-    on left: 333, on right: 331
-exit_expr (287)
-    on left: 334 335 336, on right: 286
-backticks_expr (288)
-    on left: 337 338 339, on right: 291
-ctor_arguments (289)
-    on left: 340 341, on right: 220 222
-common_scalar (290)
-    on left: 342 343 344 345 346 347 348 349 350 351 352 353,
-    on right: 354 368
-static_scalar (291)
-    on left: 354 355 356 357 358 359 360 361, on right: 24 25 126 127
-    155 156 159 160 178 180 203 205 206 207 358 359 375 376 377 378
-static_class_constant (292)
-    on left: 362, on right: 361
-scalar (293)
-    on left: 363 364 365 366 367 368 369 370, on right: 289
-static_array_pair_list (294)
-    on left: 371 372, on right: 360
-possible_comma (295)
-    on left: 373 374, on right: 372 429
-non_empty_static_array_pair_list (296)
-    on left: 375 376 377 378, on right: 372 375 376
-expr (297)
-    on left: 379 380, on right: 38 41 44 47 53 55 57 65 82 134 143
-    146 176 208 209 213 214 216 217 223 224 225 226 227 228 229 230
-    231 232 233 234 240 242 244 246 247 248 249 250 251 252 253 254
-    255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270
-    271 272 275 277 279 280 281 282 283 284 285 288 292 336 406 409
-    411 416 419 430 431 432 433 434 436 446 447 454 455 456 457 458
-r_variable (298)
-    on left: 381, on right: 175 379
-w_variable (299)
-    on left: 382, on right: 168 171 434 435 436 437
-rw_variable (300)
-    on left: 383, on right: 235 236 237 238
-variable (301)
-    on left: 386 387, on right: 60 69 72 93 118 119 167 170 217 218
-    220 224 225 226 227 228 229 230 231 232 233 234 381 382 383 424
-    448 453 459 461
-@61 (302)
-    on left: 384, on right: 386
-@62 (303)
-    on left: 385, on right: 386
-variable_properties (304)
-    on left: 388 389, on right: 386 388
-variable_property (305)
-    on left: 391, on right: 388
-@63 (306)
-    on left: 390, on right: 391
-method_or_not (307)
-    on left: 393 394, on right: 386 391
-@64 (308)
-    on left: 392, on right: 393
-variable_without_objects (309)
-    on left: 395 396, on right: 311 315 317 397 398 414
-static_member (310)
-    on left: 397 398, on right: 404
-variable_class_name (311)
-    on left: 399, on right: 313 315 398 463
-base_variable_with_function_calls (312)
-    on left: 400 401, on right: 386 387
-base_variable (313)
-    on left: 402 403 404, on right: 329 330 400
-reference_variable (314)
-    on left: 405 406 407, on right: 395 396 399 402 403 405 406
-compound_variable (315)
-    on left: 408 409, on right: 407
-dim_offset (316)
-    on left: 410 411, on right: 405 415
-object_property (317)
-    on left: 412 414, on right: 329 333 386 391
-@65 (318)
-    on left: 413, on right: 414
-object_dim_list (319)
-    on left: 415 416 417, on right: 412 415 416
-variable_name (320)
-    on left: 418 419, on right: 417
-simple_indirect_reference (321)
-    on left: 420 421, on right: 396 403 421
-assignment_list (322)
-    on left: 422 423, on right: 216 422 426
-assignment_list_element (323)
-    on left: 424 426 427, on right: 422 423
-@66 (324)
-    on left: 425, on right: 426
-array_pair_list (325)
-    on left: 428 429, on right: 290
-non_empty_array_pair_list (326)
-    on left: 430 431 432 433 434 435 436 437, on right: 429 430 431
-    434 435
-encaps_list (327)
-    on left: 438 439 440 441, on right: 339 369 370 438 439
-encaps_var (328)
-    on left: 442 444 445 446 447 448, on right: 438 440 441
-@67 (329)
-    on left: 443, on right: 444
-encaps_var_offset (330)
-    on left: 449 450 451, on right: 444
-internal_functions_in_yacc (331)
-    on left: 452 453 454 455 456 457 458, on right: 278
-isset_variables (332)
-    on left: 459 461, on right: 452 461
-@68 (333)
-    on left: 460, on right: 461
-class_constant (334)
-    on left: 462 463, on right: 364
+function (274)
+    on left: 314, on right: 108 204 206 313
+lexical_vars (275)
+    on left: 315 316, on right: 313
+lexical_var_list (276)
+    on left: 317 318 319 320, on right: 316 317 318
+function_call (277)
+    on left: 322 324 326 328 330 332 334 336, on right: 420
+@53 (278)
+    on left: 321, on right: 322
+@54 (279)
+    on left: 323, on right: 324
+@55 (280)
+    on left: 325, on right: 326
+@56 (281)
+    on left: 327, on right: 328
+@57 (282)
+    on left: 329, on right: 330
+@58 (283)
+    on left: 331, on right: 332
+@59 (284)
+    on left: 333, on right: 334
+@60 (285)
+    on left: 335, on right: 336
+class_name (286)
+    on left: 337 338 339 340, on right: 328 330 344 381 416 481
+fully_qualified_class_name (287)
+    on left: 341 342 343, on right: 90 99 117 123 124 175
+class_name_reference (288)
+    on left: 344 345, on right: 239 241 290
+dynamic_class_name_reference (289)
+    on left: 348 349, on right: 345
+@61 (290)
+    on left: 346, on right: 348
+@62 (291)
+    on left: 347, on right: 348
+dynamic_class_name_variable_properties (292)
+    on left: 350 351, on right: 348 350
+dynamic_class_name_variable_property (293)
+    on left: 352, on right: 350
+exit_expr (294)
+    on left: 353 354 355, on right: 305
+backticks_expr (295)
+    on left: 356 357 358, on right: 310
+ctor_arguments (296)
+    on left: 359 360, on right: 239 241
+common_scalar (297)
+    on left: 361 362 363 364 365 366 367 368 369 370 371 372,
+    on right: 373 387
+static_scalar (298)
+    on left: 373 374 375 376 377 378 379 380, on right: 33 34 135 136
+    166 167 172 173 193 195 222 224 225 226 377 378 394 395 396 397
+static_class_constant (299)
+    on left: 381, on right: 380
+scalar (300)
+    on left: 382 383 384 385 386 387 388 389, on right: 308
+static_array_pair_list (301)
+    on left: 390 391, on right: 379
+possible_comma (302)
+    on left: 392 393, on right: 391 448
+non_empty_static_array_pair_list (303)
+    on left: 394 395 396 397, on right: 391 394 395
+expr (304)
+    on left: 398 399, on right: 47 50 53 56 62 64 66 74 91 143 152
+    155 191 227 228 232 233 235 236 242 243 244 245 246 247 248 249
+    250 251 252 253 259 261 263 265 266 267 268 269 270 271 272 273
+    274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289
+    290 291 294 296 298 299 300 301 302 303 304 307 311 355 425 428
+    430 435 438 449 450 451 452 453 455 465 466 473 474 475 476 477
+r_variable (305)
+    on left: 400, on right: 190 398
+w_variable (306)
+    on left: 401, on right: 181 183 186 453 454 455 456
+rw_variable (307)
+    on left: 402, on right: 254 255 256 257
+variable (308)
+    on left: 405 406, on right: 69 78 81 102 127 128 180 182 185 236
+    237 239 243 244 245 246 247 248 249 250 251 252 253 400 401 402
+    443 467 472 478 480
+@63 (309)
+    on left: 403, on right: 405
+@64 (310)
+    on left: 404, on right: 405
+variable_properties (311)
+    on left: 407 408, on right: 405 407
+variable_property (312)
+    on left: 410, on right: 407
+@65 (313)
+    on left: 409, on right: 410
+method_or_not (314)
+    on left: 412 413, on right: 405 410
+@66 (315)
+    on left: 411, on right: 412
+variable_without_objects (316)
+    on left: 414 415, on right: 330 334 336 416 417 433
+static_member (317)
+    on left: 416 417, on right: 423
+variable_class_name (318)
+    on left: 418, on right: 332 334 417 482
+base_variable_with_function_calls (319)
+    on left: 419 420, on right: 405 406
+base_variable (320)
+    on left: 421 422 423, on right: 348 349 419
+reference_variable (321)
+    on left: 424 425 426, on right: 414 415 418 421 422 424 425
+compound_variable (322)
+    on left: 427 428, on right: 426
+dim_offset (323)
+    on left: 429 430, on right: 424 434
+object_property (324)
+    on left: 431 433, on right: 348 352 405 410
+@67 (325)
+    on left: 432, on right: 433
+object_dim_list (326)
+    on left: 434 435 436, on right: 431 434 435
+variable_name (327)
+    on left: 437 438, on right: 436
+simple_indirect_reference (328)
+    on left: 439 440, on right: 415 422 440
+assignment_list (329)
+    on left: 441 442, on right: 235 441 445
+assignment_list_element (330)
+    on left: 443 445 446, on right: 441 442
+@68 (331)
+    on left: 444, on right: 445
+array_pair_list (332)
+    on left: 447 448, on right: 309
+non_empty_array_pair_list (333)
+    on left: 449 450 451 452 453 454 455 456, on right: 448 449 450
+    453 454
+encaps_list (334)
+    on left: 457 458 459 460, on right: 358 388 389 457 458
+encaps_var (335)
+    on left: 461 463 464 465 466 467, on right: 457 459 460
+@69 (336)
+    on left: 462, on right: 463
+encaps_var_offset (337)
+    on left: 468 469 470, on right: 463
+internal_functions_in_yacc (338)
+    on left: 471 472 473 474 475 476 477, on right: 297
+isset_variables (339)
+    on left: 478 480, on right: 471 480
+@70 (340)
+    on left: 479, on right: 480
+class_constant (341)
+    on left: 481 482, on right: 383
 
 
 state 0
@@ -1362,49 +1406,52 @@ state 4
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                           go to state 80
-    top_statement                            go to state 81
-    constant_declaration                     go to state 82
-    statement                                go to state 83
-    unticked_statement                       go to state 84
-    function_declaration_statement           go to state 85
-    class_declaration_statement              go to state 86
-    unticked_function_declaration_statement  go to state 87
-    unticked_class_declaration_statement     go to state 88
-    class_entry_type                         go to state 89
-    interface_entry                          go to state 90
-    expr_without_variable                    go to state 91
-    function                                 go to state 92
-    function_call                            go to state 93
-    class_name                               go to state 94
-    common_scalar                            go to state 95
-    scalar                                   go to state 96
-    expr                                     go to state 97
-    r_variable                               go to state 98
-    rw_variable                              go to state 99
-    variable                                 go to state 100
-    variable_without_objects                 go to state 101
-    static_member                            go to state 102
-    variable_class_name                      go to state 103
-    base_variable_with_function_calls        go to state 104
-    base_variable                            go to state 105
-    reference_variable                       go to state 106
-    compound_variable                        go to state 107
-    simple_indirect_reference                go to state 108
-    internal_functions_in_yacc               go to state 109
-    class_constant                           go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                           go to state 81
+    top_statement                            go to state 82
+    annotations                              go to state 83
+    annotation                               go to state 84
+    constant_declaration                     go to state 85
+    statement                                go to state 86
+    unticked_statement                       go to state 87
+    function_declaration_statement           go to state 88
+    class_declaration_statement              go to state 89
+    unticked_function_declaration_statement  go to state 90
+    unticked_class_declaration_statement     go to state 91
+    class_entry_type                         go to state 92
+    interface_entry                          go to state 93
+    expr_without_variable                    go to state 94
+    function                                 go to state 95
+    function_call                            go to state 96
+    class_name                               go to state 97
+    common_scalar                            go to state 98
+    scalar                                   go to state 99
+    expr                                     go to state 100
+    r_variable                               go to state 101
+    rw_variable                              go to state 102
+    variable                                 go to state 103
+    variable_without_objects                 go to state 104
+    static_member                            go to state 105
+    variable_class_name                      go to state 106
+    base_variable_with_function_calls        go to state 107
+    base_variable                            go to state 108
+    reference_variable                       go to state 109
+    compound_variable                        go to state 110
+    simple_indirect_reference                go to state 111
+    internal_functions_in_yacc               go to state 112
+    class_constant                           go to state 113
 
 
 state 5
 
-  458 internal_functions_in_yacc: T_REQUIRE_ONCE . expr
+  477 internal_functions_in_yacc: T_REQUIRE_ONCE . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -1431,12 +1478,12 @@ state 5
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -1447,41 +1494,41 @@ state 5
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 115
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 118
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 6
 
-  457 internal_functions_in_yacc: T_REQUIRE . expr
+  476 internal_functions_in_yacc: T_REQUIRE . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -1508,12 +1555,12 @@ state 6
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -1524,48 +1571,48 @@ state 6
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 116
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 119
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 7
 
-  456 internal_functions_in_yacc: T_EVAL . '(' expr ')'
+  475 internal_functions_in_yacc: T_EVAL . '(' expr ')'
 
-    '('  shift, and go to state 117
+    '('  shift, and go to state 120
 
 
 state 8
 
-  455 internal_functions_in_yacc: T_INCLUDE_ONCE . expr
+  474 internal_functions_in_yacc: T_INCLUDE_ONCE . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -1592,12 +1639,12 @@ state 8
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -1608,41 +1655,41 @@ state 8
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 118
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 121
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 9
 
-  454 internal_functions_in_yacc: T_INCLUDE . expr
+  473 internal_functions_in_yacc: T_INCLUDE . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -1669,12 +1716,12 @@ state 9
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -1685,41 +1732,41 @@ state 9
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 119
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 122
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 10
 
-  292 expr_without_variable: T_PRINT . expr
+  311 expr_without_variable: T_PRINT . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -1746,12 +1793,12 @@ state 10
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -1762,41 +1809,41 @@ state 10
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 120
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 123
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 11
 
-  259 expr_without_variable: '+' . expr
+  278 expr_without_variable: '+' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -1823,12 +1870,12 @@ state 11
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -1839,41 +1886,41 @@ state 11
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 121
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 124
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 12
 
-  260 expr_without_variable: '-' . expr
+  279 expr_without_variable: '-' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -1900,12 +1947,12 @@ state 12
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -1916,41 +1963,41 @@ state 12
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 122
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 125
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 13
 
-  261 expr_without_variable: '!' . expr
+  280 expr_without_variable: '!' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -1977,12 +2024,12 @@ state 13
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -1993,41 +2040,41 @@ state 13
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 123
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 126
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 14
 
-  262 expr_without_variable: '~' . expr
+  281 expr_without_variable: '~' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2054,12 +2101,12 @@ state 14
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2070,50 +2117,50 @@ state 14
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 124
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 127
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 15
 
-  288 expr_without_variable: '@' . @49 expr
+  307 expr_without_variable: '@' . @51 expr
 
-    $default  reduce using rule 287 (@49)
+    $default  reduce using rule 306 (@51)
 
-    @49  go to state 125
+    @51  go to state 128
 
 
 state 16
 
-  285 expr_without_variable: T_UNSET_CAST . expr
+  304 expr_without_variable: T_UNSET_CAST . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2140,12 +2187,12 @@ state 16
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2156,41 +2203,41 @@ state 16
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 126
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 129
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 17
 
-  284 expr_without_variable: T_BOOL_CAST . expr
+  303 expr_without_variable: T_BOOL_CAST . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2217,12 +2264,12 @@ state 17
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2233,41 +2280,41 @@ state 17
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 127
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 130
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 18
 
-  283 expr_without_variable: T_OBJECT_CAST . expr
+  302 expr_without_variable: T_OBJECT_CAST . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2294,12 +2341,12 @@ state 18
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2310,41 +2357,41 @@ state 18
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 128
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 131
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 19
 
-  282 expr_without_variable: T_ARRAY_CAST . expr
+  301 expr_without_variable: T_ARRAY_CAST . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2371,12 +2418,12 @@ state 19
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2387,41 +2434,41 @@ state 19
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 129
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 132
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 20
 
-  281 expr_without_variable: T_STRING_CAST . expr
+  300 expr_without_variable: T_STRING_CAST . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2448,12 +2495,12 @@ state 20
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2464,41 +2511,41 @@ state 20
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 130
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 133
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 21
 
-  280 expr_without_variable: T_DOUBLE_CAST . expr
+  299 expr_without_variable: T_DOUBLE_CAST . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2525,12 +2572,12 @@ state 21
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2541,41 +2588,41 @@ state 21
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 131
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 134
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 22
 
-  279 expr_without_variable: T_INT_CAST . expr
+  298 expr_without_variable: T_INT_CAST . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2602,12 +2649,12 @@ state 22
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2618,93 +2665,93 @@ state 22
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 132
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 135
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 23
 
-  238 expr_without_variable: T_DEC . rw_variable
+  257 expr_without_variable: T_DEC . rw_variable
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    rw_variable                        go to state 137
-    variable                           go to state 138
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    rw_variable                        go to state 140
+    variable                           go to state 141
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
 state 24
 
-  236 expr_without_variable: T_INC . rw_variable
+  255 expr_without_variable: T_INC . rw_variable
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    rw_variable                        go to state 140
-    variable                           go to state 138
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    rw_variable                        go to state 143
+    variable                           go to state 141
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
 state 25
 
-  223 expr_without_variable: T_CLONE . expr
+  242 expr_without_variable: T_CLONE . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2731,12 +2778,12 @@ state 25
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2747,135 +2794,135 @@ state 25
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 141
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 144
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 26
 
-  222 expr_without_variable: T_NEW . class_name_reference @41 ctor_arguments
+  241 expr_without_variable: T_NEW . class_name_reference @43 ctor_arguments
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 142
-    T_NS_SEPARATOR  shift, and go to state 143
-    '$'             shift, and go to state 77
-
-    namespace_name                go to state 144
-    class_name                    go to state 145
-    class_name_reference          go to state 146
-    dynamic_class_name_reference  go to state 147
-    static_member                 go to state 102
-    variable_class_name           go to state 148
-    base_variable                 go to state 149
-    reference_variable            go to state 150
-    compound_variable             go to state 107
-    simple_indirect_reference     go to state 151
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 145
+    T_NS_SEPARATOR  shift, and go to state 146
+    '$'             shift, and go to state 78
+
+    namespace_name                go to state 147
+    class_name                    go to state 148
+    class_name_reference          go to state 149
+    dynamic_class_name_reference  go to state 150
+    static_member                 go to state 105
+    variable_class_name           go to state 151
+    base_variable                 go to state 152
+    reference_variable            go to state 153
+    compound_variable             go to state 110
+    simple_indirect_reference     go to state 154
 
 
 state 27
 
-  286 expr_without_variable: T_EXIT . exit_expr
+  305 expr_without_variable: T_EXIT . exit_expr
 
-    '('  shift, and go to state 152
+    '('  shift, and go to state 155
 
-    $default  reduce using rule 334 (exit_expr)
+    $default  reduce using rule 353 (exit_expr)
 
-    exit_expr  go to state 153
+    exit_expr  go to state 156
 
 
 state 28
 
-   38 unticked_statement: T_IF . '(' expr ')' @5 statement @6 elseif_list else_single
-   41                   | T_IF . '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
+   47 unticked_statement: T_IF . '(' expr ')' @5 statement @6 elseif_list else_single
+   50                   | T_IF . '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
 
-    '('  shift, and go to state 154
+    '('  shift, and go to state 157
 
 
 state 29
 
-  342 common_scalar: T_LNUMBER .
+  361 common_scalar: T_LNUMBER .
 
-    $default  reduce using rule 342 (common_scalar)
+    $default  reduce using rule 361 (common_scalar)
 
 
 state 30
 
-  343 common_scalar: T_DNUMBER .
+  362 common_scalar: T_DNUMBER .
 
-    $default  reduce using rule 343 (common_scalar)
+    $default  reduce using rule 362 (common_scalar)
 
 
 state 31
 
     5 namespace_name: T_STRING .
-   34 statement: T_STRING . ':'
+   43 statement: T_STRING . ':'
 
-    ':'  shift, and go to state 155
+    ':'  shift, and go to state 158
 
     $default  reduce using rule 5 (namespace_name)
 
 
 state 32
 
-  363 scalar: T_STRING_VARNAME .
+  382 scalar: T_STRING_VARNAME .
 
-    $default  reduce using rule 363 (scalar)
+    $default  reduce using rule 382 (scalar)
 
 
 state 33
 
-  408 compound_variable: T_VARIABLE .
+  427 compound_variable: T_VARIABLE .
 
-    $default  reduce using rule 408 (compound_variable)
+    $default  reduce using rule 427 (compound_variable)
 
 
 state 34
 
-   64 unticked_statement: T_INLINE_HTML .
+   73 unticked_statement: T_INLINE_HTML .
 
-    $default  reduce using rule 64 (unticked_statement)
+    $default  reduce using rule 73 (unticked_statement)
 
 
 state 35
 
-  344 common_scalar: T_CONSTANT_ENCAPSED_STRING .
+  363 common_scalar: T_CONSTANT_ENCAPSED_STRING .
 
-    $default  reduce using rule 344 (common_scalar)
+    $default  reduce using rule 363 (common_scalar)
 
 
 state 36
 
-   63 unticked_statement: T_ECHO . echo_expr_list ';'
+   72 unticked_statement: T_ECHO . echo_expr_list ';'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -2902,12 +2949,12 @@ state 36
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -2918,90 +2965,90 @@ state 36
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    echo_expr_list                     go to state 156
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 157
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    echo_expr_list                     go to state 159
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 160
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 37
 
-   47 unticked_statement: T_DO . @11 statement T_WHILE '(' @12 expr ')' ';'
+   56 unticked_statement: T_DO . @11 statement T_WHILE '(' @12 expr ')' ';'
 
-    $default  reduce using rule 45 (@11)
+    $default  reduce using rule 54 (@11)
 
-    @11  go to state 158
+    @11  go to state 161
 
 
 state 38
 
-   44 unticked_statement: T_WHILE . '(' @9 expr ')' @10 while_statement
+   53 unticked_statement: T_WHILE . '(' @9 expr ')' @10 while_statement
 
-    '('  shift, and go to state 159
+    '('  shift, and go to state 162
 
 
 state 39
 
-   51 unticked_statement: T_FOR . '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement
+   60 unticked_statement: T_FOR . '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement
 
-    '('  shift, and go to state 160
+    '('  shift, and go to state 163
 
 
 state 40
 
-   69 unticked_statement: T_FOREACH . '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
-   72                   | T_FOREACH . '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement
+   78 unticked_statement: T_FOREACH . '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
+   81                   | T_FOREACH . '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement
 
-    '('  shift, and go to state 161
+    '('  shift, and go to state 164
 
 
 state 41
 
-   74 unticked_statement: T_DECLARE . @21 '(' declare_list ')' declare_statement
+   83 unticked_statement: T_DECLARE . @21 '(' declare_list ')' declare_statement
 
-    $default  reduce using rule 73 (@21)
+    $default  reduce using rule 82 (@21)
 
-    @21  go to state 162
+    @21  go to state 165
 
 
 state 42
 
-   53 unticked_statement: T_SWITCH . '(' expr ')' @16 switch_case_list
+   62 unticked_statement: T_SWITCH . '(' expr ')' @16 switch_case_list
 
-    '('  shift, and go to state 163
+    '('  shift, and go to state 166
 
 
 state 43
 
-   54 unticked_statement: T_BREAK . ';'
-   55                   | T_BREAK . expr ';'
+   63 unticked_statement: T_BREAK . ';'
+   64                   | T_BREAK . expr ';'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -3028,12 +3075,12 @@ state 43
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -3044,43 +3091,43 @@ state 43
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 164
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 165
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 167
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 168
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 44
 
-   56 unticked_statement: T_CONTINUE . ';'
-   57                   | T_CONTINUE . expr ';'
+   65 unticked_statement: T_CONTINUE . ';'
+   66                   | T_CONTINUE . expr ';'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -3107,12 +3154,12 @@ state 44
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -3123,65 +3170,65 @@ state 44
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 166
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 167
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 169
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 170
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 45
 
-   83 unticked_statement: T_GOTO . T_STRING ';'
+   92 unticked_statement: T_GOTO . T_STRING ';'
 
-    T_STRING  shift, and go to state 168
+    T_STRING  shift, and go to state 171
 
 
 state 46
 
-  295 function: T_FUNCTION .
+  314 function: T_FUNCTION .
 
-    $default  reduce using rule 295 (function)
+    $default  reduce using rule 314 (function)
 
 
 state 47
 
-   25 constant_declaration: T_CONST . T_STRING '=' static_scalar
+   34 constant_declaration: T_CONST . T_STRING '=' static_scalar
 
-    T_STRING  shift, and go to state 169
+    T_STRING  shift, and go to state 172
 
 
 state 48
 
-   58 unticked_statement: T_RETURN . ';'
-   59                   | T_RETURN . expr_without_variable ';'
-   60                   | T_RETURN . variable ';'
+   67 unticked_statement: T_RETURN . ';'
+   68                   | T_RETURN . expr_without_variable ';'
+   69                   | T_RETURN . variable ';'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -3208,12 +3255,12 @@ state 48
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -3224,51 +3271,51 @@ state 48
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 170
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 171
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 172
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 173
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 173
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 174
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 175
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 176
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 49
 
-   81 unticked_statement: T_TRY . @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   90 unticked_statement: T_TRY . @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    $default  reduce using rule 76 (@22)
+    $default  reduce using rule 85 (@22)
 
-    @22  go to state 174
+    @22  go to state 177
 
 
 state 50
 
-   82 unticked_statement: T_THROW . expr ';'
+   91 unticked_statement: T_THROW . expr ';'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -3295,12 +3342,12 @@ state 50
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -3311,238 +3358,246 @@ state 50
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 175
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 178
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 51
 
-   16 top_statement: T_USE . use_declarations ';'
+   17 top_statement: T_USE . use_declarations ';'
 
-    T_STRING        shift, and go to state 111
-    T_NS_SEPARATOR  shift, and go to state 176
+    T_STRING        shift, and go to state 114
+    T_NS_SEPARATOR  shift, and go to state 179
 
-    namespace_name    go to state 177
-    use_declarations  go to state 178
-    use_declaration   go to state 179
+    namespace_name    go to state 180
+    use_declarations  go to state 181
+    use_declaration   go to state 182
 
 
 state 52
 
-   61 unticked_statement: T_GLOBAL . global_var_list ';'
+   70 unticked_statement: T_GLOBAL . global_var_list ';'
 
-    T_VARIABLE  shift, and go to state 180
-    '$'         shift, and go to state 181
+    T_VARIABLE  shift, and go to state 183
+    '$'         shift, and go to state 184
 
-    global_var_list  go to state 182
-    global_var       go to state 183
+    global_var_list  go to state 185
+    global_var       go to state 186
 
 
 state 53
 
-  106 class_entry_type: T_FINAL . T_CLASS
+  115 class_entry_type: T_FINAL . T_CLASS
 
-    T_CLASS  shift, and go to state 184
+    T_CLASS  shift, and go to state 187
 
 
 state 54
 
-  105 class_entry_type: T_ABSTRACT . T_CLASS
+  114 class_entry_type: T_ABSTRACT . T_CLASS
 
-    T_CLASS  shift, and go to state 185
+    T_CLASS  shift, and go to state 188
 
 
 state 55
 
-   62 unticked_statement: T_STATIC . static_var_list ';'
-  318 class_name: T_STATIC .
+   71 unticked_statement: T_STATIC . static_var_list ';'
+  337 class_name: T_STATIC .
 
-    T_VARIABLE  shift, and go to state 186
+    T_VARIABLE  shift, and go to state 189
 
-    $default  reduce using rule 318 (class_name)
+    $default  reduce using rule 337 (class_name)
 
-    static_var_list  go to state 187
+    static_var_list  go to state 190
 
 
 state 56
 
-   66 unticked_statement: T_UNSET . '(' unset_variables ')' ';'
+   75 unticked_statement: T_UNSET . '(' unset_variables ')' ';'
 
-    '('  shift, and go to state 188
+    '('  shift, and go to state 191
 
 
 state 57
 
-  452 internal_functions_in_yacc: T_ISSET . '(' isset_variables ')'
+  471 internal_functions_in_yacc: T_ISSET . '(' isset_variables ')'
 
-    '('  shift, and go to state 189
+    '('  shift, and go to state 192
 
 
 state 58
 
-  453 internal_functions_in_yacc: T_EMPTY . '(' variable ')'
+  472 internal_functions_in_yacc: T_EMPTY . '(' variable ')'
 
-    '('  shift, and go to state 190
+    '('  shift, and go to state 193
 
 
 state 59
 
-   10 top_statement: T_HALT_COMPILER . '(' ')' ';'
+   11 top_statement: T_HALT_COMPILER . '(' ')' ';'
 
-    '('  shift, and go to state 191
+    '('  shift, and go to state 194
 
 
 state 60
 
-  104 class_entry_type: T_CLASS .
+  113 class_entry_type: T_CLASS .
 
-    $default  reduce using rule 104 (class_entry_type)
+    $default  reduce using rule 113 (class_entry_type)
 
 
 state 61
 
-  109 interface_entry: T_INTERFACE .
+  118 interface_entry: T_INTERFACE .
 
-    $default  reduce using rule 109 (interface_entry)
+    $default  reduce using rule 118 (interface_entry)
 
 
 state 62
 
-  216 expr_without_variable: T_LIST . '(' @39 assignment_list ')' '=' expr
+  235 expr_without_variable: T_LIST . '(' @41 assignment_list ')' '=' expr
 
-    '('  shift, and go to state 192
+    '('  shift, and go to state 195
 
 
 state 63
 
-  290 expr_without_variable: T_ARRAY . '(' array_pair_list ')'
+  309 expr_without_variable: T_ARRAY . '(' array_pair_list ')'
 
-    '('  shift, and go to state 193
+    '('  shift, and go to state 196
 
 
 state 64
 
-  348 common_scalar: T_CLASS_C .
+  367 common_scalar: T_CLASS_C .
 
-    $default  reduce using rule 348 (common_scalar)
+    $default  reduce using rule 367 (common_scalar)
 
 
 state 65
 
-  349 common_scalar: T_METHOD_C .
+  368 common_scalar: T_METHOD_C .
 
-    $default  reduce using rule 349 (common_scalar)
+    $default  reduce using rule 368 (common_scalar)
 
 
 state 66
 
-  350 common_scalar: T_FUNC_C .
+  369 common_scalar: T_FUNC_C .
 
-    $default  reduce using rule 350 (common_scalar)
+    $default  reduce using rule 369 (common_scalar)
 
 
 state 67
 
-  345 common_scalar: T_LINE .
+  364 common_scalar: T_LINE .
 
-    $default  reduce using rule 345 (common_scalar)
+    $default  reduce using rule 364 (common_scalar)
 
 
 state 68
 
-  346 common_scalar: T_FILE .
+  365 common_scalar: T_FILE .
 
-    $default  reduce using rule 346 (common_scalar)
+    $default  reduce using rule 365 (common_scalar)
 
 
 state 69
 
-  352 common_scalar: T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC
-  353              | T_START_HEREDOC . T_END_HEREDOC
-  370 scalar: T_START_HEREDOC . encaps_list T_END_HEREDOC
+  371 common_scalar: T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC
+  372              | T_START_HEREDOC . T_END_HEREDOC
+  389 scalar: T_START_HEREDOC . encaps_list T_END_HEREDOC
 
-    T_VARIABLE                  shift, and go to state 194
-    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 195
-    T_END_HEREDOC               shift, and go to state 196
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
+    T_VARIABLE                  shift, and go to state 197
+    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 198
+    T_END_HEREDOC               shift, and go to state 199
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
 
-    encaps_list  go to state 199
-    encaps_var   go to state 200
+    encaps_list  go to state 202
+    encaps_var   go to state 203
 
 
 state 70
 
-   11 top_statement: T_NAMESPACE . namespace_name ';'
-   13              | T_NAMESPACE . namespace_name '{' @2 top_statement_list '}'
-   15              | T_NAMESPACE . '{' @3 top_statement_list '}'
-  305 function_call: T_NAMESPACE . T_NS_SEPARATOR namespace_name '(' @52 function_call_parameter_list ')'
-  320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
-  366 scalar: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+   12 top_statement: T_NAMESPACE . namespace_name ';'
+   14              | T_NAMESPACE . namespace_name '{' @2 top_statement_list '}'
+   16              | T_NAMESPACE . '{' @3 top_statement_list '}'
+  324 function_call: T_NAMESPACE . T_NS_SEPARATOR namespace_name '(' @54 function_call_parameter_list ')'
+  339 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+  385 scalar: T_NAMESPACE . T_NS_SEPARATOR namespace_name
 
-    T_STRING        shift, and go to state 111
-    T_NS_SEPARATOR  shift, and go to state 201
-    '{'             shift, and go to state 202
+    T_STRING        shift, and go to state 114
+    T_NS_SEPARATOR  shift, and go to state 204
+    '{'             shift, and go to state 205
 
-    namespace_name  go to state 203
+    namespace_name  go to state 206
 
 
 state 71
 
-  351 common_scalar: T_NS_C .
+  370 common_scalar: T_NS_C .
 
-    $default  reduce using rule 351 (common_scalar)
+    $default  reduce using rule 370 (common_scalar)
 
 
 state 72
 
-  347 common_scalar: T_DIR .
+  366 common_scalar: T_DIR .
 
-    $default  reduce using rule 347 (common_scalar)
+    $default  reduce using rule 366 (common_scalar)
 
 
 state 73
 
-  307 function_call: T_NS_SEPARATOR . namespace_name '(' @53 function_call_parameter_list ')'
-  321 class_name: T_NS_SEPARATOR . namespace_name
-  367 scalar: T_NS_SEPARATOR . namespace_name
+  326 function_call: T_NS_SEPARATOR . namespace_name '(' @55 function_call_parameter_list ')'
+  340 class_name: T_NS_SEPARATOR . namespace_name
+  386 scalar: T_NS_SEPARATOR . namespace_name
 
-    T_STRING  shift, and go to state 111
+    T_STRING  shift, and go to state 114
 
-    namespace_name  go to state 204
+    namespace_name  go to state 207
 
 
 state 74
 
-  272 expr_without_variable: '(' . expr ')'
+   21 annotation: T_ANNOTATION . T_STRING
+   22           | T_ANNOTATION . T_STRING '(' annotation_args ')'
+
+    T_STRING  shift, and go to state 208
+
+
+state 75
+
+  291 expr_without_variable: '(' . expr ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -3569,12 +3624,12 @@ state 74
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -3585,592 +3640,617 @@ state 74
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 205
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
-
-
-state 75
-
-   75 unticked_statement: ';' .
-
-    $default  reduce using rule 75 (unticked_statement)
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 209
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 76
 
-   35 unticked_statement: '{' . inner_statement_list '}'
-
-    $default  reduce using rule 28 (inner_statement_list)
+   84 unticked_statement: ';' .
 
-    inner_statement_list  go to state 206
+    $default  reduce using rule 84 (unticked_statement)
 
 
 state 77
 
-  409 compound_variable: '$' . '{' expr '}'
-  420 simple_indirect_reference: '$' .
+   44 unticked_statement: '{' . inner_statement_list '}'
 
-    '{'  shift, and go to state 207
+    $default  reduce using rule 37 (inner_statement_list)
 
-    $default  reduce using rule 420 (simple_indirect_reference)
+    inner_statement_list  go to state 210
 
 
 state 78
 
-  291 expr_without_variable: '`' . backticks_expr '`'
+  428 compound_variable: '$' . '{' expr '}'
+  439 simple_indirect_reference: '$' .
 
-    T_VARIABLE                  shift, and go to state 194
-    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 208
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
+    '{'  shift, and go to state 211
 
-    $default  reduce using rule 337 (backticks_expr)
-
-    backticks_expr  go to state 209
-    encaps_list     go to state 210
-    encaps_var      go to state 200
+    $default  reduce using rule 439 (simple_indirect_reference)
 
 
 state 79
 
-  369 scalar: '"' . encaps_list '"'
+  310 expr_without_variable: '`' . backticks_expr '`'
+
+    T_VARIABLE                  shift, and go to state 197
+    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 212
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
 
-    T_VARIABLE                  shift, and go to state 194
-    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 211
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
+    $default  reduce using rule 356 (backticks_expr)
 
-    encaps_list  go to state 212
-    encaps_var   go to state 200
+    backticks_expr  go to state 213
+    encaps_list     go to state 214
+    encaps_var      go to state 203
 
 
 state 80
 
-    6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  303 function_call: namespace_name . '(' @51 function_call_parameter_list ')'
-  319 class_name: namespace_name .
-  365 scalar: namespace_name .
+  388 scalar: '"' . encaps_list '"'
 
-    T_NS_SEPARATOR  shift, and go to state 213
-    '('             shift, and go to state 214
+    T_VARIABLE                  shift, and go to state 197
+    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 215
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
 
-    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 319 (class_name)
-    $default                reduce using rule 365 (scalar)
+    encaps_list  go to state 216
+    encaps_var   go to state 203
 
 
 state 81
 
-    3 top_statement_list: top_statement_list @1 top_statement .
+    6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
+  322 function_call: namespace_name . '(' @53 function_call_parameter_list ')'
+  338 class_name: namespace_name .
+  384 scalar: namespace_name .
 
-    $default  reduce using rule 3 (top_statement_list)
+    T_NS_SEPARATOR  shift, and go to state 217
+    '('             shift, and go to state 218
+
+    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 338 (class_name)
+    $default                reduce using rule 384 (scalar)
 
 
 state 82
 
-   17 top_statement: constant_declaration . ';'
-   24 constant_declaration: constant_declaration . ',' T_STRING '=' static_scalar
+    3 top_statement_list: top_statement_list @1 top_statement .
 
-    ','  shift, and go to state 215
-    ';'  shift, and go to state 216
+    $default  reduce using rule 3 (top_statement_list)
 
 
 state 83
 
-    7 top_statement: statement .
+    9 top_statement: annotations . class_declaration_statement
+   19 annotations: annotations . annotation
 
-    $default  reduce using rule 7 (top_statement)
+    T_FINAL       shift, and go to state 53
+    T_ABSTRACT    shift, and go to state 54
+    T_CLASS       shift, and go to state 60
+    T_INTERFACE   shift, and go to state 61
+    T_ANNOTATION  shift, and go to state 74
+
+    annotation                            go to state 219
+    class_declaration_statement           go to state 220
+    unticked_class_declaration_statement  go to state 91
+    class_entry_type                      go to state 92
+    interface_entry                       go to state 93
 
 
 state 84
 
-   33 statement: unticked_statement .
+   20 annotations: annotation .
 
-    $default  reduce using rule 33 (statement)
+    $default  reduce using rule 20 (annotations)
 
 
 state 85
 
-    8 top_statement: function_declaration_statement .
+   18 top_statement: constant_declaration . ';'
+   33 constant_declaration: constant_declaration . ',' T_STRING '=' static_scalar
 
-    $default  reduce using rule 8 (top_statement)
+    ','  shift, and go to state 221
+    ';'  shift, and go to state 222
 
 
 state 86
 
-    9 top_statement: class_declaration_statement .
+    7 top_statement: statement .
 
-    $default  reduce using rule 9 (top_statement)
+    $default  reduce using rule 7 (top_statement)
 
 
 state 87
 
-   94 function_declaration_statement: unticked_function_declaration_statement .
+   42 statement: unticked_statement .
 
-    $default  reduce using rule 94 (function_declaration_statement)
+    $default  reduce using rule 42 (statement)
 
 
 state 88
 
-   95 class_declaration_statement: unticked_class_declaration_statement .
+    8 top_statement: function_declaration_statement .
 
-    $default  reduce using rule 95 (class_declaration_statement)
+    $default  reduce using rule 8 (top_statement)
 
 
 state 89
 
-  101 unticked_class_declaration_statement: class_entry_type . T_STRING extends_from @30 implements_list '{' class_statement_list '}'
+   10 top_statement: class_declaration_statement .
 
-    T_STRING  shift, and go to state 217
+    $default  reduce using rule 10 (top_statement)
 
 
 state 90
 
-  103 unticked_class_declaration_statement: interface_entry . T_STRING @31 interface_extends_list '{' class_statement_list '}'
+  103 function_declaration_statement: unticked_function_declaration_statement .
 
-    T_STRING  shift, and go to state 218
+    $default  reduce using rule 103 (function_declaration_statement)
 
 
 state 91
 
-  380 expr: expr_without_variable .
+  104 class_declaration_statement: unticked_class_declaration_statement .
 
-    $default  reduce using rule 380 (expr)
+    $default  reduce using rule 104 (class_declaration_statement)
 
 
 state 92
 
-   99 unticked_function_declaration_statement: function . is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'
-  294 expr_without_variable: function . is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
-
-    '&'  shift, and go to state 219
-
-    $default  reduce using rule 96 (is_reference)
+  110 unticked_class_declaration_statement: class_entry_type . T_STRING extends_from @30 implements_list '{' class_statement_list '}'
 
-    is_reference  go to state 220
+    T_STRING  shift, and go to state 223
 
 
 state 93
 
-  401 base_variable_with_function_calls: function_call .
+  112 unticked_class_declaration_statement: interface_entry . T_STRING @31 interface_extends_list '{' class_statement_list '}'
 
-    $default  reduce using rule 401 (base_variable_with_function_calls)
+    T_STRING  shift, and go to state 224
 
 
 state 94
 
-  309 function_call: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @54 function_call_parameter_list ')'
-  311              | class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @55 function_call_parameter_list ')'
-  397 static_member: class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
-  462 class_constant: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING
+  399 expr: expr_without_variable .
 
-    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 221
+    $default  reduce using rule 399 (expr)
 
 
 state 95
 
-  368 scalar: common_scalar .
+  108 unticked_function_declaration_statement: function . is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'
+  313 expr_without_variable: function . is_reference '(' @52 parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
-    $default  reduce using rule 368 (scalar)
+    '&'  shift, and go to state 225
+
+    $default  reduce using rule 105 (is_reference)
+
+    is_reference  go to state 226
 
 
 state 96
 
-  289 expr_without_variable: scalar .
+  420 base_variable_with_function_calls: function_call .
 
-    $default  reduce using rule 289 (expr_without_variable)
+    $default  reduce using rule 420 (base_variable_with_function_calls)
 
 
 state 97
 
-   65 unticked_statement: expr . ';'
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ';'                    shift, and go to state 248
+  328 function_call: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list ')'
+  330              | class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list ')'
+  416 static_member: class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
+  481 class_constant: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING
+
+    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 227
 
 
 state 98
 
-  379 expr: r_variable .
+  387 scalar: common_scalar .
 
-    $default  reduce using rule 379 (expr)
+    $default  reduce using rule 387 (scalar)
 
 
 state 99
 
-  235 expr_without_variable: rw_variable . T_INC
-  237                      | rw_variable . T_DEC
+  308 expr_without_variable: scalar .
 
-    T_DEC  shift, and go to state 249
-    T_INC  shift, and go to state 250
+    $default  reduce using rule 308 (expr_without_variable)
 
 
 state 100
 
-  217 expr_without_variable: variable . '=' expr
-  218                      | variable . '=' '&' variable
-  220                      | variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments
-  224                      | variable . T_PLUS_EQUAL expr
-  225                      | variable . T_MINUS_EQUAL expr
-  226                      | variable . T_MUL_EQUAL expr
-  227                      | variable . T_DIV_EQUAL expr
-  228                      | variable . T_CONCAT_EQUAL expr
-  229                      | variable . T_MOD_EQUAL expr
-  230                      | variable . T_AND_EQUAL expr
-  231                      | variable . T_OR_EQUAL expr
-  232                      | variable . T_XOR_EQUAL expr
-  233                      | variable . T_SL_EQUAL expr
-  234                      | variable . T_SR_EQUAL expr
-  381 r_variable: variable .
-  383 rw_variable: variable .
-
-    '='             shift, and go to state 251
-    T_SR_EQUAL      shift, and go to state 252
-    T_SL_EQUAL      shift, and go to state 253
-    T_XOR_EQUAL     shift, and go to state 254
-    T_OR_EQUAL      shift, and go to state 255
-    T_AND_EQUAL     shift, and go to state 256
-    T_MOD_EQUAL     shift, and go to state 257
-    T_CONCAT_EQUAL  shift, and go to state 258
-    T_DIV_EQUAL     shift, and go to state 259
-    T_MUL_EQUAL     shift, and go to state 260
-    T_MINUS_EQUAL   shift, and go to state 261
-    T_PLUS_EQUAL    shift, and go to state 262
-
-    T_DEC     reduce using rule 383 (rw_variable)
-    T_INC     reduce using rule 383 (rw_variable)
-    $default  reduce using rule 381 (r_variable)
+   74 unticked_statement: expr . ';'
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ';'                    shift, and go to state 254
 
 
 state 101
 
-  317 function_call: variable_without_objects . '(' @58 function_call_parameter_list ')'
+  398 expr: r_variable .
 
-    '('  shift, and go to state 263
+    $default  reduce using rule 398 (expr)
 
 
 state 102
 
-  404 base_variable: static_member .
+  254 expr_without_variable: rw_variable . T_INC
+  256                      | rw_variable . T_DEC
 
-    $default  reduce using rule 404 (base_variable)
+    T_DEC  shift, and go to state 255
+    T_INC  shift, and go to state 256
 
 
 state 103
 
-  313 function_call: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list ')'
-  315              | variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list ')'
-  398 static_member: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
-  463 class_constant: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING
-
-    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 264
+  236 expr_without_variable: variable . '=' expr
+  237                      | variable . '=' '&' variable
+  239                      | variable . '=' '&' T_NEW class_name_reference @42 ctor_arguments
+  243                      | variable . T_PLUS_EQUAL expr
+  244                      | variable . T_MINUS_EQUAL expr
+  245                      | variable . T_MUL_EQUAL expr
+  246                      | variable . T_DIV_EQUAL expr
+  247                      | variable . T_CONCAT_EQUAL expr
+  248                      | variable . T_MOD_EQUAL expr
+  249                      | variable . T_AND_EQUAL expr
+  250                      | variable . T_OR_EQUAL expr
+  251                      | variable . T_XOR_EQUAL expr
+  252                      | variable . T_SL_EQUAL expr
+  253                      | variable . T_SR_EQUAL expr
+  400 r_variable: variable .
+  402 rw_variable: variable .
+
+    '='             shift, and go to state 257
+    T_SR_EQUAL      shift, and go to state 258
+    T_SL_EQUAL      shift, and go to state 259
+    T_XOR_EQUAL     shift, and go to state 260
+    T_OR_EQUAL      shift, and go to state 261
+    T_AND_EQUAL     shift, and go to state 262
+    T_MOD_EQUAL     shift, and go to state 263
+    T_CONCAT_EQUAL  shift, and go to state 264
+    T_DIV_EQUAL     shift, and go to state 265
+    T_MUL_EQUAL     shift, and go to state 266
+    T_MINUS_EQUAL   shift, and go to state 267
+    T_PLUS_EQUAL    shift, and go to state 268
+
+    T_DEC     reduce using rule 402 (rw_variable)
+    T_INC     reduce using rule 402 (rw_variable)
+    $default  reduce using rule 400 (r_variable)
 
 
 state 104
 
-  386 variable: base_variable_with_function_calls . T_OBJECT_OPERATOR @61 object_property @62 method_or_not variable_properties
-  387         | base_variable_with_function_calls .
-
-    T_OBJECT_OPERATOR  shift, and go to state 265
+  336 function_call: variable_without_objects . '(' @60 function_call_parameter_list ')'
 
-    $default  reduce using rule 387 (variable)
+    '('  shift, and go to state 269
 
 
 state 105
 
-  400 base_variable_with_function_calls: base_variable .
+  423 base_variable: static_member .
 
-    $default  reduce using rule 400 (base_variable_with_function_calls)
+    $default  reduce using rule 423 (base_variable)
 
 
 state 106
 
-  395 variable_without_objects: reference_variable .
-  399 variable_class_name: reference_variable .
-  402 base_variable: reference_variable .
-  405 reference_variable: reference_variable . '[' dim_offset ']'
-  406                   | reference_variable . '{' expr '}'
+  332 function_call: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @58 function_call_parameter_list ')'
+  334              | variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @59 function_call_parameter_list ')'
+  417 static_member: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
+  482 class_constant: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING
 
-    '['  shift, and go to state 266
-    '{'  shift, and go to state 267
-
-    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 399 (variable_class_name)
-    '('                     reduce using rule 395 (variable_without_objects)
-    $default                reduce using rule 402 (base_variable)
+    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 270
 
 
 state 107
 
-  407 reference_variable: compound_variable .
+  405 variable: base_variable_with_function_calls . T_OBJECT_OPERATOR @63 object_property @64 method_or_not variable_properties
+  406         | base_variable_with_function_calls .
 
-    $default  reduce using rule 407 (reference_variable)
+    T_OBJECT_OPERATOR  shift, and go to state 271
 
+    $default  reduce using rule 406 (variable)
 
-state 108
 
-  396 variable_without_objects: simple_indirect_reference . reference_variable
-  403 base_variable: simple_indirect_reference . reference_variable
-  421 simple_indirect_reference: simple_indirect_reference . '$'
+state 108
 
-    T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 268
+  419 base_variable_with_function_calls: base_variable .
 
-    reference_variable  go to state 269
-    compound_variable   go to state 107
+    $default  reduce using rule 419 (base_variable_with_function_calls)
 
 
 state 109
 
-  278 expr_without_variable: internal_functions_in_yacc .
+  414 variable_without_objects: reference_variable .
+  418 variable_class_name: reference_variable .
+  421 base_variable: reference_variable .
+  424 reference_variable: reference_variable . '[' dim_offset ']'
+  425                   | reference_variable . '{' expr '}'
 
-    $default  reduce using rule 278 (expr_without_variable)
+    '['  shift, and go to state 272
+    '{'  shift, and go to state 273
+
+    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 418 (variable_class_name)
+    '('                     reduce using rule 414 (variable_without_objects)
+    $default                reduce using rule 421 (base_variable)
 
 
 state 110
 
-  364 scalar: class_constant .
+  426 reference_variable: compound_variable .
 
-    $default  reduce using rule 364 (scalar)
+    $default  reduce using rule 426 (reference_variable)
 
 
 state 111
 
-    5 namespace_name: T_STRING .
+  415 variable_without_objects: simple_indirect_reference . reference_variable
+  422 base_variable: simple_indirect_reference . reference_variable
+  440 simple_indirect_reference: simple_indirect_reference . '$'
 
-    $default  reduce using rule 5 (namespace_name)
+    T_VARIABLE  shift, and go to state 33
+    '$'         shift, and go to state 274
+
+    reference_variable  go to state 275
+    compound_variable   go to state 110
 
 
 state 112
 
-  318 class_name: T_STATIC .
+  297 expr_without_variable: internal_functions_in_yacc .
 
-    $default  reduce using rule 318 (class_name)
+    $default  reduce using rule 297 (expr_without_variable)
 
 
 state 113
 
-  305 function_call: T_NAMESPACE . T_NS_SEPARATOR namespace_name '(' @52 function_call_parameter_list ')'
-  320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
-  366 scalar: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+  383 scalar: class_constant .
 
-    T_NS_SEPARATOR  shift, and go to state 201
+    $default  reduce using rule 383 (scalar)
 
 
 state 114
 
-  294 expr_without_variable: function . is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
-
-    '&'  shift, and go to state 219
-
-    $default  reduce using rule 96 (is_reference)
+    5 namespace_name: T_STRING .
 
-    is_reference  go to state 270
+    $default  reduce using rule 5 (namespace_name)
 
 
 state 115
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  458 internal_functions_in_yacc: T_REQUIRE_ONCE expr .
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 458 (internal_functions_in_yacc)
+  337 class_name: T_STATIC .
+
+    $default  reduce using rule 337 (class_name)
 
 
 state 116
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  457 internal_functions_in_yacc: T_REQUIRE expr .
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 457 (internal_functions_in_yacc)
+  324 function_call: T_NAMESPACE . T_NS_SEPARATOR namespace_name '(' @54 function_call_parameter_list ')'
+  339 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+  385 scalar: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+
+    T_NS_SEPARATOR  shift, and go to state 204
 
 
 state 117
 
-  456 internal_functions_in_yacc: T_EVAL '(' . expr ')'
+  313 expr_without_variable: function . is_reference '(' @52 parameter_list ')' lexical_vars '{' inner_statement_list '}'
+
+    '&'  shift, and go to state 225
+
+    $default  reduce using rule 105 (is_reference)
+
+    is_reference  go to state 276
+
+
+state 118
+
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  477 internal_functions_in_yacc: T_REQUIRE_ONCE expr .
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 477 (internal_functions_in_yacc)
+
+
+state 119
+
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  476 internal_functions_in_yacc: T_REQUIRE expr .
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 476 (internal_functions_in_yacc)
+
+
+state 120
+
+  475 internal_functions_in_yacc: T_EVAL '(' . expr ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -4197,12 +4277,12 @@ state 117
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -4213,359 +4293,359 @@ state 117
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 271
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 277
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 118
+state 121
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  455 internal_functions_in_yacc: T_INCLUDE_ONCE expr .
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 455 (internal_functions_in_yacc)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  474 internal_functions_in_yacc: T_INCLUDE_ONCE expr .
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 474 (internal_functions_in_yacc)
 
 
-state 119
+state 122
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  454 internal_functions_in_yacc: T_INCLUDE expr .
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 454 (internal_functions_in_yacc)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  473 internal_functions_in_yacc: T_INCLUDE expr .
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 473 (internal_functions_in_yacc)
 
 
-state 120
+state 123
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  292                      | T_PRINT expr .
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 292 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  311                      | T_PRINT expr .
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 311 (expr_without_variable)
 
 
-state 121
+state 124
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  259                      | '+' expr .
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  278                      | '+' expr .
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
 
-    $default  reduce using rule 259 (expr_without_variable)
+    $default  reduce using rule 278 (expr_without_variable)
 
 
-state 122
+state 125
+
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  279                      | '-' expr .
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  260                      | '-' expr .
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    $default  reduce using rule 260 (expr_without_variable)
+    $default  reduce using rule 279 (expr_without_variable)
 
 
-state 123
+state 126
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  261                      | '!' expr .
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  280                      | '!' expr .
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_INSTANCEOF  shift, and go to state 253
 
-    $default  reduce using rule 261 (expr_without_variable)
+    $default  reduce using rule 280 (expr_without_variable)
 
 
-state 124
+state 127
+
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  281                      | '~' expr .
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  262                      | '~' expr .
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    $default  reduce using rule 262 (expr_without_variable)
+    $default  reduce using rule 281 (expr_without_variable)
 
 
-state 125
+state 128
 
-  288 expr_without_variable: '@' @49 . expr
+  307 expr_without_variable: '@' @51 . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -4592,12 +4672,12 @@ state 125
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -4608,478 +4688,478 @@ state 125
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 272
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
-
-
-state 126
-
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  285                      | T_UNSET_CAST expr .
-
-    $default  reduce using rule 285 (expr_without_variable)
-
-
-state 127
-
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  284                      | T_BOOL_CAST expr .
-
-    $default  reduce using rule 284 (expr_without_variable)
-
-
-state 128
-
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  283                      | T_OBJECT_CAST expr .
-
-    $default  reduce using rule 283 (expr_without_variable)
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 278
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 129
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  282                      | T_ARRAY_CAST expr .
-
-    $default  reduce using rule 282 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  304                      | T_UNSET_CAST expr .
+
+    $default  reduce using rule 304 (expr_without_variable)
 
 
 state 130
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  281                      | T_STRING_CAST expr .
-
-    $default  reduce using rule 281 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  303                      | T_BOOL_CAST expr .
+
+    $default  reduce using rule 303 (expr_without_variable)
 
 
 state 131
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  280                      | T_DOUBLE_CAST expr .
-
-    $default  reduce using rule 280 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  302                      | T_OBJECT_CAST expr .
+
+    $default  reduce using rule 302 (expr_without_variable)
 
 
 state 132
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  279                      | T_INT_CAST expr .
-
-    $default  reduce using rule 279 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  301                      | T_ARRAY_CAST expr .
+
+    $default  reduce using rule 301 (expr_without_variable)
 
 
 state 133
 
-  305 function_call: T_NAMESPACE . T_NS_SEPARATOR namespace_name '(' @52 function_call_parameter_list ')'
-  320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
-
-    T_NS_SEPARATOR  shift, and go to state 273
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  300                      | T_STRING_CAST expr .
+
+    $default  reduce using rule 300 (expr_without_variable)
 
 
 state 134
 
-  307 function_call: T_NS_SEPARATOR . namespace_name '(' @53 function_call_parameter_list ')'
-  321 class_name: T_NS_SEPARATOR . namespace_name
-
-    T_STRING  shift, and go to state 111
-
-    namespace_name  go to state 274
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  299                      | T_DOUBLE_CAST expr .
+
+    $default  reduce using rule 299 (expr_without_variable)
 
 
 state 135
 
-    6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  303 function_call: namespace_name . '(' @51 function_call_parameter_list ')'
-  319 class_name: namespace_name .
-
-    T_NS_SEPARATOR  shift, and go to state 213
-    '('             shift, and go to state 214
-
-    $default  reduce using rule 319 (class_name)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  298                      | T_INT_CAST expr .
+
+    $default  reduce using rule 298 (expr_without_variable)
 
 
 state 136
 
-  309 function_call: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @54 function_call_parameter_list ')'
-  311              | class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @55 function_call_parameter_list ')'
-  397 static_member: class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
+  324 function_call: T_NAMESPACE . T_NS_SEPARATOR namespace_name '(' @54 function_call_parameter_list ')'
+  339 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
 
-    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 275
+    T_NS_SEPARATOR  shift, and go to state 279
 
 
 state 137
 
-  238 expr_without_variable: T_DEC rw_variable .
+  326 function_call: T_NS_SEPARATOR . namespace_name '(' @55 function_call_parameter_list ')'
+  340 class_name: T_NS_SEPARATOR . namespace_name
+
+    T_STRING  shift, and go to state 114
 
-    $default  reduce using rule 238 (expr_without_variable)
+    namespace_name  go to state 280
 
 
 state 138
 
-  383 rw_variable: variable .
+    6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
+  322 function_call: namespace_name . '(' @53 function_call_parameter_list ')'
+  338 class_name: namespace_name .
+
+    T_NS_SEPARATOR  shift, and go to state 217
+    '('             shift, and go to state 218
 
-    $default  reduce using rule 383 (rw_variable)
+    $default  reduce using rule 338 (class_name)
 
 
 state 139
 
-  313 function_call: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list ')'
-  315              | variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list ')'
-  398 static_member: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
+  328 function_call: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list ')'
+  330              | class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list ')'
+  416 static_member: class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
 
-    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 276
+    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 281
 
 
 state 140
 
-  236 expr_without_variable: T_INC rw_variable .
+  257 expr_without_variable: T_DEC rw_variable .
 
-    $default  reduce using rule 236 (expr_without_variable)
+    $default  reduce using rule 257 (expr_without_variable)
 
 
 state 141
 
-  223 expr_without_variable: T_CLONE expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    $default  reduce using rule 223 (expr_without_variable)
+  402 rw_variable: variable .
+
+    $default  reduce using rule 402 (rw_variable)
 
 
 state 142
 
-  320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+  332 function_call: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @58 function_call_parameter_list ')'
+  334              | variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @59 function_call_parameter_list ')'
+  417 static_member: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
 
-    T_NS_SEPARATOR  shift, and go to state 277
+    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 282
 
 
 state 143
 
-  321 class_name: T_NS_SEPARATOR . namespace_name
+  255 expr_without_variable: T_INC rw_variable .
 
-    T_STRING  shift, and go to state 111
-
-    namespace_name  go to state 278
+    $default  reduce using rule 255 (expr_without_variable)
 
 
 state 144
 
-    6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  319 class_name: namespace_name .
-
-    T_NS_SEPARATOR  shift, and go to state 213
+  242 expr_without_variable: T_CLONE expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
 
-    $default  reduce using rule 319 (class_name)
+    $default  reduce using rule 242 (expr_without_variable)
 
 
 state 145
 
-  325 class_name_reference: class_name .
-  397 static_member: class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
-
-    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 279
+  339 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
 
-    $default  reduce using rule 325 (class_name_reference)
+    T_NS_SEPARATOR  shift, and go to state 283
 
 
 state 146
 
-  222 expr_without_variable: T_NEW class_name_reference . @41 ctor_arguments
+  340 class_name: T_NS_SEPARATOR . namespace_name
 
-    $default  reduce using rule 221 (@41)
+    T_STRING  shift, and go to state 114
 
-    @41  go to state 280
+    namespace_name  go to state 284
 
 
 state 147
 
-  326 class_name_reference: dynamic_class_name_reference .
+    6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
+  338 class_name: namespace_name .
+
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    $default  reduce using rule 326 (class_name_reference)
+    $default  reduce using rule 338 (class_name)
 
 
 state 148
 
-  398 static_member: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
+  344 class_name_reference: class_name .
+  416 static_member: class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
 
-    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 281
+    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 285
+
+    $default  reduce using rule 344 (class_name_reference)
 
 
 state 149
 
-  329 dynamic_class_name_reference: base_variable . T_OBJECT_OPERATOR @59 object_property @60 dynamic_class_name_variable_properties
-  330                             | base_variable .
+  241 expr_without_variable: T_NEW class_name_reference . @43 ctor_arguments
 
-    T_OBJECT_OPERATOR  shift, and go to state 282
+    $default  reduce using rule 240 (@43)
 
-    $default  reduce using rule 330 (dynamic_class_name_reference)
+    @43  go to state 286
 
 
 state 150
 
-  399 variable_class_name: reference_variable .
-  402 base_variable: reference_variable .
-  405 reference_variable: reference_variable . '[' dim_offset ']'
-  406                   | reference_variable . '{' expr '}'
+  345 class_name_reference: dynamic_class_name_reference .
 
-    '['  shift, and go to state 266
-    '{'  shift, and go to state 267
-
-    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 399 (variable_class_name)
-    $default                reduce using rule 402 (base_variable)
+    $default  reduce using rule 345 (class_name_reference)
 
 
 state 151
 
-  403 base_variable: simple_indirect_reference . reference_variable
-  421 simple_indirect_reference: simple_indirect_reference . '$'
+  417 static_member: variable_class_name . T_PAAMAYIM_NEKUDOTAYIM variable_without_objects
+
+    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 287
+
+
+state 152
+
+  348 dynamic_class_name_reference: base_variable . T_OBJECT_OPERATOR @61 object_property @62 dynamic_class_name_variable_properties
+  349                             | base_variable .
+
+    T_OBJECT_OPERATOR  shift, and go to state 288
+
+    $default  reduce using rule 349 (dynamic_class_name_reference)
+
+
+state 153
+
+  418 variable_class_name: reference_variable .
+  421 base_variable: reference_variable .
+  424 reference_variable: reference_variable . '[' dim_offset ']'
+  425                   | reference_variable . '{' expr '}'
+
+    '['  shift, and go to state 272
+    '{'  shift, and go to state 273
+
+    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 418 (variable_class_name)
+    $default                reduce using rule 421 (base_variable)
+
+
+state 154
+
+  422 base_variable: simple_indirect_reference . reference_variable
+  440 simple_indirect_reference: simple_indirect_reference . '$'
 
     T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 268
+    '$'         shift, and go to state 274
 
-    reference_variable  go to state 283
-    compound_variable   go to state 107
+    reference_variable  go to state 289
+    compound_variable   go to state 110
 
 
-state 152
+state 155
 
-  335 exit_expr: '(' . ')'
-  336          | '(' . expr ')'
+  354 exit_expr: '(' . ')'
+  355          | '(' . expr ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -5106,12 +5186,12 @@ state 152
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -5122,50 +5202,50 @@ state 152
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ')'                         shift, and go to state 284
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 285
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ')'                         shift, and go to state 290
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 291
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 153
+state 156
 
-  286 expr_without_variable: T_EXIT exit_expr .
+  305 expr_without_variable: T_EXIT exit_expr .
 
-    $default  reduce using rule 286 (expr_without_variable)
+    $default  reduce using rule 305 (expr_without_variable)
 
 
-state 154
+state 157
 
-   38 unticked_statement: T_IF '(' . expr ')' @5 statement @6 elseif_list else_single
-   41                   | T_IF '(' . expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
+   47 unticked_statement: T_IF '(' . expr ')' @5 statement @6 elseif_list else_single
+   50                   | T_IF '(' . expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -5192,12 +5272,12 @@ state 154
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -5208,118 +5288,118 @@ state 154
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 286
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 292
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 155
+state 158
 
-   34 statement: T_STRING ':' .
+   43 statement: T_STRING ':' .
 
-    $default  reduce using rule 34 (statement)
+    $default  reduce using rule 43 (statement)
 
 
-state 156
+state 159
 
-   63 unticked_statement: T_ECHO echo_expr_list . ';'
-  208 echo_expr_list: echo_expr_list . ',' expr
+   72 unticked_statement: T_ECHO echo_expr_list . ';'
+  227 echo_expr_list: echo_expr_list . ',' expr
 
-    ','  shift, and go to state 287
-    ';'  shift, and go to state 288
+    ','  shift, and go to state 293
+    ';'  shift, and go to state 294
 
 
-state 157
+state 160
 
-  209 echo_expr_list: expr .
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 209 (echo_expr_list)
+  228 echo_expr_list: expr .
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 228 (echo_expr_list)
 
 
-state 158
+state 161
 
-   47 unticked_statement: T_DO @11 . statement T_WHILE '(' @12 expr ')' ';'
+   56 unticked_statement: T_DO @11 . statement T_WHILE '(' @12 expr ')' ';'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -5379,54 +5459,54 @@ state 158
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 289
-    unticked_statement                 go to state 84
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    statement                          go to state 295
+    unticked_statement                 go to state 87
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 159
+state 162
 
-   44 unticked_statement: T_WHILE '(' . @9 expr ')' @10 while_statement
+   53 unticked_statement: T_WHILE '(' . @9 expr ')' @10 while_statement
 
-    $default  reduce using rule 42 (@9)
+    $default  reduce using rule 51 (@9)
 
-    @9  go to state 290
+    @9  go to state 296
 
 
-state 160
+state 163
 
-   51 unticked_statement: T_FOR '(' . for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement
+   60 unticked_statement: T_FOR '(' . for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -5453,12 +5533,12 @@ state 160
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -5469,46 +5549,46 @@ state 160
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 210 (for_expr)
-
-    namespace_name                     go to state 80
-    for_expr                           go to state 291
-    non_empty_for_expr                 go to state 292
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 293
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 229 (for_expr)
+
+    namespace_name                     go to state 81
+    for_expr                           go to state 297
+    non_empty_for_expr                 go to state 298
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 299
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 161
+state 164
 
-   69 unticked_statement: T_FOREACH '(' . variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
-   72                   | T_FOREACH '(' . expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement
+   78 unticked_statement: T_FOREACH '(' . variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
+   81                   | T_FOREACH '(' . expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -5535,12 +5615,12 @@ state 161
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -5551,48 +5631,48 @@ state 161
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 294
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 172
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 295
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 300
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 175
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 301
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 162
+state 165
 
-   74 unticked_statement: T_DECLARE @21 . '(' declare_list ')' declare_statement
+   83 unticked_statement: T_DECLARE @21 . '(' declare_list ')' declare_statement
 
-    '('  shift, and go to state 296
+    '('  shift, and go to state 302
 
 
-state 163
+state 166
 
-   53 unticked_statement: T_SWITCH '(' . expr ')' @16 switch_case_list
+   62 unticked_statement: T_SWITCH '(' . expr ')' @16 switch_case_list
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -5619,12 +5699,12 @@ state 163
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -5635,587 +5715,587 @@ state 163
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 297
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
-
-
-state 164
-
-   54 unticked_statement: T_BREAK ';' .
-
-    $default  reduce using rule 54 (unticked_statement)
-
-
-state 165
-
-   55 unticked_statement: T_BREAK expr . ';'
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ';'                    shift, and go to state 298
-
-
-state 166
-
-   56 unticked_statement: T_CONTINUE ';' .
-
-    $default  reduce using rule 56 (unticked_statement)
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 303
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
 state 167
 
-   57 unticked_statement: T_CONTINUE expr . ';'
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ';'                    shift, and go to state 299
+   63 unticked_statement: T_BREAK ';' .
+
+    $default  reduce using rule 63 (unticked_statement)
 
 
 state 168
 
-   83 unticked_statement: T_GOTO T_STRING . ';'
-
-    ';'  shift, and go to state 300
+   64 unticked_statement: T_BREAK expr . ';'
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ';'                    shift, and go to state 304
 
 
 state 169
 
-   25 constant_declaration: T_CONST T_STRING . '=' static_scalar
+   65 unticked_statement: T_CONTINUE ';' .
 
-    '='  shift, and go to state 301
+    $default  reduce using rule 65 (unticked_statement)
 
 
 state 170
 
-   58 unticked_statement: T_RETURN ';' .
-
-    $default  reduce using rule 58 (unticked_statement)
+   66 unticked_statement: T_CONTINUE expr . ';'
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ';'                    shift, and go to state 305
 
 
 state 171
 
-   59 unticked_statement: T_RETURN expr_without_variable . ';'
-  380 expr: expr_without_variable .
-
-    ';'  shift, and go to state 302
+   92 unticked_statement: T_GOTO T_STRING . ';'
 
-    $default  reduce using rule 380 (expr)
+    ';'  shift, and go to state 306
 
 
 state 172
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+   34 constant_declaration: T_CONST T_STRING . '=' static_scalar
+
+    '='  shift, and go to state 307
 
 
 state 173
 
-   60 unticked_statement: T_RETURN variable . ';'
-  217 expr_without_variable: variable . '=' expr
-  218                      | variable . '=' '&' variable
-  220                      | variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments
-  224                      | variable . T_PLUS_EQUAL expr
-  225                      | variable . T_MINUS_EQUAL expr
-  226                      | variable . T_MUL_EQUAL expr
-  227                      | variable . T_DIV_EQUAL expr
-  228                      | variable . T_CONCAT_EQUAL expr
-  229                      | variable . T_MOD_EQUAL expr
-  230                      | variable . T_AND_EQUAL expr
-  231                      | variable . T_OR_EQUAL expr
-  232                      | variable . T_XOR_EQUAL expr
-  233                      | variable . T_SL_EQUAL expr
-  234                      | variable . T_SR_EQUAL expr
-  381 r_variable: variable .
-  383 rw_variable: variable .
-
-    '='             shift, and go to state 251
-    T_SR_EQUAL      shift, and go to state 252
-    T_SL_EQUAL      shift, and go to state 253
-    T_XOR_EQUAL     shift, and go to state 254
-    T_OR_EQUAL      shift, and go to state 255
-    T_AND_EQUAL     shift, and go to state 256
-    T_MOD_EQUAL     shift, and go to state 257
-    T_CONCAT_EQUAL  shift, and go to state 258
-    T_DIV_EQUAL     shift, and go to state 259
-    T_MUL_EQUAL     shift, and go to state 260
-    T_MINUS_EQUAL   shift, and go to state 261
-    T_PLUS_EQUAL    shift, and go to state 262
-    ';'             shift, and go to state 303
-
-    T_DEC     reduce using rule 383 (rw_variable)
-    T_INC     reduce using rule 383 (rw_variable)
-    $default  reduce using rule 381 (r_variable)
+   67 unticked_statement: T_RETURN ';' .
+
+    $default  reduce using rule 67 (unticked_statement)
 
 
 state 174
 
-   81 unticked_statement: T_TRY @22 . '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   68 unticked_statement: T_RETURN expr_without_variable . ';'
+  399 expr: expr_without_variable .
 
-    '{'  shift, and go to state 304
+    ';'  shift, and go to state 308
+
+    $default  reduce using rule 399 (expr)
 
 
 state 175
 
-   82 unticked_statement: T_THROW expr . ';'
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ';'                    shift, and go to state 305
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
 
 state 176
 
-   22 use_declaration: T_NS_SEPARATOR . namespace_name
-   23                | T_NS_SEPARATOR . namespace_name T_AS T_STRING
-
-    T_STRING  shift, and go to state 111
-
-    namespace_name  go to state 306
+   69 unticked_statement: T_RETURN variable . ';'
+  236 expr_without_variable: variable . '=' expr
+  237                      | variable . '=' '&' variable
+  239                      | variable . '=' '&' T_NEW class_name_reference @42 ctor_arguments
+  243                      | variable . T_PLUS_EQUAL expr
+  244                      | variable . T_MINUS_EQUAL expr
+  245                      | variable . T_MUL_EQUAL expr
+  246                      | variable . T_DIV_EQUAL expr
+  247                      | variable . T_CONCAT_EQUAL expr
+  248                      | variable . T_MOD_EQUAL expr
+  249                      | variable . T_AND_EQUAL expr
+  250                      | variable . T_OR_EQUAL expr
+  251                      | variable . T_XOR_EQUAL expr
+  252                      | variable . T_SL_EQUAL expr
+  253                      | variable . T_SR_EQUAL expr
+  400 r_variable: variable .
+  402 rw_variable: variable .
+
+    '='             shift, and go to state 257
+    T_SR_EQUAL      shift, and go to state 258
+    T_SL_EQUAL      shift, and go to state 259
+    T_XOR_EQUAL     shift, and go to state 260
+    T_OR_EQUAL      shift, and go to state 261
+    T_AND_EQUAL     shift, and go to state 262
+    T_MOD_EQUAL     shift, and go to state 263
+    T_CONCAT_EQUAL  shift, and go to state 264
+    T_DIV_EQUAL     shift, and go to state 265
+    T_MUL_EQUAL     shift, and go to state 266
+    T_MINUS_EQUAL   shift, and go to state 267
+    T_PLUS_EQUAL    shift, and go to state 268
+    ';'             shift, and go to state 309
+
+    T_DEC     reduce using rule 402 (rw_variable)
+    T_INC     reduce using rule 402 (rw_variable)
+    $default  reduce using rule 400 (r_variable)
 
 
 state 177
 
-    6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-   20 use_declaration: namespace_name .
-   21                | namespace_name . T_AS T_STRING
-
-    T_AS            shift, and go to state 307
-    T_NS_SEPARATOR  shift, and go to state 213
+   90 unticked_statement: T_TRY @22 . '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    $default  reduce using rule 20 (use_declaration)
+    '{'  shift, and go to state 310
 
 
 state 178
 
-   16 top_statement: T_USE use_declarations . ';'
-   18 use_declarations: use_declarations . ',' use_declaration
-
-    ','  shift, and go to state 308
-    ';'  shift, and go to state 309
+   91 unticked_statement: T_THROW expr . ';'
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ';'                    shift, and go to state 311
 
 
 state 179
 
-   19 use_declarations: use_declaration .
+   31 use_declaration: T_NS_SEPARATOR . namespace_name
+   32                | T_NS_SEPARATOR . namespace_name T_AS T_STRING
+
+    T_STRING  shift, and go to state 114
 
-    $default  reduce using rule 19 (use_declarations)
+    namespace_name  go to state 312
 
 
 state 180
 
-  174 global_var: T_VARIABLE .
+    6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
+   29 use_declaration: namespace_name .
+   30                | namespace_name . T_AS T_STRING
+
+    T_AS            shift, and go to state 313
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    $default  reduce using rule 174 (global_var)
+    $default  reduce using rule 29 (use_declaration)
 
 
 state 181
 
-  175 global_var: '$' . r_variable
-  176           | '$' . '{' expr '}'
+   17 top_statement: T_USE use_declarations . ';'
+   27 use_declarations: use_declarations . ',' use_declaration
 
-    T_STRING        shift, and go to state 111
-    T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '{'             shift, and go to state 310
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    r_variable                         go to state 311
-    variable                           go to state 312
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    ','  shift, and go to state 314
+    ';'  shift, and go to state 315
 
 
 state 182
 
-   61 unticked_statement: T_GLOBAL global_var_list . ';'
-  172 global_var_list: global_var_list . ',' global_var
+   28 use_declarations: use_declaration .
 
-    ','  shift, and go to state 313
-    ';'  shift, and go to state 314
+    $default  reduce using rule 28 (use_declarations)
 
 
 state 183
 
-  173 global_var_list: global_var .
+  189 global_var: T_VARIABLE .
 
-    $default  reduce using rule 173 (global_var_list)
+    $default  reduce using rule 189 (global_var)
 
 
 state 184
 
-  106 class_entry_type: T_FINAL T_CLASS .
+  190 global_var: '$' . r_variable
+  191           | '$' . '{' expr '}'
 
-    $default  reduce using rule 106 (class_entry_type)
+    T_STRING        shift, and go to state 114
+    T_VARIABLE      shift, and go to state 33
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '{'             shift, and go to state 316
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    r_variable                         go to state 317
+    variable                           go to state 318
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
 state 185
 
-  105 class_entry_type: T_ABSTRACT T_CLASS .
+   70 unticked_statement: T_GLOBAL global_var_list . ';'
+  187 global_var_list: global_var_list . ',' global_var
 
-    $default  reduce using rule 105 (class_entry_type)
+    ','  shift, and go to state 319
+    ';'  shift, and go to state 320
 
 
 state 186
 
-  179 static_var_list: T_VARIABLE .
-  180                | T_VARIABLE . '=' static_scalar
+  188 global_var_list: global_var .
 
-    '='  shift, and go to state 315
-
-    $default  reduce using rule 179 (static_var_list)
+    $default  reduce using rule 188 (global_var_list)
 
 
 state 187
 
-   62 unticked_statement: T_STATIC static_var_list . ';'
-  177 static_var_list: static_var_list . ',' T_VARIABLE
-  178                | static_var_list . ',' T_VARIABLE '=' static_scalar
+  115 class_entry_type: T_FINAL T_CLASS .
 
-    ','  shift, and go to state 316
-    ';'  shift, and go to state 317
+    $default  reduce using rule 115 (class_entry_type)
 
 
 state 188
 
-   66 unticked_statement: T_UNSET '(' . unset_variables ')' ';'
+  114 class_entry_type: T_ABSTRACT T_CLASS .
 
-    T_STRING        shift, and go to state 111
-    T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    unset_variables                    go to state 318
-    unset_variable                     go to state 319
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 320
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    $default  reduce using rule 114 (class_entry_type)
 
 
 state 189
 
-  452 internal_functions_in_yacc: T_ISSET '(' . isset_variables ')'
+  194 static_var_list: T_VARIABLE .
+  195                | T_VARIABLE . '=' static_scalar
 
-    T_STRING        shift, and go to state 111
-    T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 321
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    isset_variables                    go to state 322
+    '='  shift, and go to state 321
+
+    $default  reduce using rule 194 (static_var_list)
 
 
 state 190
 
-  453 internal_functions_in_yacc: T_EMPTY '(' . variable ')'
+   71 unticked_statement: T_STATIC static_var_list . ';'
+  192 static_var_list: static_var_list . ',' T_VARIABLE
+  193                | static_var_list . ',' T_VARIABLE '=' static_scalar
 
-    T_STRING        shift, and go to state 111
-    T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 323
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    ','  shift, and go to state 322
+    ';'  shift, and go to state 323
 
 
 state 191
 
-   10 top_statement: T_HALT_COMPILER '(' . ')' ';'
+   75 unticked_statement: T_UNSET '(' . unset_variables ')' ';'
 
-    ')'  shift, and go to state 324
+    T_STRING        shift, and go to state 114
+    T_VARIABLE      shift, and go to state 33
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    unset_variables                    go to state 324
+    unset_variable                     go to state 325
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 326
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
 state 192
 
-  216 expr_without_variable: T_LIST '(' . @39 assignment_list ')' '=' expr
+  471 internal_functions_in_yacc: T_ISSET '(' . isset_variables ')'
 
-    $default  reduce using rule 215 (@39)
-
-    @39  go to state 325
+    T_STRING        shift, and go to state 114
+    T_VARIABLE      shift, and go to state 33
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 327
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    isset_variables                    go to state 328
 
 
 state 193
 
-  290 expr_without_variable: T_ARRAY '(' . array_pair_list ')'
+  472 internal_functions_in_yacc: T_EMPTY '(' . variable ')'
+
+    T_STRING        shift, and go to state 114
+    T_VARIABLE      shift, and go to state 33
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 329
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+
+
+state 194
+
+   11 top_statement: T_HALT_COMPILER '(' . ')' ';'
+
+    ')'  shift, and go to state 330
+
+
+state 195
+
+  235 expr_without_variable: T_LIST '(' . @41 assignment_list ')' '=' expr
+
+    $default  reduce using rule 234 (@41)
+
+    @41  go to state 331
+
+
+state 196
+
+  309 expr_without_variable: T_ARRAY '(' . array_pair_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -6223,7 +6303,7 @@ state 193
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 326
+    '&'                         shift, and go to state 332
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -6243,12 +6323,12 @@ state 193
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -6259,78 +6339,78 @@ state 193
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 428 (array_pair_list)
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 327
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    array_pair_list                    go to state 328
-    non_empty_array_pair_list          go to state 329
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 447 (array_pair_list)
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 333
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    array_pair_list                    go to state 334
+    non_empty_array_pair_list          go to state 335
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 194
+state 197
 
-  442 encaps_var: T_VARIABLE .
-  444           | T_VARIABLE . '[' @67 encaps_var_offset ']'
-  445           | T_VARIABLE . T_OBJECT_OPERATOR T_STRING
+  461 encaps_var: T_VARIABLE .
+  463           | T_VARIABLE . '[' @69 encaps_var_offset ']'
+  464           | T_VARIABLE . T_OBJECT_OPERATOR T_STRING
 
-    '['                shift, and go to state 330
-    T_OBJECT_OPERATOR  shift, and go to state 331
+    '['                shift, and go to state 336
+    T_OBJECT_OPERATOR  shift, and go to state 337
 
-    $default  reduce using rule 442 (encaps_var)
+    $default  reduce using rule 461 (encaps_var)
 
 
-state 195
+state 198
 
-  352 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC
-  441 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
+  371 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC
+  460 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
 
-    T_VARIABLE                  shift, and go to state 194
-    T_END_HEREDOC               shift, and go to state 332
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
+    T_VARIABLE                  shift, and go to state 197
+    T_END_HEREDOC               shift, and go to state 338
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
 
-    encaps_var  go to state 333
+    encaps_var  go to state 339
 
 
-state 196
+state 199
 
-  353 common_scalar: T_START_HEREDOC T_END_HEREDOC .
+  372 common_scalar: T_START_HEREDOC T_END_HEREDOC .
 
-    $default  reduce using rule 353 (common_scalar)
+    $default  reduce using rule 372 (common_scalar)
 
 
-state 197
+state 200
 
-  446 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES . expr '}'
-  447           | T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}'
+  465 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES . expr '}'
+  466           | T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -6357,12 +6437,12 @@ state 197
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
-    T_STRING_VARNAME            shift, and go to state 334
+    T_STRING                    shift, and go to state 114
+    T_STRING_VARNAME            shift, and go to state 340
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -6373,205 +6453,215 @@ state 197
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 335
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 341
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 198
+state 201
 
-  448 encaps_var: T_CURLY_OPEN . variable '}'
+  467 encaps_var: T_CURLY_OPEN . variable '}'
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 336
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 342
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 199
+state 202
 
-  370 scalar: T_START_HEREDOC encaps_list . T_END_HEREDOC
-  438 encaps_list: encaps_list . encaps_var
-  439            | encaps_list . T_ENCAPSED_AND_WHITESPACE
+  389 scalar: T_START_HEREDOC encaps_list . T_END_HEREDOC
+  457 encaps_list: encaps_list . encaps_var
+  458            | encaps_list . T_ENCAPSED_AND_WHITESPACE
 
-    T_VARIABLE                  shift, and go to state 194
-    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 337
-    T_END_HEREDOC               shift, and go to state 338
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
+    T_VARIABLE                  shift, and go to state 197
+    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 343
+    T_END_HEREDOC               shift, and go to state 344
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
 
-    encaps_var  go to state 339
+    encaps_var  go to state 345
 
 
-state 200
+state 203
 
-  440 encaps_list: encaps_var .
+  459 encaps_list: encaps_var .
 
-    $default  reduce using rule 440 (encaps_list)
+    $default  reduce using rule 459 (encaps_list)
 
 
-state 201
+state 204
 
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR . namespace_name '(' @52 function_call_parameter_list ')'
-  320 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
-  366 scalar: T_NAMESPACE T_NS_SEPARATOR . namespace_name
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR . namespace_name '(' @54 function_call_parameter_list ')'
+  339 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
+  385 scalar: T_NAMESPACE T_NS_SEPARATOR . namespace_name
 
-    T_STRING  shift, and go to state 111
+    T_STRING  shift, and go to state 114
 
-    namespace_name  go to state 340
+    namespace_name  go to state 346
 
 
-state 202
+state 205
 
-   15 top_statement: T_NAMESPACE '{' . @3 top_statement_list '}'
+   16 top_statement: T_NAMESPACE '{' . @3 top_statement_list '}'
 
-    $default  reduce using rule 14 (@3)
+    $default  reduce using rule 15 (@3)
 
-    @3  go to state 341
+    @3  go to state 347
 
 
-state 203
+state 206
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-   11 top_statement: T_NAMESPACE namespace_name . ';'
-   13              | T_NAMESPACE namespace_name . '{' @2 top_statement_list '}'
+   12 top_statement: T_NAMESPACE namespace_name . ';'
+   14              | T_NAMESPACE namespace_name . '{' @2 top_statement_list '}'
 
-    T_NS_SEPARATOR  shift, and go to state 213
-    ';'             shift, and go to state 342
-    '{'             shift, and go to state 343
+    T_NS_SEPARATOR  shift, and go to state 217
+    ';'             shift, and go to state 348
+    '{'             shift, and go to state 349
 
 
-state 204
+state 207
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  307 function_call: T_NS_SEPARATOR namespace_name . '(' @53 function_call_parameter_list ')'
-  321 class_name: T_NS_SEPARATOR namespace_name .
-  367 scalar: T_NS_SEPARATOR namespace_name .
+  326 function_call: T_NS_SEPARATOR namespace_name . '(' @55 function_call_parameter_list ')'
+  340 class_name: T_NS_SEPARATOR namespace_name .
+  386 scalar: T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
-    '('             shift, and go to state 344
+    T_NS_SEPARATOR  shift, and go to state 217
+    '('             shift, and go to state 350
 
-    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 321 (class_name)
-    $default                reduce using rule 367 (scalar)
+    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 340 (class_name)
+    $default                reduce using rule 386 (scalar)
 
 
-state 205
+state 208
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  272                      | '(' expr . ')'
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 345
+   21 annotation: T_ANNOTATION T_STRING .
+   22           | T_ANNOTATION T_STRING . '(' annotation_args ')'
 
+    '('  shift, and go to state 351
 
-state 206
+    $default  reduce using rule 21 (annotation)
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-   35 unticked_statement: '{' inner_statement_list . '}'
 
-    '}'  shift, and go to state 346
+state 209
+
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  291                      | '(' expr . ')'
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 352
 
-    $default  reduce using rule 26 (@4)
 
-    @4  go to state 347
+state 210
 
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+   44 unticked_statement: '{' inner_statement_list . '}'
 
-state 207
+    '}'  shift, and go to state 353
+
+    $default  reduce using rule 35 (@4)
+
+    @4  go to state 354
+
+
+state 211
 
-  409 compound_variable: '$' '{' . expr '}'
+  428 compound_variable: '$' '{' . expr '}'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -6598,12 +6688,12 @@ state 207
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -6614,196 +6704,210 @@ state 207
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 348
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 355
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 208
+state 212
 
-  338 backticks_expr: T_ENCAPSED_AND_WHITESPACE .
-  441 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
+  357 backticks_expr: T_ENCAPSED_AND_WHITESPACE .
+  460 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
 
-    T_VARIABLE                  shift, and go to state 194
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
+    T_VARIABLE                  shift, and go to state 197
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
 
-    $default  reduce using rule 338 (backticks_expr)
+    $default  reduce using rule 357 (backticks_expr)
 
-    encaps_var  go to state 333
+    encaps_var  go to state 339
 
 
-state 209
+state 213
 
-  291 expr_without_variable: '`' backticks_expr . '`'
+  310 expr_without_variable: '`' backticks_expr . '`'
 
-    '`'  shift, and go to state 349
+    '`'  shift, and go to state 356
 
 
-state 210
+state 214
 
-  339 backticks_expr: encaps_list .
-  438 encaps_list: encaps_list . encaps_var
-  439            | encaps_list . T_ENCAPSED_AND_WHITESPACE
+  358 backticks_expr: encaps_list .
+  457 encaps_list: encaps_list . encaps_var
+  458            | encaps_list . T_ENCAPSED_AND_WHITESPACE
 
-    T_VARIABLE                  shift, and go to state 194
-    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 337
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
+    T_VARIABLE                  shift, and go to state 197
+    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 343
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
 
-    $default  reduce using rule 339 (backticks_expr)
+    $default  reduce using rule 358 (backticks_expr)
 
-    encaps_var  go to state 339
+    encaps_var  go to state 345
 
 
-state 211
+state 215
 
-  441 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
+  460 encaps_list: T_ENCAPSED_AND_WHITESPACE . encaps_var
 
-    T_VARIABLE                  shift, and go to state 194
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
+    T_VARIABLE                  shift, and go to state 197
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
 
-    encaps_var  go to state 333
+    encaps_var  go to state 339
 
 
-state 212
+state 216
 
-  369 scalar: '"' encaps_list . '"'
-  438 encaps_list: encaps_list . encaps_var
-  439            | encaps_list . T_ENCAPSED_AND_WHITESPACE
+  388 scalar: '"' encaps_list . '"'
+  457 encaps_list: encaps_list . encaps_var
+  458            | encaps_list . T_ENCAPSED_AND_WHITESPACE
 
-    T_VARIABLE                  shift, and go to state 194
-    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 337
-    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 197
-    T_CURLY_OPEN                shift, and go to state 198
-    '"'                         shift, and go to state 350
+    T_VARIABLE                  shift, and go to state 197
+    T_ENCAPSED_AND_WHITESPACE   shift, and go to state 343
+    T_DOLLAR_OPEN_CURLY_BRACES  shift, and go to state 200
+    T_CURLY_OPEN                shift, and go to state 201
+    '"'                         shift, and go to state 357
 
-    encaps_var  go to state 339
+    encaps_var  go to state 345
 
 
-state 213
+state 217
 
     6 namespace_name: namespace_name T_NS_SEPARATOR . T_STRING
 
-    T_STRING  shift, and go to state 351
+    T_STRING  shift, and go to state 358
 
 
-state 214
+state 218
 
-  303 function_call: namespace_name '(' . @51 function_call_parameter_list ')'
+  322 function_call: namespace_name '(' . @53 function_call_parameter_list ')'
 
-    $default  reduce using rule 302 (@51)
+    $default  reduce using rule 321 (@53)
 
-    @51  go to state 352
+    @53  go to state 359
 
 
-state 215
+state 219
 
-   24 constant_declaration: constant_declaration ',' . T_STRING '=' static_scalar
+   19 annotations: annotations annotation .
 
-    T_STRING  shift, and go to state 353
+    $default  reduce using rule 19 (annotations)
 
 
-state 216
+state 220
 
-   17 top_statement: constant_declaration ';' .
+    9 top_statement: annotations class_declaration_statement .
 
-    $default  reduce using rule 17 (top_statement)
+    $default  reduce using rule 9 (top_statement)
 
 
-state 217
+state 221
+
+   33 constant_declaration: constant_declaration ',' . T_STRING '=' static_scalar
 
-  101 unticked_class_declaration_statement: class_entry_type T_STRING . extends_from @30 implements_list '{' class_statement_list '}'
+    T_STRING  shift, and go to state 360
 
-    T_EXTENDS  shift, and go to state 354
 
-    $default  reduce using rule 107 (extends_from)
+state 222
 
-    extends_from  go to state 355
+   18 top_statement: constant_declaration ';' .
 
+    $default  reduce using rule 18 (top_statement)
 
-state 218
 
-  103 unticked_class_declaration_statement: interface_entry T_STRING . @31 interface_extends_list '{' class_statement_list '}'
+state 223
 
-    $default  reduce using rule 102 (@31)
+  110 unticked_class_declaration_statement: class_entry_type T_STRING . extends_from @30 implements_list '{' class_statement_list '}'
 
-    @31  go to state 356
+    T_EXTENDS  shift, and go to state 361
 
+    $default  reduce using rule 116 (extends_from)
 
-state 219
+    extends_from  go to state 362
 
-   97 is_reference: '&' .
 
-    $default  reduce using rule 97 (is_reference)
+state 224
 
+  112 unticked_class_declaration_statement: interface_entry T_STRING . @31 interface_extends_list '{' class_statement_list '}'
 
-state 220
+    $default  reduce using rule 111 (@31)
 
-   99 unticked_function_declaration_statement: function is_reference . T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'
-  294 expr_without_variable: function is_reference . '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
+    @31  go to state 363
 
-    T_STRING  shift, and go to state 357
-    '('       shift, and go to state 358
 
+state 225
 
-state 221
+  106 is_reference: '&' .
+
+    $default  reduce using rule 106 (is_reference)
+
+
+state 226
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @54 function_call_parameter_list ')'
-  311              | class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @55 function_call_parameter_list ')'
-  397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
-  462 class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING
+  108 unticked_function_declaration_statement: function is_reference . T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'
+  313 expr_without_variable: function is_reference . '(' @52 parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
-    T_STRING    shift, and go to state 359
+    T_STRING  shift, and go to state 364
+    '('       shift, and go to state 365
+
+
+state 227
+
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @56 function_call_parameter_list ')'
+  330              | class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @57 function_call_parameter_list ')'
+  416 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
+  481 class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING
+
+    T_STRING    shift, and go to state 366
     T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 77
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 360
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 367
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    simple_indirect_reference  go to state 369
 
 
-state 222
+state 228
 
-  244 expr_without_variable: expr T_LOGICAL_OR . @44 expr
+  263 expr_without_variable: expr T_LOGICAL_OR . @46 expr
 
-    $default  reduce using rule 243 (@44)
+    $default  reduce using rule 262 (@46)
 
-    @44  go to state 363
+    @46  go to state 370
 
 
-state 223
+state 229
 
-  247 expr_without_variable: expr T_LOGICAL_XOR . expr
+  266 expr_without_variable: expr T_LOGICAL_XOR . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -6830,12 +6934,12 @@ state 223
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -6846,80 +6950,80 @@ state 223
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 364
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 371
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 224
+state 230
 
-  246 expr_without_variable: expr T_LOGICAL_AND . @45 expr
+  265 expr_without_variable: expr T_LOGICAL_AND . @47 expr
 
-    $default  reduce using rule 245 (@45)
+    $default  reduce using rule 264 (@47)
 
-    @45  go to state 365
+    @47  go to state 372
 
 
-state 225
+state 231
 
-  275 expr_without_variable: expr '?' . @46 expr ':' @47 expr
-  277                      | expr '?' . ':' @48 expr
+  294 expr_without_variable: expr '?' . @48 expr ':' @49 expr
+  296                      | expr '?' . ':' @50 expr
 
-    ':'  shift, and go to state 366
+    ':'  shift, and go to state 373
 
-    $default  reduce using rule 273 (@46)
+    $default  reduce using rule 292 (@48)
 
-    @46  go to state 367
+    @48  go to state 374
 
 
-state 226
+state 232
 
-  240 expr_without_variable: expr T_BOOLEAN_OR . @42 expr
+  259 expr_without_variable: expr T_BOOLEAN_OR . @44 expr
 
-    $default  reduce using rule 239 (@42)
+    $default  reduce using rule 258 (@44)
 
-    @42  go to state 368
+    @44  go to state 375
 
 
-state 227
+state 233
 
-  242 expr_without_variable: expr T_BOOLEAN_AND . @43 expr
+  261 expr_without_variable: expr T_BOOLEAN_AND . @45 expr
 
-    $default  reduce using rule 241 (@43)
+    $default  reduce using rule 260 (@45)
 
-    @43  go to state 369
+    @45  go to state 376
 
 
-state 228
+state 234
 
-  248 expr_without_variable: expr '|' . expr
+  267 expr_without_variable: expr '|' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -6946,12 +7050,12 @@ state 228
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -6962,41 +7066,41 @@ state 228
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 370
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 377
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 229
+state 235
 
-  250 expr_without_variable: expr '^' . expr
+  269 expr_without_variable: expr '^' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7023,12 +7127,12 @@ state 229
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7039,41 +7143,41 @@ state 229
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 371
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 378
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 230
+state 236
 
-  249 expr_without_variable: expr '&' . expr
+  268 expr_without_variable: expr '&' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7100,12 +7204,12 @@ state 230
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7116,41 +7220,41 @@ state 230
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 372
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 379
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 231
+state 237
 
-  264 expr_without_variable: expr T_IS_NOT_IDENTICAL . expr
+  283 expr_without_variable: expr T_IS_NOT_IDENTICAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7177,12 +7281,12 @@ state 231
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7193,41 +7297,41 @@ state 231
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 373
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 380
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 232
+state 238
 
-  263 expr_without_variable: expr T_IS_IDENTICAL . expr
+  282 expr_without_variable: expr T_IS_IDENTICAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7254,12 +7358,12 @@ state 232
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7270,41 +7374,41 @@ state 232
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 374
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 381
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 233
+state 239
 
-  266 expr_without_variable: expr T_IS_NOT_EQUAL . expr
+  285 expr_without_variable: expr T_IS_NOT_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7331,12 +7435,12 @@ state 233
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7347,41 +7451,41 @@ state 233
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 375
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 382
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 234
+state 240
 
-  265 expr_without_variable: expr T_IS_EQUAL . expr
+  284 expr_without_variable: expr T_IS_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7408,12 +7512,12 @@ state 234
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7424,41 +7528,41 @@ state 234
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 376
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 383
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 235
+state 241
 
-  267 expr_without_variable: expr '<' . expr
+  286 expr_without_variable: expr '<' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7485,12 +7589,12 @@ state 235
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7501,41 +7605,41 @@ state 235
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 377
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 384
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 236
+state 242
 
-  269 expr_without_variable: expr '>' . expr
+  288 expr_without_variable: expr '>' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7562,12 +7666,12 @@ state 236
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7578,41 +7682,41 @@ state 236
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 378
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 385
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 237
+state 243
 
-  270 expr_without_variable: expr T_IS_GREATER_OR_EQUAL . expr
+  289 expr_without_variable: expr T_IS_GREATER_OR_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7639,12 +7743,12 @@ state 237
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7655,41 +7759,41 @@ state 237
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 379
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 386
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 238
+state 244
 
-  268 expr_without_variable: expr T_IS_SMALLER_OR_EQUAL . expr
+  287 expr_without_variable: expr T_IS_SMALLER_OR_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7716,12 +7820,12 @@ state 238
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7732,41 +7836,41 @@ state 238
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 380
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 387
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 239
+state 245
 
-  258 expr_without_variable: expr T_SR . expr
+  277 expr_without_variable: expr T_SR . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7793,12 +7897,12 @@ state 239
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7809,41 +7913,41 @@ state 239
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 381
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 388
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 240
+state 246
 
-  257 expr_without_variable: expr T_SL . expr
+  276 expr_without_variable: expr T_SL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7870,12 +7974,12 @@ state 240
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7886,41 +7990,41 @@ state 240
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 382
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 389
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 241
+state 247
 
-  252 expr_without_variable: expr '+' . expr
+  271 expr_without_variable: expr '+' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -7947,12 +8051,12 @@ state 241
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -7963,41 +8067,41 @@ state 241
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 383
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 390
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 242
+state 248
 
-  253 expr_without_variable: expr '-' . expr
+  272 expr_without_variable: expr '-' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8024,12 +8128,12 @@ state 242
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8040,41 +8144,41 @@ state 242
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 384
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 391
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 243
+state 249
 
-  251 expr_without_variable: expr '.' . expr
+  270 expr_without_variable: expr '.' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8101,12 +8205,12 @@ state 243
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8117,41 +8221,41 @@ state 243
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 385
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 392
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 244
+state 250
 
-  254 expr_without_variable: expr '*' . expr
+  273 expr_without_variable: expr '*' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8178,12 +8282,12 @@ state 244
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8194,41 +8298,41 @@ state 244
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 386
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 393
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 245
+state 251
 
-  255 expr_without_variable: expr '/' . expr
+  274 expr_without_variable: expr '/' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8255,12 +8359,12 @@ state 245
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8271,41 +8375,41 @@ state 245
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 387
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 394
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 246
+state 252
 
-  256 expr_without_variable: expr '%' . expr
+  275 expr_without_variable: expr '%' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8332,12 +8436,12 @@ state 246
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8348,87 +8452,87 @@ state 246
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 388
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 395
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 247
+state 253
 
-  271 expr_without_variable: expr T_INSTANCEOF . class_name_reference
+  290 expr_without_variable: expr T_INSTANCEOF . class_name_reference
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 142
-    T_NS_SEPARATOR  shift, and go to state 143
-    '$'             shift, and go to state 77
-
-    namespace_name                go to state 144
-    class_name                    go to state 145
-    class_name_reference          go to state 389
-    dynamic_class_name_reference  go to state 147
-    static_member                 go to state 102
-    variable_class_name           go to state 148
-    base_variable                 go to state 149
-    reference_variable            go to state 150
-    compound_variable             go to state 107
-    simple_indirect_reference     go to state 151
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 145
+    T_NS_SEPARATOR  shift, and go to state 146
+    '$'             shift, and go to state 78
+
+    namespace_name                go to state 147
+    class_name                    go to state 148
+    class_name_reference          go to state 396
+    dynamic_class_name_reference  go to state 150
+    static_member                 go to state 105
+    variable_class_name           go to state 151
+    base_variable                 go to state 152
+    reference_variable            go to state 153
+    compound_variable             go to state 110
+    simple_indirect_reference     go to state 154
 
 
-state 248
+state 254
 
-   65 unticked_statement: expr ';' .
+   74 unticked_statement: expr ';' .
 
-    $default  reduce using rule 65 (unticked_statement)
+    $default  reduce using rule 74 (unticked_statement)
 
 
-state 249
+state 255
 
-  237 expr_without_variable: rw_variable T_DEC .
+  256 expr_without_variable: rw_variable T_DEC .
 
-    $default  reduce using rule 237 (expr_without_variable)
+    $default  reduce using rule 256 (expr_without_variable)
 
 
-state 250
+state 256
 
-  235 expr_without_variable: rw_variable T_INC .
+  254 expr_without_variable: rw_variable T_INC .
 
-    $default  reduce using rule 235 (expr_without_variable)
+    $default  reduce using rule 254 (expr_without_variable)
 
 
-state 251
+state 257
 
-  217 expr_without_variable: variable '=' . expr
-  218                      | variable '=' . '&' variable
-  220                      | variable '=' . '&' T_NEW class_name_reference @40 ctor_arguments
+  236 expr_without_variable: variable '=' . expr
+  237                      | variable '=' . '&' variable
+  239                      | variable '=' . '&' T_NEW class_name_reference @42 ctor_arguments
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8436,7 +8540,7 @@ state 251
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 390
+    '&'                         shift, and go to state 397
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -8456,12 +8560,12 @@ state 251
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8472,41 +8576,41 @@ state 251
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 391
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 398
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 252
+state 258
 
-  234 expr_without_variable: variable T_SR_EQUAL . expr
+  253 expr_without_variable: variable T_SR_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8533,12 +8637,12 @@ state 252
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8549,41 +8653,41 @@ state 252
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 392
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 399
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 253
+state 259
 
-  233 expr_without_variable: variable T_SL_EQUAL . expr
+  252 expr_without_variable: variable T_SL_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8610,12 +8714,12 @@ state 253
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8626,41 +8730,41 @@ state 253
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 393
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 400
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 254
+state 260
 
-  232 expr_without_variable: variable T_XOR_EQUAL . expr
+  251 expr_without_variable: variable T_XOR_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8687,12 +8791,12 @@ state 254
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8703,41 +8807,41 @@ state 254
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 394
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 401
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 255
+state 261
 
-  231 expr_without_variable: variable T_OR_EQUAL . expr
+  250 expr_without_variable: variable T_OR_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8764,12 +8868,12 @@ state 255
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8780,41 +8884,41 @@ state 255
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 395
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 402
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 256
+state 262
 
-  230 expr_without_variable: variable T_AND_EQUAL . expr
+  249 expr_without_variable: variable T_AND_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8841,12 +8945,12 @@ state 256
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8857,41 +8961,41 @@ state 256
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 396
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 403
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 257
+state 263
 
-  229 expr_without_variable: variable T_MOD_EQUAL . expr
+  248 expr_without_variable: variable T_MOD_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8918,12 +9022,12 @@ state 257
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -8934,41 +9038,41 @@ state 257
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 397
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 404
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 258
+state 264
 
-  228 expr_without_variable: variable T_CONCAT_EQUAL . expr
+  247 expr_without_variable: variable T_CONCAT_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -8995,12 +9099,12 @@ state 258
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -9011,41 +9115,41 @@ state 258
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 398
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 405
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 259
+state 265
 
-  227 expr_without_variable: variable T_DIV_EQUAL . expr
+  246 expr_without_variable: variable T_DIV_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -9072,12 +9176,12 @@ state 259
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -9088,41 +9192,41 @@ state 259
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 399
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 406
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 260
+state 266
 
-  226 expr_without_variable: variable T_MUL_EQUAL . expr
+  245 expr_without_variable: variable T_MUL_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -9149,12 +9253,12 @@ state 260
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -9165,41 +9269,41 @@ state 260
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 400
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 407
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 261
+state 267
 
-  225 expr_without_variable: variable T_MINUS_EQUAL . expr
+  244 expr_without_variable: variable T_MINUS_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -9226,12 +9330,12 @@ state 261
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -9242,41 +9346,41 @@ state 261
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 401
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 408
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 262
+state 268
 
-  224 expr_without_variable: variable T_PLUS_EQUAL . expr
+  243 expr_without_variable: variable T_PLUS_EQUAL . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -9303,12 +9407,12 @@ state 262
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -9319,76 +9423,76 @@ state 262
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 402
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 409
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 263
+state 269
 
-  317 function_call: variable_without_objects '(' . @58 function_call_parameter_list ')'
+  336 function_call: variable_without_objects '(' . @60 function_call_parameter_list ')'
 
-    $default  reduce using rule 316 (@58)
+    $default  reduce using rule 335 (@60)
 
-    @58  go to state 403
+    @60  go to state 410
 
 
-state 264
+state 270
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @56 function_call_parameter_list ')'
-  315              | variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @57 function_call_parameter_list ')'
-  398 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
-  463 class_constant: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @58 function_call_parameter_list ')'
+  334              | variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @59 function_call_parameter_list ')'
+  417 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
+  482 class_constant: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING
 
-    T_STRING    shift, and go to state 404
+    T_STRING    shift, and go to state 411
     T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 77
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 405
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 412
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    simple_indirect_reference  go to state 369
 
 
-state 265
+state 271
 
-  386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR . @61 object_property @62 method_or_not variable_properties
+  405 variable: base_variable_with_function_calls T_OBJECT_OPERATOR . @63 object_property @64 method_or_not variable_properties
 
-    $default  reduce using rule 384 (@61)
+    $default  reduce using rule 403 (@63)
 
-    @61  go to state 406
+    @63  go to state 413
 
 
-state 266
+state 272
 
-  405 reference_variable: reference_variable '[' . dim_offset ']'
+  424 reference_variable: reference_variable '[' . dim_offset ']'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -9415,12 +9519,12 @@ state 266
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -9431,44 +9535,44 @@ state 266
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 410 (dim_offset)
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 407
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    dim_offset                         go to state 408
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 429 (dim_offset)
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 414
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    dim_offset                         go to state 415
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 267
+state 273
 
-  406 reference_variable: reference_variable '{' . expr '}'
+  425 reference_variable: reference_variable '{' . expr '}'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -9495,12 +9599,12 @@ state 267
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -9511,425 +9615,425 @@ state 267
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 409
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
-
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 416
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
-state 268
 
-  409 compound_variable: '$' . '{' expr '}'
-  421 simple_indirect_reference: simple_indirect_reference '$' .
+state 274
 
-    '{'  shift, and go to state 207
+  428 compound_variable: '$' . '{' expr '}'
+  440 simple_indirect_reference: simple_indirect_reference '$' .
 
-    $default  reduce using rule 421 (simple_indirect_reference)
+    '{'  shift, and go to state 211
 
+    $default  reduce using rule 440 (simple_indirect_reference)
 
-state 269
 
-  396 variable_without_objects: simple_indirect_reference reference_variable .
-  403 base_variable: simple_indirect_reference reference_variable .
-  405 reference_variable: reference_variable . '[' dim_offset ']'
-  406                   | reference_variable . '{' expr '}'
+state 275
 
-    '['  shift, and go to state 266
-    '{'  shift, and go to state 267
+  415 variable_without_objects: simple_indirect_reference reference_variable .
+  422 base_variable: simple_indirect_reference reference_variable .
+  424 reference_variable: reference_variable . '[' dim_offset ']'
+  425                   | reference_variable . '{' expr '}'
 
-    '('       reduce using rule 396 (variable_without_objects)
-    $default  reduce using rule 403 (base_variable)
+    '['  shift, and go to state 272
+    '{'  shift, and go to state 273
 
+    '('       reduce using rule 415 (variable_without_objects)
+    $default  reduce using rule 422 (base_variable)
 
-state 270
 
-  294 expr_without_variable: function is_reference . '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
+state 276
 
-    '('  shift, and go to state 358
+  313 expr_without_variable: function is_reference . '(' @52 parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
+    '('  shift, and go to state 365
 
-state 271
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  456 internal_functions_in_yacc: T_EVAL '(' expr . ')'
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 410
+state 277
 
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  475 internal_functions_in_yacc: T_EVAL '(' expr . ')'
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 417
 
-state 272
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  288                      | '@' @49 expr .
+state 278
 
-    $default  reduce using rule 288 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  307                      | '@' @51 expr .
+
+    $default  reduce using rule 307 (expr_without_variable)
 
 
-state 273
+state 279
 
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR . namespace_name '(' @52 function_call_parameter_list ')'
-  320 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR . namespace_name '(' @54 function_call_parameter_list ')'
+  339 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
 
-    T_STRING  shift, and go to state 111
+    T_STRING  shift, and go to state 114
 
-    namespace_name  go to state 411
+    namespace_name  go to state 418
 
 
-state 274
+state 280
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  307 function_call: T_NS_SEPARATOR namespace_name . '(' @53 function_call_parameter_list ')'
-  321 class_name: T_NS_SEPARATOR namespace_name .
+  326 function_call: T_NS_SEPARATOR namespace_name . '(' @55 function_call_parameter_list ')'
+  340 class_name: T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
-    '('             shift, and go to state 344
+    T_NS_SEPARATOR  shift, and go to state 217
+    '('             shift, and go to state 350
 
-    $default  reduce using rule 321 (class_name)
+    $default  reduce using rule 340 (class_name)
 
 
-state 275
+state 281
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @54 function_call_parameter_list ')'
-  311              | class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @55 function_call_parameter_list ')'
-  397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @56 function_call_parameter_list ')'
+  330              | class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @57 function_call_parameter_list ')'
+  416 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
 
-    T_STRING    shift, and go to state 412
+    T_STRING    shift, and go to state 419
     T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 77
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 360
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 367
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    simple_indirect_reference  go to state 369
 
 
-state 276
+state 282
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @56 function_call_parameter_list ')'
-  315              | variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @57 function_call_parameter_list ')'
-  398 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @58 function_call_parameter_list ')'
+  334              | variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects '(' @59 function_call_parameter_list ')'
+  417 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
 
-    T_STRING    shift, and go to state 413
+    T_STRING    shift, and go to state 420
     T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 77
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 405
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 412
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    simple_indirect_reference  go to state 369
 
 
-state 277
+state 283
 
-  320 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
+  339 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
 
-    T_STRING  shift, and go to state 111
+    T_STRING  shift, and go to state 114
 
-    namespace_name  go to state 414
+    namespace_name  go to state 421
 
 
-state 278
+state 284
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  321 class_name: T_NS_SEPARATOR namespace_name .
+  340 class_name: T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    $default  reduce using rule 321 (class_name)
+    $default  reduce using rule 340 (class_name)
 
 
-state 279
+state 285
 
-  397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
+  416 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
 
     T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 77
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 415
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 422
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    simple_indirect_reference  go to state 369
 
 
-state 280
+state 286
 
-  222 expr_without_variable: T_NEW class_name_reference @41 . ctor_arguments
+  241 expr_without_variable: T_NEW class_name_reference @43 . ctor_arguments
 
-    '('  shift, and go to state 416
+    '('  shift, and go to state 423
 
-    $default  reduce using rule 340 (ctor_arguments)
+    $default  reduce using rule 359 (ctor_arguments)
 
-    ctor_arguments  go to state 417
+    ctor_arguments  go to state 424
 
 
-state 281
+state 287
 
-  398 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
+  417 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM . variable_without_objects
 
     T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 77
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 418
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 425
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    simple_indirect_reference  go to state 369
 
 
-state 282
+state 288
 
-  329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR . @59 object_property @60 dynamic_class_name_variable_properties
+  348 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR . @61 object_property @62 dynamic_class_name_variable_properties
 
-    $default  reduce using rule 327 (@59)
+    $default  reduce using rule 346 (@61)
 
-    @59  go to state 419
+    @61  go to state 426
 
 
-state 283
+state 289
 
-  403 base_variable: simple_indirect_reference reference_variable .
-  405 reference_variable: reference_variable . '[' dim_offset ']'
-  406                   | reference_variable . '{' expr '}'
+  422 base_variable: simple_indirect_reference reference_variable .
+  424 reference_variable: reference_variable . '[' dim_offset ']'
+  425                   | reference_variable . '{' expr '}'
 
-    '['  shift, and go to state 266
-    '{'  shift, and go to state 267
+    '['  shift, and go to state 272
+    '{'  shift, and go to state 273
 
-    $default  reduce using rule 403 (base_variable)
+    $default  reduce using rule 422 (base_variable)
 
 
-state 284
+state 290
 
-  335 exit_expr: '(' ')' .
+  354 exit_expr: '(' ')' .
 
-    $default  reduce using rule 335 (exit_expr)
+    $default  reduce using rule 354 (exit_expr)
 
 
-state 285
+state 291
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  336 exit_expr: '(' expr . ')'
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 420
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  355 exit_expr: '(' expr . ')'
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 427
 
 
-state 286
+state 292
 
-   38 unticked_statement: T_IF '(' expr . ')' @5 statement @6 elseif_list else_single
-   41                   | T_IF '(' expr . ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 421
+   47 unticked_statement: T_IF '(' expr . ')' @5 statement @6 elseif_list else_single
+   50                   | T_IF '(' expr . ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 428
 
 
-state 287
+state 293
 
-  208 echo_expr_list: echo_expr_list ',' . expr
+  227 echo_expr_list: echo_expr_list ',' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -9956,12 +10060,12 @@ state 287
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -9972,55 +10076,55 @@ state 287
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 422
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 429
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 288
+state 294
 
-   63 unticked_statement: T_ECHO echo_expr_list ';' .
+   72 unticked_statement: T_ECHO echo_expr_list ';' .
 
-    $default  reduce using rule 63 (unticked_statement)
+    $default  reduce using rule 72 (unticked_statement)
 
 
-state 289
+state 295
 
-   47 unticked_statement: T_DO @11 statement . T_WHILE '(' @12 expr ')' ';'
+   56 unticked_statement: T_DO @11 statement . T_WHILE '(' @12 expr ')' ';'
 
-    T_WHILE  shift, and go to state 423
+    T_WHILE  shift, and go to state 430
 
 
-state 290
+state 296
 
-   44 unticked_statement: T_WHILE '(' @9 . expr ')' @10 while_statement
+   53 unticked_statement: T_WHILE '(' @9 . expr ')' @10 while_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -10047,12 +10151,12 @@ state 290
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -10063,355 +10167,355 @@ state 290
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 424
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 431
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 291
+state 297
 
-   51 unticked_statement: T_FOR '(' for_expr . ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement
+   60 unticked_statement: T_FOR '(' for_expr . ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement
 
-    ';'  shift, and go to state 425
+    ';'  shift, and go to state 432
 
 
-state 292
+state 298
 
-  211 for_expr: non_empty_for_expr .
-  213 non_empty_for_expr: non_empty_for_expr . ',' @38 expr
+  230 for_expr: non_empty_for_expr .
+  232 non_empty_for_expr: non_empty_for_expr . ',' @40 expr
 
-    ','  shift, and go to state 426
+    ','  shift, and go to state 433
 
-    $default  reduce using rule 211 (for_expr)
+    $default  reduce using rule 230 (for_expr)
 
 
-state 293
+state 299
 
-  214 non_empty_for_expr: expr .
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 214 (non_empty_for_expr)
+  233 non_empty_for_expr: expr .
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 233 (non_empty_for_expr)
 
 
-state 294
+state 300
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable . T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement
-  380 expr: expr_without_variable .
+   81 unticked_statement: T_FOREACH '(' expr_without_variable . T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement
+  399 expr: expr_without_variable .
 
-    T_AS  shift, and go to state 427
+    T_AS  shift, and go to state 434
 
-    $default  reduce using rule 380 (expr)
+    $default  reduce using rule 399 (expr)
 
 
-state 295
+state 301
 
-   69 unticked_statement: T_FOREACH '(' variable . T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
-  217 expr_without_variable: variable . '=' expr
-  218                      | variable . '=' '&' variable
-  220                      | variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments
-  224                      | variable . T_PLUS_EQUAL expr
-  225                      | variable . T_MINUS_EQUAL expr
-  226                      | variable . T_MUL_EQUAL expr
-  227                      | variable . T_DIV_EQUAL expr
-  228                      | variable . T_CONCAT_EQUAL expr
-  229                      | variable . T_MOD_EQUAL expr
-  230                      | variable . T_AND_EQUAL expr
-  231                      | variable . T_OR_EQUAL expr
-  232                      | variable . T_XOR_EQUAL expr
-  233                      | variable . T_SL_EQUAL expr
-  234                      | variable . T_SR_EQUAL expr
-  381 r_variable: variable .
-  383 rw_variable: variable .
-
-    '='             shift, and go to state 251
-    T_SR_EQUAL      shift, and go to state 252
-    T_SL_EQUAL      shift, and go to state 253
-    T_XOR_EQUAL     shift, and go to state 254
-    T_OR_EQUAL      shift, and go to state 255
-    T_AND_EQUAL     shift, and go to state 256
-    T_MOD_EQUAL     shift, and go to state 257
-    T_CONCAT_EQUAL  shift, and go to state 258
-    T_DIV_EQUAL     shift, and go to state 259
-    T_MUL_EQUAL     shift, and go to state 260
-    T_MINUS_EQUAL   shift, and go to state 261
-    T_PLUS_EQUAL    shift, and go to state 262
-    T_AS            shift, and go to state 428
-
-    T_DEC     reduce using rule 383 (rw_variable)
-    T_INC     reduce using rule 383 (rw_variable)
-    $default  reduce using rule 381 (r_variable)
+   78 unticked_statement: T_FOREACH '(' variable . T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
+  236 expr_without_variable: variable . '=' expr
+  237                      | variable . '=' '&' variable
+  239                      | variable . '=' '&' T_NEW class_name_reference @42 ctor_arguments
+  243                      | variable . T_PLUS_EQUAL expr
+  244                      | variable . T_MINUS_EQUAL expr
+  245                      | variable . T_MUL_EQUAL expr
+  246                      | variable . T_DIV_EQUAL expr
+  247                      | variable . T_CONCAT_EQUAL expr
+  248                      | variable . T_MOD_EQUAL expr
+  249                      | variable . T_AND_EQUAL expr
+  250                      | variable . T_OR_EQUAL expr
+  251                      | variable . T_XOR_EQUAL expr
+  252                      | variable . T_SL_EQUAL expr
+  253                      | variable . T_SR_EQUAL expr
+  400 r_variable: variable .
+  402 rw_variable: variable .
+
+    '='             shift, and go to state 257
+    T_SR_EQUAL      shift, and go to state 258
+    T_SL_EQUAL      shift, and go to state 259
+    T_XOR_EQUAL     shift, and go to state 260
+    T_OR_EQUAL      shift, and go to state 261
+    T_AND_EQUAL     shift, and go to state 262
+    T_MOD_EQUAL     shift, and go to state 263
+    T_CONCAT_EQUAL  shift, and go to state 264
+    T_DIV_EQUAL     shift, and go to state 265
+    T_MUL_EQUAL     shift, and go to state 266
+    T_MINUS_EQUAL   shift, and go to state 267
+    T_PLUS_EQUAL    shift, and go to state 268
+    T_AS            shift, and go to state 435
+
+    T_DEC     reduce using rule 402 (rw_variable)
+    T_INC     reduce using rule 402 (rw_variable)
+    $default  reduce using rule 400 (r_variable)
 
 
-state 296
+state 302
 
-   74 unticked_statement: T_DECLARE @21 '(' . declare_list ')' declare_statement
+   83 unticked_statement: T_DECLARE @21 '(' . declare_list ')' declare_statement
 
-    T_STRING  shift, and go to state 429
+    T_STRING  shift, and go to state 436
 
-    declare_list  go to state 430
+    declare_list  go to state 437
 
 
-state 297
+state 303
 
-   53 unticked_statement: T_SWITCH '(' expr . ')' @16 switch_case_list
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 431
+   62 unticked_statement: T_SWITCH '(' expr . ')' @16 switch_case_list
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 438
 
 
-state 298
+state 304
 
-   55 unticked_statement: T_BREAK expr ';' .
+   64 unticked_statement: T_BREAK expr ';' .
 
-    $default  reduce using rule 55 (unticked_statement)
+    $default  reduce using rule 64 (unticked_statement)
 
 
-state 299
+state 305
 
-   57 unticked_statement: T_CONTINUE expr ';' .
+   66 unticked_statement: T_CONTINUE expr ';' .
 
-    $default  reduce using rule 57 (unticked_statement)
+    $default  reduce using rule 66 (unticked_statement)
 
 
-state 300
+state 306
 
-   83 unticked_statement: T_GOTO T_STRING ';' .
+   92 unticked_statement: T_GOTO T_STRING ';' .
 
-    $default  reduce using rule 83 (unticked_statement)
+    $default  reduce using rule 92 (unticked_statement)
 
 
-state 301
+state 307
 
-   25 constant_declaration: T_CONST T_STRING '=' . static_scalar
+   34 constant_declaration: T_CONST T_STRING '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 441
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 448
+    static_class_constant  go to state 449
 
 
-state 302
+state 308
 
-   59 unticked_statement: T_RETURN expr_without_variable ';' .
+   68 unticked_statement: T_RETURN expr_without_variable ';' .
 
-    $default  reduce using rule 59 (unticked_statement)
+    $default  reduce using rule 68 (unticked_statement)
 
 
-state 303
+state 309
 
-   60 unticked_statement: T_RETURN variable ';' .
+   69 unticked_statement: T_RETURN variable ';' .
 
-    $default  reduce using rule 60 (unticked_statement)
+    $default  reduce using rule 69 (unticked_statement)
 
 
-state 304
+state 310
 
-   81 unticked_statement: T_TRY @22 '{' . inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   90 unticked_statement: T_TRY @22 '{' . inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 443
+    inner_statement_list  go to state 450
 
 
-state 305
+state 311
 
-   82 unticked_statement: T_THROW expr ';' .
+   91 unticked_statement: T_THROW expr ';' .
 
-    $default  reduce using rule 82 (unticked_statement)
+    $default  reduce using rule 91 (unticked_statement)
 
 
-state 306
+state 312
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-   22 use_declaration: T_NS_SEPARATOR namespace_name .
-   23                | T_NS_SEPARATOR namespace_name . T_AS T_STRING
+   31 use_declaration: T_NS_SEPARATOR namespace_name .
+   32                | T_NS_SEPARATOR namespace_name . T_AS T_STRING
 
-    T_AS            shift, and go to state 444
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_AS            shift, and go to state 451
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    $default  reduce using rule 22 (use_declaration)
+    $default  reduce using rule 31 (use_declaration)
 
 
-state 307
+state 313
 
-   21 use_declaration: namespace_name T_AS . T_STRING
+   30 use_declaration: namespace_name T_AS . T_STRING
 
-    T_STRING  shift, and go to state 445
+    T_STRING  shift, and go to state 452
 
 
-state 308
+state 314
 
-   18 use_declarations: use_declarations ',' . use_declaration
+   27 use_declarations: use_declarations ',' . use_declaration
 
-    T_STRING        shift, and go to state 111
-    T_NS_SEPARATOR  shift, and go to state 176
+    T_STRING        shift, and go to state 114
+    T_NS_SEPARATOR  shift, and go to state 179
 
-    namespace_name   go to state 177
-    use_declaration  go to state 446
+    namespace_name   go to state 180
+    use_declaration  go to state 453
 
 
-state 309
+state 315
 
-   16 top_statement: T_USE use_declarations ';' .
+   17 top_statement: T_USE use_declarations ';' .
 
-    $default  reduce using rule 16 (top_statement)
+    $default  reduce using rule 17 (top_statement)
 
 
-state 310
+state 316
 
-  176 global_var: '$' '{' . expr '}'
+  191 global_var: '$' '{' . expr '}'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -10438,12 +10542,12 @@ state 310
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -10454,502 +10558,513 @@ state 310
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 447
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 454
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 311
+state 317
 
-  175 global_var: '$' r_variable .
+  190 global_var: '$' r_variable .
 
-    $default  reduce using rule 175 (global_var)
+    $default  reduce using rule 190 (global_var)
 
 
-state 312
+state 318
 
-  381 r_variable: variable .
+  400 r_variable: variable .
 
-    $default  reduce using rule 381 (r_variable)
+    $default  reduce using rule 400 (r_variable)
 
 
-state 313
+state 319
 
-  172 global_var_list: global_var_list ',' . global_var
+  187 global_var_list: global_var_list ',' . global_var
 
-    T_VARIABLE  shift, and go to state 180
-    '$'         shift, and go to state 181
+    T_VARIABLE  shift, and go to state 183
+    '$'         shift, and go to state 184
 
-    global_var  go to state 448
+    global_var  go to state 455
 
 
-state 314
+state 320
 
-   61 unticked_statement: T_GLOBAL global_var_list ';' .
+   70 unticked_statement: T_GLOBAL global_var_list ';' .
 
-    $default  reduce using rule 61 (unticked_statement)
+    $default  reduce using rule 70 (unticked_statement)
 
 
-state 315
+state 321
 
-  180 static_var_list: T_VARIABLE '=' . static_scalar
+  195 static_var_list: T_VARIABLE '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 449
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 456
+    static_class_constant  go to state 449
 
 
-state 316
+state 322
 
-  177 static_var_list: static_var_list ',' . T_VARIABLE
-  178                | static_var_list ',' . T_VARIABLE '=' static_scalar
+  192 static_var_list: static_var_list ',' . T_VARIABLE
+  193                | static_var_list ',' . T_VARIABLE '=' static_scalar
 
-    T_VARIABLE  shift, and go to state 450
+    T_VARIABLE  shift, and go to state 457
 
 
-state 317
+state 323
 
-   62 unticked_statement: T_STATIC static_var_list ';' .
+   71 unticked_statement: T_STATIC static_var_list ';' .
 
-    $default  reduce using rule 62 (unticked_statement)
+    $default  reduce using rule 71 (unticked_statement)
 
 
-state 318
+state 324
 
-   66 unticked_statement: T_UNSET '(' unset_variables . ')' ';'
-   92 unset_variables: unset_variables . ',' unset_variable
+   75 unticked_statement: T_UNSET '(' unset_variables . ')' ';'
+  101 unset_variables: unset_variables . ',' unset_variable
 
-    ','  shift, and go to state 451
-    ')'  shift, and go to state 452
+    ','  shift, and go to state 458
+    ')'  shift, and go to state 459
 
 
-state 319
+state 325
 
-   91 unset_variables: unset_variable .
+  100 unset_variables: unset_variable .
 
-    $default  reduce using rule 91 (unset_variables)
+    $default  reduce using rule 100 (unset_variables)
 
 
-state 320
+state 326
 
-   93 unset_variable: variable .
+  102 unset_variable: variable .
 
-    $default  reduce using rule 93 (unset_variable)
+    $default  reduce using rule 102 (unset_variable)
 
 
-state 321
+state 327
 
-  459 isset_variables: variable .
+  478 isset_variables: variable .
 
-    $default  reduce using rule 459 (isset_variables)
+    $default  reduce using rule 478 (isset_variables)
 
 
-state 322
+state 328
 
-  452 internal_functions_in_yacc: T_ISSET '(' isset_variables . ')'
-  461 isset_variables: isset_variables . ',' @68 variable
+  471 internal_functions_in_yacc: T_ISSET '(' isset_variables . ')'
+  480 isset_variables: isset_variables . ',' @70 variable
 
-    ','  shift, and go to state 453
-    ')'  shift, and go to state 454
+    ','  shift, and go to state 460
+    ')'  shift, and go to state 461
 
 
-state 323
+state 329
 
-  453 internal_functions_in_yacc: T_EMPTY '(' variable . ')'
+  472 internal_functions_in_yacc: T_EMPTY '(' variable . ')'
 
-    ')'  shift, and go to state 455
+    ')'  shift, and go to state 462
 
 
-state 324
+state 330
 
-   10 top_statement: T_HALT_COMPILER '(' ')' . ';'
+   11 top_statement: T_HALT_COMPILER '(' ')' . ';'
 
-    ';'  shift, and go to state 456
+    ';'  shift, and go to state 463
 
 
-state 325
+state 331
 
-  216 expr_without_variable: T_LIST '(' @39 . assignment_list ')' '=' expr
+  235 expr_without_variable: T_LIST '(' @41 . assignment_list ')' '=' expr
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_LIST          shift, and go to state 457
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    $default  reduce using rule 427 (assignment_list_element)
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 458
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    assignment_list                    go to state 459
-    assignment_list_element            go to state 460
+    T_STATIC        shift, and go to state 115
+    T_LIST          shift, and go to state 464
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    $default  reduce using rule 446 (assignment_list_element)
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 465
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    assignment_list                    go to state 466
+    assignment_list_element            go to state 467
 
 
-state 326
+state 332
 
-  437 non_empty_array_pair_list: '&' . w_variable
+  456 non_empty_array_pair_list: '&' . w_variable
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    w_variable                         go to state 461
-    variable                           go to state 462
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    w_variable                         go to state 468
+    variable                           go to state 469
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 327
+state 333
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  432 non_empty_array_pair_list: expr . T_DOUBLE_ARROW expr
-  433                          | expr .
-  436                          | expr . T_DOUBLE_ARROW '&' w_variable
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    T_DOUBLE_ARROW         shift, and go to state 463
-
-    $default  reduce using rule 433 (non_empty_array_pair_list)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  451 non_empty_array_pair_list: expr . T_DOUBLE_ARROW expr
+  452                          | expr .
+  455                          | expr . T_DOUBLE_ARROW '&' w_variable
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    T_DOUBLE_ARROW         shift, and go to state 470
+
+    $default  reduce using rule 452 (non_empty_array_pair_list)
 
 
-state 328
+state 334
 
-  290 expr_without_variable: T_ARRAY '(' array_pair_list . ')'
+  309 expr_without_variable: T_ARRAY '(' array_pair_list . ')'
 
-    ')'  shift, and go to state 464
+    ')'  shift, and go to state 471
 
 
-state 329
+state 335
 
-  429 array_pair_list: non_empty_array_pair_list . possible_comma
-  430 non_empty_array_pair_list: non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW expr
-  431                          | non_empty_array_pair_list . ',' expr
-  434                          | non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW '&' w_variable
-  435                          | non_empty_array_pair_list . ',' '&' w_variable
+  448 array_pair_list: non_empty_array_pair_list . possible_comma
+  449 non_empty_array_pair_list: non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW expr
+  450                          | non_empty_array_pair_list . ',' expr
+  453                          | non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW '&' w_variable
+  454                          | non_empty_array_pair_list . ',' '&' w_variable
 
-    ','  shift, and go to state 465
+    ','  shift, and go to state 472
 
-    $default  reduce using rule 373 (possible_comma)
+    $default  reduce using rule 392 (possible_comma)
 
-    possible_comma  go to state 466
+    possible_comma  go to state 473
 
 
-state 330
+state 336
 
-  444 encaps_var: T_VARIABLE '[' . @67 encaps_var_offset ']'
+  463 encaps_var: T_VARIABLE '[' . @69 encaps_var_offset ']'
 
-    $default  reduce using rule 443 (@67)
+    $default  reduce using rule 462 (@69)
 
-    @67  go to state 467
+    @69  go to state 474
 
 
-state 331
+state 337
 
-  445 encaps_var: T_VARIABLE T_OBJECT_OPERATOR . T_STRING
+  464 encaps_var: T_VARIABLE T_OBJECT_OPERATOR . T_STRING
 
-    T_STRING  shift, and go to state 468
+    T_STRING  shift, and go to state 475
 
 
-state 332
+state 338
 
-  352 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC .
+  371 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC .
 
-    $default  reduce using rule 352 (common_scalar)
+    $default  reduce using rule 371 (common_scalar)
 
 
-state 333
+state 339
 
-  441 encaps_list: T_ENCAPSED_AND_WHITESPACE encaps_var .
+  460 encaps_list: T_ENCAPSED_AND_WHITESPACE encaps_var .
 
-    $default  reduce using rule 441 (encaps_list)
+    $default  reduce using rule 460 (encaps_list)
 
 
-state 334
+state 340
 
-  363 scalar: T_STRING_VARNAME .
-  447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}'
+  382 scalar: T_STRING_VARNAME .
+  466 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}'
 
-    '['  shift, and go to state 469
+    '['  shift, and go to state 476
 
-    $default  reduce using rule 363 (scalar)
+    $default  reduce using rule 382 (scalar)
 
 
-state 335
+state 341
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  446 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES expr . '}'
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    '}'                    shift, and go to state 470
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  465 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES expr . '}'
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    '}'                    shift, and go to state 477
 
 
-state 336
+state 342
 
-  448 encaps_var: T_CURLY_OPEN variable . '}'
+  467 encaps_var: T_CURLY_OPEN variable . '}'
 
-    '}'  shift, and go to state 471
+    '}'  shift, and go to state 478
 
 
-state 337
+state 343
 
-  439 encaps_list: encaps_list T_ENCAPSED_AND_WHITESPACE .
+  458 encaps_list: encaps_list T_ENCAPSED_AND_WHITESPACE .
 
-    $default  reduce using rule 439 (encaps_list)
+    $default  reduce using rule 458 (encaps_list)
 
 
-state 338
+state 344
 
-  370 scalar: T_START_HEREDOC encaps_list T_END_HEREDOC .
+  389 scalar: T_START_HEREDOC encaps_list T_END_HEREDOC .
 
-    $default  reduce using rule 370 (scalar)
+    $default  reduce using rule 389 (scalar)
 
 
-state 339
+state 345
 
-  438 encaps_list: encaps_list encaps_var .
+  457 encaps_list: encaps_list encaps_var .
 
-    $default  reduce using rule 438 (encaps_list)
+    $default  reduce using rule 457 (encaps_list)
 
 
-state 340
+state 346
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name . '(' @52 function_call_parameter_list ')'
-  320 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
-  366 scalar: T_NAMESPACE T_NS_SEPARATOR namespace_name .
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name . '(' @54 function_call_parameter_list ')'
+  339 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
+  385 scalar: T_NAMESPACE T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
-    '('             shift, and go to state 472
+    T_NS_SEPARATOR  shift, and go to state 217
+    '('             shift, and go to state 479
 
-    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 320 (class_name)
-    $default                reduce using rule 366 (scalar)
+    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 339 (class_name)
+    $default                reduce using rule 385 (scalar)
 
 
-state 341
+state 347
 
-   15 top_statement: T_NAMESPACE '{' @3 . top_statement_list '}'
+   16 top_statement: T_NAMESPACE '{' @3 . top_statement_list '}'
 
     $default  reduce using rule 4 (top_statement_list)
 
-    top_statement_list  go to state 473
+    top_statement_list  go to state 480
 
 
-state 342
+state 348
 
-   11 top_statement: T_NAMESPACE namespace_name ';' .
+   12 top_statement: T_NAMESPACE namespace_name ';' .
 
-    $default  reduce using rule 11 (top_statement)
+    $default  reduce using rule 12 (top_statement)
 
 
-state 343
+state 349
 
-   13 top_statement: T_NAMESPACE namespace_name '{' . @2 top_statement_list '}'
+   14 top_statement: T_NAMESPACE namespace_name '{' . @2 top_statement_list '}'
 
-    $default  reduce using rule 12 (@2)
+    $default  reduce using rule 13 (@2)
 
-    @2  go to state 474
+    @2  go to state 481
 
 
-state 344
+state 350
 
-  307 function_call: T_NS_SEPARATOR namespace_name '(' . @53 function_call_parameter_list ')'
+  326 function_call: T_NS_SEPARATOR namespace_name '(' . @55 function_call_parameter_list ')'
 
-    $default  reduce using rule 306 (@53)
+    $default  reduce using rule 325 (@55)
 
-    @53  go to state 475
+    @55  go to state 482
 
 
-state 345
+state 351
 
-  272 expr_without_variable: '(' expr ')' .
+   22 annotation: T_ANNOTATION T_STRING '(' . annotation_args ')'
 
-    $default  reduce using rule 272 (expr_without_variable)
+    T_STRING                    shift, and go to state 483
+    T_CONSTANT_ENCAPSED_STRING  shift, and go to state 484
 
+    annotation_args  go to state 485
+    annotation_arg   go to state 486
 
-state 346
 
-   35 unticked_statement: '{' inner_statement_list '}' .
+state 352
+
+  291 expr_without_variable: '(' expr ')' .
 
-    $default  reduce using rule 35 (unticked_statement)
+    $default  reduce using rule 291 (expr_without_variable)
 
 
-state 347
+state 353
+
+   44 unticked_statement: '{' inner_statement_list '}' .
+
+    $default  reduce using rule 44 (unticked_statement)
 
-   27 inner_statement_list: inner_statement_list @4 . inner_statement
+
+state 354
+
+   36 inner_statement_list: inner_statement_list @4 . inner_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -11003,7 +11118,7 @@ state 347
     T_UNSET                     shift, and go to state 56
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
-    T_HALT_COMPILER             shift, and go to state 476
+    T_HALT_COMPILER             shift, and go to state 487
     T_CLASS                     shift, and go to state 60
     T_INTERFACE                 shift, and go to state 61
     T_LIST                      shift, and go to state 62
@@ -11014,133 +11129,133 @@ state 347
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                           go to state 80
-    inner_statement                          go to state 477
-    statement                                go to state 478
-    unticked_statement                       go to state 84
-    function_declaration_statement           go to state 479
-    class_declaration_statement              go to state 480
-    unticked_function_declaration_statement  go to state 87
-    unticked_class_declaration_statement     go to state 88
-    class_entry_type                         go to state 89
-    interface_entry                          go to state 90
-    expr_without_variable                    go to state 91
-    function                                 go to state 92
-    function_call                            go to state 93
-    class_name                               go to state 94
-    common_scalar                            go to state 95
-    scalar                                   go to state 96
-    expr                                     go to state 97
-    r_variable                               go to state 98
-    rw_variable                              go to state 99
-    variable                                 go to state 100
-    variable_without_objects                 go to state 101
-    static_member                            go to state 102
-    variable_class_name                      go to state 103
-    base_variable_with_function_calls        go to state 104
-    base_variable                            go to state 105
-    reference_variable                       go to state 106
-    compound_variable                        go to state 107
-    simple_indirect_reference                go to state 108
-    internal_functions_in_yacc               go to state 109
-    class_constant                           go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                           go to state 81
+    inner_statement                          go to state 488
+    statement                                go to state 489
+    unticked_statement                       go to state 87
+    function_declaration_statement           go to state 490
+    class_declaration_statement              go to state 491
+    unticked_function_declaration_statement  go to state 90
+    unticked_class_declaration_statement     go to state 91
+    class_entry_type                         go to state 92
+    interface_entry                          go to state 93
+    expr_without_variable                    go to state 94
+    function                                 go to state 95
+    function_call                            go to state 96
+    class_name                               go to state 97
+    common_scalar                            go to state 98
+    scalar                                   go to state 99
+    expr                                     go to state 100
+    r_variable                               go to state 101
+    rw_variable                              go to state 102
+    variable                                 go to state 103
+    variable_without_objects                 go to state 104
+    static_member                            go to state 105
+    variable_class_name                      go to state 106
+    base_variable_with_function_calls        go to state 107
+    base_variable                            go to state 108
+    reference_variable                       go to state 109
+    compound_variable                        go to state 110
+    simple_indirect_reference                go to state 111
+    internal_functions_in_yacc               go to state 112
+    class_constant                           go to state 113
 
 
-state 348
+state 355
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  409 compound_variable: '$' '{' expr . '}'
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    '}'                    shift, and go to state 481
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  428 compound_variable: '$' '{' expr . '}'
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    '}'                    shift, and go to state 492
 
 
-state 349
+state 356
 
-  291 expr_without_variable: '`' backticks_expr '`' .
+  310 expr_without_variable: '`' backticks_expr '`' .
 
-    $default  reduce using rule 291 (expr_without_variable)
+    $default  reduce using rule 310 (expr_without_variable)
 
 
-state 350
+state 357
 
-  369 scalar: '"' encaps_list '"' .
+  388 scalar: '"' encaps_list '"' .
 
-    $default  reduce using rule 369 (scalar)
+    $default  reduce using rule 388 (scalar)
 
 
-state 351
+state 358
 
     6 namespace_name: namespace_name T_NS_SEPARATOR T_STRING .
 
     $default  reduce using rule 6 (namespace_name)
 
 
-state 352
+state 359
 
-  303 function_call: namespace_name '(' @51 . function_call_parameter_list ')'
+  322 function_call: namespace_name '(' @53 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -11148,7 +11263,7 @@ state 352
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -11168,12 +11283,12 @@ state 352
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -11184,146 +11299,149 @@ state 352
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 483
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 495
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
 
-state 353
+state 360
 
-   24 constant_declaration: constant_declaration ',' T_STRING . '=' static_scalar
+   33 constant_declaration: constant_declaration ',' T_STRING . '=' static_scalar
 
-    '='  shift, and go to state 487
+    '='  shift, and go to state 499
 
 
-state 354
+state 361
 
-  108 extends_from: T_EXTENDS . fully_qualified_class_name
+  117 extends_from: T_EXTENDS . fully_qualified_class_name
 
-    T_STRING        shift, and go to state 111
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    T_STRING        shift, and go to state 114
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
 
-    namespace_name              go to state 490
-    fully_qualified_class_name  go to state 491
+    namespace_name              go to state 502
+    fully_qualified_class_name  go to state 503
 
 
-state 355
+state 362
 
-  101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from . @30 implements_list '{' class_statement_list '}'
+  110 unticked_class_declaration_statement: class_entry_type T_STRING extends_from . @30 implements_list '{' class_statement_list '}'
 
-    $default  reduce using rule 100 (@30)
+    $default  reduce using rule 109 (@30)
 
-    @30  go to state 492
+    @30  go to state 504
 
 
-state 356
+state 363
 
-  103 unticked_class_declaration_statement: interface_entry T_STRING @31 . interface_extends_list '{' class_statement_list '}'
+  112 unticked_class_declaration_statement: interface_entry T_STRING @31 . interface_extends_list '{' class_statement_list '}'
 
-    T_EXTENDS  shift, and go to state 493
+    T_EXTENDS  shift, and go to state 505
 
-    $default  reduce using rule 110 (interface_extends_list)
+    $default  reduce using rule 119 (interface_extends_list)
 
-    interface_extends_list  go to state 494
+    interface_extends_list  go to state 506
 
 
-state 357
+state 364
 
-   99 unticked_function_declaration_statement: function is_reference T_STRING . @29 '(' parameter_list ')' '{' inner_statement_list '}'
+  108 unticked_function_declaration_statement: function is_reference T_STRING . @29 '(' parameter_list ')' '{' inner_statement_list '}'
 
-    $default  reduce using rule 98 (@29)
+    $default  reduce using rule 107 (@29)
 
-    @29  go to state 495
+    @29  go to state 507
 
 
-state 358
+state 365
 
-  294 expr_without_variable: function is_reference '(' . @50 parameter_list ')' lexical_vars '{' inner_statement_list '}'
+  313 expr_without_variable: function is_reference '(' . @52 parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
-    $default  reduce using rule 293 (@50)
+    $default  reduce using rule 312 (@52)
 
-    @50  go to state 496
+    @52  go to state 508
 
 
-state 359
+state 366
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @54 function_call_parameter_list ')'
-  462 class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @56 function_call_parameter_list ')'
+  481 class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
 
-    '('  shift, and go to state 497
+    '('  shift, and go to state 509
 
-    $default  reduce using rule 462 (class_constant)
+    $default  reduce using rule 481 (class_constant)
 
 
-state 360
+state 367
 
-  311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects . '(' @55 function_call_parameter_list ')'
-  397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
+  330 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects . '(' @57 function_call_parameter_list ')'
+  416 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
 
-    '('  shift, and go to state 498
+    '('  shift, and go to state 510
 
-    $default  reduce using rule 397 (static_member)
+    $default  reduce using rule 416 (static_member)
 
 
-state 361
+state 368
 
-  395 variable_without_objects: reference_variable .
-  405 reference_variable: reference_variable . '[' dim_offset ']'
-  406                   | reference_variable . '{' expr '}'
+  414 variable_without_objects: reference_variable .
+  424 reference_variable: reference_variable . '[' dim_offset ']'
+  425                   | reference_variable . '{' expr '}'
 
-    '['  shift, and go to state 266
-    '{'  shift, and go to state 267
+    '['  shift, and go to state 272
+    '{'  shift, and go to state 273
 
-    $default  reduce using rule 395 (variable_without_objects)
+    $default  reduce using rule 414 (variable_without_objects)
 
 
-state 362
+state 369
 
-  396 variable_without_objects: simple_indirect_reference . reference_variable
-  421 simple_indirect_reference: simple_indirect_reference . '$'
+  415 variable_without_objects: simple_indirect_reference . reference_variable
+  440 simple_indirect_reference: simple_indirect_reference . '$'
 
     T_VARIABLE  shift, and go to state 33
-    '$'         shift, and go to state 268
+    '$'         shift, and go to state 274
 
-    reference_variable  go to state 499
-    compound_variable   go to state 107
+    reference_variable  go to state 511
+    compound_variable   go to state 110
 
 
-state 363
+state 370
 
-  244 expr_without_variable: expr T_LOGICAL_OR @44 . expr
+  263 expr_without_variable: expr T_LOGICAL_OR @46 . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -11350,12 +11468,12 @@ state 363
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -11366,100 +11484,100 @@ state 363
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 500
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 512
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 364
+state 371
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  247                      | expr T_LOGICAL_XOR expr .
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  266                      | expr T_LOGICAL_XOR expr .
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-    $default  reduce using rule 247 (expr_without_variable)
+    $default  reduce using rule 266 (expr_without_variable)
 
 
-state 365
+state 372
 
-  246 expr_without_variable: expr T_LOGICAL_AND @45 . expr
+  265 expr_without_variable: expr T_LOGICAL_AND @47 . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -11486,12 +11604,12 @@ state 365
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -11502,50 +11620,50 @@ state 365
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 501
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 513
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 366
+state 373
 
-  277 expr_without_variable: expr '?' ':' . @48 expr
+  296 expr_without_variable: expr '?' ':' . @50 expr
 
-    $default  reduce using rule 276 (@48)
+    $default  reduce using rule 295 (@50)
 
-    @48  go to state 502
+    @50  go to state 514
 
 
-state 367
+state 374
 
-  275 expr_without_variable: expr '?' @46 . expr ':' @47 expr
+  294 expr_without_variable: expr '?' @48 . expr ':' @49 expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -11572,12 +11690,12 @@ state 367
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -11588,41 +11706,41 @@ state 367
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 503
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 515
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 368
+state 375
 
-  240 expr_without_variable: expr T_BOOLEAN_OR @42 . expr
+  259 expr_without_variable: expr T_BOOLEAN_OR @44 . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -11649,12 +11767,12 @@ state 368
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -11665,41 +11783,41 @@ state 368
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 504
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 516
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 369
+state 376
 
-  242 expr_without_variable: expr T_BOOLEAN_AND @43 . expr
+  261 expr_without_variable: expr T_BOOLEAN_AND @45 . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -11726,12 +11844,12 @@ state 369
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -11742,1647 +11860,1647 @@ state 369
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 505
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 517
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 370
+state 377
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  248                      | expr '|' expr .
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  267                      | expr '|' expr .
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-    $default  reduce using rule 248 (expr_without_variable)
+    $default  reduce using rule 267 (expr_without_variable)
 
 
-state 371
+state 378
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  250                      | expr '^' expr .
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  269                      | expr '^' expr .
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-    $default  reduce using rule 250 (expr_without_variable)
+    $default  reduce using rule 269 (expr_without_variable)
 
 
-state 372
+state 379
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  249                      | expr '&' expr .
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  268                      | expr '&' expr .
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-    $default  reduce using rule 249 (expr_without_variable)
+    $default  reduce using rule 268 (expr_without_variable)
 
 
-state 373
+state 380
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  264                      | expr T_IS_NOT_IDENTICAL expr .
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  283                      | expr T_IS_NOT_IDENTICAL expr .
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
     T_IS_NOT_IDENTICAL  error (nonassociative)
     T_IS_IDENTICAL      error (nonassociative)
     T_IS_NOT_EQUAL      error (nonassociative)
     T_IS_EQUAL          error (nonassociative)
 
-    $default  reduce using rule 264 (expr_without_variable)
+    $default  reduce using rule 283 (expr_without_variable)
 
 
-state 374
+state 381
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  263                      | expr T_IS_IDENTICAL expr .
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  282                      | expr T_IS_IDENTICAL expr .
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
     T_IS_NOT_IDENTICAL  error (nonassociative)
     T_IS_IDENTICAL      error (nonassociative)
     T_IS_NOT_EQUAL      error (nonassociative)
     T_IS_EQUAL          error (nonassociative)
 
-    $default  reduce using rule 263 (expr_without_variable)
+    $default  reduce using rule 282 (expr_without_variable)
 
 
-state 375
+state 382
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  266                      | expr T_IS_NOT_EQUAL expr .
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  285                      | expr T_IS_NOT_EQUAL expr .
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
     T_IS_NOT_IDENTICAL  error (nonassociative)
     T_IS_IDENTICAL      error (nonassociative)
     T_IS_NOT_EQUAL      error (nonassociative)
     T_IS_EQUAL          error (nonassociative)
 
-    $default  reduce using rule 266 (expr_without_variable)
+    $default  reduce using rule 285 (expr_without_variable)
 
 
-state 376
+state 383
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  265                      | expr T_IS_EQUAL expr .
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  284                      | expr T_IS_EQUAL expr .
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
     T_IS_NOT_IDENTICAL  error (nonassociative)
     T_IS_IDENTICAL      error (nonassociative)
     T_IS_NOT_EQUAL      error (nonassociative)
     T_IS_EQUAL          error (nonassociative)
 
-    $default  reduce using rule 265 (expr_without_variable)
+    $default  reduce using rule 284 (expr_without_variable)
 
 
-state 377
+state 384
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  267                      | expr '<' expr .
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_SR          shift, and go to state 239
-    T_SL          shift, and go to state 240
-    '+'           shift, and go to state 241
-    '-'           shift, and go to state 242
-    '.'           shift, and go to state 243
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  286                      | expr '<' expr .
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_SR          shift, and go to state 245
+    T_SL          shift, and go to state 246
+    '+'           shift, and go to state 247
+    '-'           shift, and go to state 248
+    '.'           shift, and go to state 249
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
 
     '<'                    error (nonassociative)
     '>'                    error (nonassociative)
     T_IS_GREATER_OR_EQUAL  error (nonassociative)
     T_IS_SMALLER_OR_EQUAL  error (nonassociative)
 
-    $default  reduce using rule 267 (expr_without_variable)
+    $default  reduce using rule 286 (expr_without_variable)
 
 
-state 378
+state 385
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  269                      | expr '>' expr .
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_SR          shift, and go to state 239
-    T_SL          shift, and go to state 240
-    '+'           shift, and go to state 241
-    '-'           shift, and go to state 242
-    '.'           shift, and go to state 243
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  288                      | expr '>' expr .
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_SR          shift, and go to state 245
+    T_SL          shift, and go to state 246
+    '+'           shift, and go to state 247
+    '-'           shift, and go to state 248
+    '.'           shift, and go to state 249
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
 
     '<'                    error (nonassociative)
     '>'                    error (nonassociative)
     T_IS_GREATER_OR_EQUAL  error (nonassociative)
     T_IS_SMALLER_OR_EQUAL  error (nonassociative)
 
-    $default  reduce using rule 269 (expr_without_variable)
+    $default  reduce using rule 288 (expr_without_variable)
 
 
-state 379
+state 386
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  270                      | expr T_IS_GREATER_OR_EQUAL expr .
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_SR          shift, and go to state 239
-    T_SL          shift, and go to state 240
-    '+'           shift, and go to state 241
-    '-'           shift, and go to state 242
-    '.'           shift, and go to state 243
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  289                      | expr T_IS_GREATER_OR_EQUAL expr .
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_SR          shift, and go to state 245
+    T_SL          shift, and go to state 246
+    '+'           shift, and go to state 247
+    '-'           shift, and go to state 248
+    '.'           shift, and go to state 249
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
 
     '<'                    error (nonassociative)
     '>'                    error (nonassociative)
     T_IS_GREATER_OR_EQUAL  error (nonassociative)
     T_IS_SMALLER_OR_EQUAL  error (nonassociative)
 
-    $default  reduce using rule 270 (expr_without_variable)
+    $default  reduce using rule 289 (expr_without_variable)
 
 
-state 380
+state 387
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  268                      | expr T_IS_SMALLER_OR_EQUAL expr .
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_SR          shift, and go to state 239
-    T_SL          shift, and go to state 240
-    '+'           shift, and go to state 241
-    '-'           shift, and go to state 242
-    '.'           shift, and go to state 243
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  287                      | expr T_IS_SMALLER_OR_EQUAL expr .
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_SR          shift, and go to state 245
+    T_SL          shift, and go to state 246
+    '+'           shift, and go to state 247
+    '-'           shift, and go to state 248
+    '.'           shift, and go to state 249
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
 
     '<'                    error (nonassociative)
     '>'                    error (nonassociative)
     T_IS_GREATER_OR_EQUAL  error (nonassociative)
     T_IS_SMALLER_OR_EQUAL  error (nonassociative)
 
-    $default  reduce using rule 268 (expr_without_variable)
+    $default  reduce using rule 287 (expr_without_variable)
 
 
-state 381
+state 388
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  258                      | expr T_SR expr .
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '+'           shift, and go to state 241
-    '-'           shift, and go to state 242
-    '.'           shift, and go to state 243
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
-
-    $default  reduce using rule 258 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  277                      | expr T_SR expr .
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '+'           shift, and go to state 247
+    '-'           shift, and go to state 248
+    '.'           shift, and go to state 249
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
 
+    $default  reduce using rule 277 (expr_without_variable)
 
-state 382
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  257                      | expr T_SL expr .
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '+'           shift, and go to state 241
-    '-'           shift, and go to state 242
-    '.'           shift, and go to state 243
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
+state 389
 
-    $default  reduce using rule 257 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  276                      | expr T_SL expr .
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '+'           shift, and go to state 247
+    '-'           shift, and go to state 248
+    '.'           shift, and go to state 249
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
+
+    $default  reduce using rule 276 (expr_without_variable)
 
 
-state 383
+state 390
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  252                      | expr '+' expr .
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  271                      | expr '+' expr .
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
 
-    $default  reduce using rule 252 (expr_without_variable)
+    $default  reduce using rule 271 (expr_without_variable)
 
 
-state 384
+state 391
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  253                      | expr '-' expr .
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  272                      | expr '-' expr .
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
 
-    $default  reduce using rule 253 (expr_without_variable)
+    $default  reduce using rule 272 (expr_without_variable)
 
 
-state 385
+state 392
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  251                      | expr '.' expr .
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '*'           shift, and go to state 244
-    '/'           shift, and go to state 245
-    '%'           shift, and go to state 246
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  270                      | expr '.' expr .
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '*'           shift, and go to state 250
+    '/'           shift, and go to state 251
+    '%'           shift, and go to state 252
+    T_INSTANCEOF  shift, and go to state 253
 
-    $default  reduce using rule 251 (expr_without_variable)
+    $default  reduce using rule 270 (expr_without_variable)
 
 
-state 386
+state 393
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  254                      | expr '*' expr .
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_INSTANCEOF  shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  273                      | expr '*' expr .
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_INSTANCEOF  shift, and go to state 253
+
+    $default  reduce using rule 273 (expr_without_variable)
 
-    $default  reduce using rule 254 (expr_without_variable)
 
+state 394
 
-state 387
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  274                      | expr '/' expr .
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_INSTANCEOF  shift, and go to state 253
+
+    $default  reduce using rule 274 (expr_without_variable)
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  255                      | expr '/' expr .
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_INSTANCEOF  shift, and go to state 247
 
-    $default  reduce using rule 255 (expr_without_variable)
+state 395
 
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  275                      | expr '%' expr .
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_INSTANCEOF  shift, and go to state 253
 
-state 388
+    $default  reduce using rule 275 (expr_without_variable)
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  256                      | expr '%' expr .
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_INSTANCEOF  shift, and go to state 247
 
-    $default  reduce using rule 256 (expr_without_variable)
+state 396
 
+  290 expr_without_variable: expr T_INSTANCEOF class_name_reference .
 
-state 389
+    $default  reduce using rule 290 (expr_without_variable)
 
-  271 expr_without_variable: expr T_INSTANCEOF class_name_reference .
 
-    $default  reduce using rule 271 (expr_without_variable)
+state 397
 
+  237 expr_without_variable: variable '=' '&' . variable
+  239                      | variable '=' '&' . T_NEW class_name_reference @42 ctor_arguments
 
-state 390
+    T_NEW           shift, and go to state 518
+    T_STRING        shift, and go to state 114
+    T_VARIABLE      shift, and go to state 33
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 519
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
-  218 expr_without_variable: variable '=' '&' . variable
-  220                      | variable '=' '&' . T_NEW class_name_reference @40 ctor_arguments
 
-    T_NEW           shift, and go to state 506
-    T_STRING        shift, and go to state 111
-    T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 507
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+state 398
 
+  236 expr_without_variable: variable '=' expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-state 391
+    $default  reduce using rule 236 (expr_without_variable)
 
-  217 expr_without_variable: variable '=' expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 217 (expr_without_variable)
 
+state 399
 
-state 392
+  253 expr_without_variable: variable T_SR_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-  234 expr_without_variable: variable T_SR_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 234 (expr_without_variable)
+    $default  reduce using rule 253 (expr_without_variable)
 
 
-state 393
+state 400
 
-  233 expr_without_variable: variable T_SL_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 233 (expr_without_variable)
+  252 expr_without_variable: variable T_SL_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
+    $default  reduce using rule 252 (expr_without_variable)
 
-state 394
 
-  232 expr_without_variable: variable T_XOR_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 232 (expr_without_variable)
+state 401
 
+  251 expr_without_variable: variable T_XOR_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-state 395
+    $default  reduce using rule 251 (expr_without_variable)
 
-  231 expr_without_variable: variable T_OR_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 231 (expr_without_variable)
 
+state 402
 
-state 396
+  250 expr_without_variable: variable T_OR_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-  230 expr_without_variable: variable T_AND_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 230 (expr_without_variable)
+    $default  reduce using rule 250 (expr_without_variable)
 
 
-state 397
+state 403
 
-  229 expr_without_variable: variable T_MOD_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 229 (expr_without_variable)
+  249 expr_without_variable: variable T_AND_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
+    $default  reduce using rule 249 (expr_without_variable)
 
-state 398
 
-  228 expr_without_variable: variable T_CONCAT_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 228 (expr_without_variable)
+state 404
 
+  248 expr_without_variable: variable T_MOD_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-state 399
+    $default  reduce using rule 248 (expr_without_variable)
 
-  227 expr_without_variable: variable T_DIV_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 227 (expr_without_variable)
 
+state 405
 
-state 400
+  247 expr_without_variable: variable T_CONCAT_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-  226 expr_without_variable: variable T_MUL_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 226 (expr_without_variable)
+    $default  reduce using rule 247 (expr_without_variable)
 
 
-state 401
+state 406
 
-  225 expr_without_variable: variable T_MINUS_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 225 (expr_without_variable)
+  246 expr_without_variable: variable T_DIV_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
+    $default  reduce using rule 246 (expr_without_variable)
 
-state 402
 
-  224 expr_without_variable: variable T_PLUS_EQUAL expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 224 (expr_without_variable)
+state 407
 
+  245 expr_without_variable: variable T_MUL_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 245 (expr_without_variable)
 
-state 403
 
-  317 function_call: variable_without_objects '(' @58 . function_call_parameter_list ')'
+state 408
+
+  244 expr_without_variable: variable T_MINUS_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 244 (expr_without_variable)
+
+
+state 409
+
+  243 expr_without_variable: variable T_PLUS_EQUAL expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 243 (expr_without_variable)
+
+
+state 410
+
+  336 function_call: variable_without_objects '(' @60 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -13390,7 +13508,7 @@ state 403
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -13410,12 +13528,12 @@ state 403
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -13426,261 +13544,264 @@ state 403
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 508
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 520
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
 
-state 404
+state 411
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @56 function_call_parameter_list ')'
-  463 class_constant: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @58 function_call_parameter_list ')'
+  482 class_constant: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
 
-    '('  shift, and go to state 509
+    '('  shift, and go to state 521
 
-    $default  reduce using rule 463 (class_constant)
+    $default  reduce using rule 482 (class_constant)
 
 
-state 405
+state 412
 
-  315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects . '(' @57 function_call_parameter_list ')'
-  398 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
+  334 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects . '(' @59 function_call_parameter_list ')'
+  417 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
 
-    '('  shift, and go to state 510
+    '('  shift, and go to state 522
 
-    $default  reduce using rule 398 (static_member)
+    $default  reduce using rule 417 (static_member)
 
 
-state 406
+state 413
 
-  386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @61 . object_property @62 method_or_not variable_properties
+  405 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @63 . object_property @64 method_or_not variable_properties
 
-    T_STRING    shift, and go to state 511
+    T_STRING    shift, and go to state 523
     T_VARIABLE  shift, and go to state 33
-    '{'         shift, and go to state 512
-    '$'         shift, and go to state 77
+    '{'         shift, and go to state 524
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 513
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    object_property            go to state 514
-    object_dim_list            go to state 515
-    variable_name              go to state 516
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 525
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    object_property            go to state 526
+    object_dim_list            go to state 527
+    variable_name              go to state 528
+    simple_indirect_reference  go to state 369
 
 
-state 407
+state 414
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  411 dim_offset: expr .
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 411 (dim_offset)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  430 dim_offset: expr .
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 430 (dim_offset)
 
 
-state 408
+state 415
 
-  405 reference_variable: reference_variable '[' dim_offset . ']'
+  424 reference_variable: reference_variable '[' dim_offset . ']'
 
-    ']'  shift, and go to state 517
+    ']'  shift, and go to state 529
 
 
-state 409
+state 416
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  406 reference_variable: reference_variable '{' expr . '}'
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    '}'                    shift, and go to state 518
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  425 reference_variable: reference_variable '{' expr . '}'
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    '}'                    shift, and go to state 530
 
 
-state 410
+state 417
 
-  456 internal_functions_in_yacc: T_EVAL '(' expr ')' .
+  475 internal_functions_in_yacc: T_EVAL '(' expr ')' .
 
-    $default  reduce using rule 456 (internal_functions_in_yacc)
+    $default  reduce using rule 475 (internal_functions_in_yacc)
 
 
-state 411
+state 418
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name . '(' @52 function_call_parameter_list ')'
-  320 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name . '(' @54 function_call_parameter_list ')'
+  339 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
-    '('             shift, and go to state 472
+    T_NS_SEPARATOR  shift, and go to state 217
+    '('             shift, and go to state 479
 
-    $default  reduce using rule 320 (class_name)
+    $default  reduce using rule 339 (class_name)
 
 
-state 412
+state 419
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @54 function_call_parameter_list ')'
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @56 function_call_parameter_list ')'
 
-    '('  shift, and go to state 497
+    '('  shift, and go to state 509
 
 
-state 413
+state 420
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @56 function_call_parameter_list ')'
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @58 function_call_parameter_list ')'
 
-    '('  shift, and go to state 509
+    '('  shift, and go to state 521
 
 
-state 414
+state 421
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  320 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
+  339 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    $default  reduce using rule 320 (class_name)
+    $default  reduce using rule 339 (class_name)
 
 
-state 415
+state 422
 
-  397 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
+  416 static_member: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
 
-    $default  reduce using rule 397 (static_member)
+    $default  reduce using rule 416 (static_member)
 
 
-state 416
+state 423
 
-  341 ctor_arguments: '(' . function_call_parameter_list ')'
+  360 ctor_arguments: '(' . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -13688,7 +13809,7 @@ state 416
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -13708,12 +13829,12 @@ state 416
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -13724,644 +13845,647 @@ state 416
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 519
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 531
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
 
-state 417
+state 424
 
-  222 expr_without_variable: T_NEW class_name_reference @41 ctor_arguments .
+  241 expr_without_variable: T_NEW class_name_reference @43 ctor_arguments .
 
-    $default  reduce using rule 222 (expr_without_variable)
+    $default  reduce using rule 241 (expr_without_variable)
 
 
-state 418
+state 425
 
-  398 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
+  417 static_member: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects .
 
-    $default  reduce using rule 398 (static_member)
+    $default  reduce using rule 417 (static_member)
 
 
-state 419
+state 426
 
-  329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @59 . object_property @60 dynamic_class_name_variable_properties
+  348 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @61 . object_property @62 dynamic_class_name_variable_properties
 
-    T_STRING    shift, and go to state 511
+    T_STRING    shift, and go to state 523
     T_VARIABLE  shift, and go to state 33
-    '{'         shift, and go to state 512
-    '$'         shift, and go to state 77
+    '{'         shift, and go to state 524
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 513
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    object_property            go to state 520
-    object_dim_list            go to state 515
-    variable_name              go to state 516
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 525
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    object_property            go to state 532
+    object_dim_list            go to state 527
+    variable_name              go to state 528
+    simple_indirect_reference  go to state 369
 
 
-state 420
+state 427
 
-  336 exit_expr: '(' expr ')' .
+  355 exit_expr: '(' expr ')' .
 
-    $default  reduce using rule 336 (exit_expr)
+    $default  reduce using rule 355 (exit_expr)
 
 
-state 421
+state 428
 
-   38 unticked_statement: T_IF '(' expr ')' . @5 statement @6 elseif_list else_single
-   41                   | T_IF '(' expr ')' . ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
+   47 unticked_statement: T_IF '(' expr ')' . @5 statement @6 elseif_list else_single
+   50                   | T_IF '(' expr ')' . ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
 
-    ':'  shift, and go to state 521
+    ':'  shift, and go to state 533
 
-    $default  reduce using rule 36 (@5)
+    $default  reduce using rule 45 (@5)
 
-    @5  go to state 522
+    @5  go to state 534
 
 
-state 422
+state 429
 
-  208 echo_expr_list: echo_expr_list ',' expr .
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 208 (echo_expr_list)
+  227 echo_expr_list: echo_expr_list ',' expr .
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 227 (echo_expr_list)
 
 
-state 423
+state 430
 
-   47 unticked_statement: T_DO @11 statement T_WHILE . '(' @12 expr ')' ';'
+   56 unticked_statement: T_DO @11 statement T_WHILE . '(' @12 expr ')' ';'
 
-    '('  shift, and go to state 523
+    '('  shift, and go to state 535
 
 
-state 424
+state 431
 
-   44 unticked_statement: T_WHILE '(' @9 expr . ')' @10 while_statement
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 524
+   53 unticked_statement: T_WHILE '(' @9 expr . ')' @10 while_statement
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 536
 
 
-state 425
+state 432
 
-   51 unticked_statement: T_FOR '(' for_expr ';' . @13 for_expr ';' @14 for_expr ')' @15 for_statement
+   60 unticked_statement: T_FOR '(' for_expr ';' . @13 for_expr ';' @14 for_expr ')' @15 for_statement
 
-    $default  reduce using rule 48 (@13)
+    $default  reduce using rule 57 (@13)
 
-    @13  go to state 525
+    @13  go to state 537
 
 
-state 426
+state 433
 
-  213 non_empty_for_expr: non_empty_for_expr ',' . @38 expr
+  232 non_empty_for_expr: non_empty_for_expr ',' . @40 expr
 
-    $default  reduce using rule 212 (@38)
+    $default  reduce using rule 231 (@40)
 
-    @38  go to state 526
+    @40  go to state 538
 
 
-state 427
+state 434
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS . @19 variable foreach_optional_arg ')' @20 foreach_statement
+   81 unticked_statement: T_FOREACH '(' expr_without_variable T_AS . @19 variable foreach_optional_arg ')' @20 foreach_statement
 
-    $default  reduce using rule 70 (@19)
+    $default  reduce using rule 79 (@19)
 
-    @19  go to state 527
+    @19  go to state 539
 
 
-state 428
+state 435
 
-   69 unticked_statement: T_FOREACH '(' variable T_AS . @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
+   78 unticked_statement: T_FOREACH '(' variable T_AS . @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement
 
-    $default  reduce using rule 67 (@17)
+    $default  reduce using rule 76 (@17)
 
-    @17  go to state 528
+    @17  go to state 540
 
 
-state 429
+state 436
 
-  126 declare_list: T_STRING . '=' static_scalar
+  135 declare_list: T_STRING . '=' static_scalar
 
-    '='  shift, and go to state 529
+    '='  shift, and go to state 541
 
 
-state 430
+state 437
 
-   74 unticked_statement: T_DECLARE @21 '(' declare_list . ')' declare_statement
-  127 declare_list: declare_list . ',' T_STRING '=' static_scalar
+   83 unticked_statement: T_DECLARE @21 '(' declare_list . ')' declare_statement
+  136 declare_list: declare_list . ',' T_STRING '=' static_scalar
 
-    ','  shift, and go to state 530
-    ')'  shift, and go to state 531
+    ','  shift, and go to state 542
+    ')'  shift, and go to state 543
 
 
-state 431
+state 438
 
-   53 unticked_statement: T_SWITCH '(' expr ')' . @16 switch_case_list
+   62 unticked_statement: T_SWITCH '(' expr ')' . @16 switch_case_list
 
-    $default  reduce using rule 52 (@16)
+    $default  reduce using rule 61 (@16)
 
-    @16  go to state 532
+    @16  go to state 544
 
 
-state 432
+state 439
 
-  358 static_scalar: '+' . static_scalar
+  377 static_scalar: '+' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 533
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 545
+    static_class_constant  go to state 449
 
 
-state 433
+state 440
 
-  359 static_scalar: '-' . static_scalar
+  378 static_scalar: '-' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 534
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 546
+    static_class_constant  go to state 449
 
 
-state 434
+state 441
 
-  360 static_scalar: T_ARRAY . '(' static_array_pair_list ')'
+  379 static_scalar: T_ARRAY . '(' static_array_pair_list ')'
 
-    '('  shift, and go to state 535
+    '('  shift, and go to state 547
 
 
-state 435
+state 442
 
-  352 common_scalar: T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC
-  353              | T_START_HEREDOC . T_END_HEREDOC
+  371 common_scalar: T_START_HEREDOC . T_ENCAPSED_AND_WHITESPACE T_END_HEREDOC
+  372              | T_START_HEREDOC . T_END_HEREDOC
 
-    T_ENCAPSED_AND_WHITESPACE  shift, and go to state 536
-    T_END_HEREDOC              shift, and go to state 196
+    T_ENCAPSED_AND_WHITESPACE  shift, and go to state 548
+    T_END_HEREDOC              shift, and go to state 199
 
 
-state 436
+state 443
 
-  320 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
-  356 static_scalar: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+  339 class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+  375 static_scalar: T_NAMESPACE . T_NS_SEPARATOR namespace_name
 
-    T_NS_SEPARATOR  shift, and go to state 537
+    T_NS_SEPARATOR  shift, and go to state 549
 
 
-state 437
+state 444
 
-  321 class_name: T_NS_SEPARATOR . namespace_name
-  357 static_scalar: T_NS_SEPARATOR . namespace_name
+  340 class_name: T_NS_SEPARATOR . namespace_name
+  376 static_scalar: T_NS_SEPARATOR . namespace_name
 
-    T_STRING  shift, and go to state 111
+    T_STRING  shift, and go to state 114
 
-    namespace_name  go to state 538
+    namespace_name  go to state 550
 
 
-state 438
+state 445
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  319 class_name: namespace_name .
-  355 static_scalar: namespace_name .
+  338 class_name: namespace_name .
+  374 static_scalar: namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 319 (class_name)
-    $default                reduce using rule 355 (static_scalar)
+    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 338 (class_name)
+    $default                reduce using rule 374 (static_scalar)
 
 
-state 439
+state 446
 
-  362 static_class_constant: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING
+  381 static_class_constant: class_name . T_PAAMAYIM_NEKUDOTAYIM T_STRING
 
-    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 539
+    T_PAAMAYIM_NEKUDOTAYIM  shift, and go to state 551
 
 
-state 440
+state 447
 
-  354 static_scalar: common_scalar .
+  373 static_scalar: common_scalar .
 
-    $default  reduce using rule 354 (static_scalar)
+    $default  reduce using rule 373 (static_scalar)
 
 
-state 441
+state 448
 
-   25 constant_declaration: T_CONST T_STRING '=' static_scalar .
+   34 constant_declaration: T_CONST T_STRING '=' static_scalar .
 
-    $default  reduce using rule 25 (constant_declaration)
+    $default  reduce using rule 34 (constant_declaration)
 
 
-state 442
+state 449
 
-  361 static_scalar: static_class_constant .
+  380 static_scalar: static_class_constant .
 
-    $default  reduce using rule 361 (static_scalar)
+    $default  reduce using rule 380 (static_scalar)
 
 
-state 443
+state 450
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list . '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list . '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    '}'  shift, and go to state 540
+    '}'  shift, and go to state 552
 
-    $default  reduce using rule 26 (@4)
+    $default  reduce using rule 35 (@4)
 
-    @4  go to state 347
+    @4  go to state 354
 
 
-state 444
+state 451
 
-   23 use_declaration: T_NS_SEPARATOR namespace_name T_AS . T_STRING
+   32 use_declaration: T_NS_SEPARATOR namespace_name T_AS . T_STRING
 
-    T_STRING  shift, and go to state 541
+    T_STRING  shift, and go to state 553
 
 
-state 445
+state 452
 
-   21 use_declaration: namespace_name T_AS T_STRING .
+   30 use_declaration: namespace_name T_AS T_STRING .
 
-    $default  reduce using rule 21 (use_declaration)
+    $default  reduce using rule 30 (use_declaration)
 
 
-state 446
+state 453
 
-   18 use_declarations: use_declarations ',' use_declaration .
+   27 use_declarations: use_declarations ',' use_declaration .
 
-    $default  reduce using rule 18 (use_declarations)
+    $default  reduce using rule 27 (use_declarations)
 
 
-state 447
+state 454
 
-  176 global_var: '$' '{' expr . '}'
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    '}'                    shift, and go to state 542
+  191 global_var: '$' '{' expr . '}'
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    '}'                    shift, and go to state 554
 
 
-state 448
+state 455
 
-  172 global_var_list: global_var_list ',' global_var .
+  187 global_var_list: global_var_list ',' global_var .
 
-    $default  reduce using rule 172 (global_var_list)
+    $default  reduce using rule 187 (global_var_list)
 
 
-state 449
+state 456
 
-  180 static_var_list: T_VARIABLE '=' static_scalar .
+  195 static_var_list: T_VARIABLE '=' static_scalar .
 
-    $default  reduce using rule 180 (static_var_list)
+    $default  reduce using rule 195 (static_var_list)
 
 
-state 450
+state 457
 
-  177 static_var_list: static_var_list ',' T_VARIABLE .
-  178                | static_var_list ',' T_VARIABLE . '=' static_scalar
+  192 static_var_list: static_var_list ',' T_VARIABLE .
+  193                | static_var_list ',' T_VARIABLE . '=' static_scalar
 
-    '='  shift, and go to state 543
+    '='  shift, and go to state 555
 
-    $default  reduce using rule 177 (static_var_list)
+    $default  reduce using rule 192 (static_var_list)
 
 
-state 451
+state 458
 
-   92 unset_variables: unset_variables ',' . unset_variable
+  101 unset_variables: unset_variables ',' . unset_variable
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    unset_variable                     go to state 544
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 320
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    unset_variable                     go to state 556
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 326
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 452
+state 459
 
-   66 unticked_statement: T_UNSET '(' unset_variables ')' . ';'
+   75 unticked_statement: T_UNSET '(' unset_variables ')' . ';'
 
-    ';'  shift, and go to state 545
+    ';'  shift, and go to state 557
 
 
-state 453
+state 460
 
-  461 isset_variables: isset_variables ',' . @68 variable
+  480 isset_variables: isset_variables ',' . @70 variable
 
-    $default  reduce using rule 460 (@68)
+    $default  reduce using rule 479 (@70)
 
-    @68  go to state 546
+    @70  go to state 558
 
 
-state 454
+state 461
 
-  452 internal_functions_in_yacc: T_ISSET '(' isset_variables ')' .
+  471 internal_functions_in_yacc: T_ISSET '(' isset_variables ')' .
 
-    $default  reduce using rule 452 (internal_functions_in_yacc)
+    $default  reduce using rule 471 (internal_functions_in_yacc)
 
 
-state 455
+state 462
 
-  453 internal_functions_in_yacc: T_EMPTY '(' variable ')' .
+  472 internal_functions_in_yacc: T_EMPTY '(' variable ')' .
 
-    $default  reduce using rule 453 (internal_functions_in_yacc)
+    $default  reduce using rule 472 (internal_functions_in_yacc)
 
 
-state 456
+state 463
 
-   10 top_statement: T_HALT_COMPILER '(' ')' ';' .
+   11 top_statement: T_HALT_COMPILER '(' ')' ';' .
 
-    $default  reduce using rule 10 (top_statement)
+    $default  reduce using rule 11 (top_statement)
 
 
-state 457
+state 464
 
-  426 assignment_list_element: T_LIST . '(' @66 assignment_list ')'
+  445 assignment_list_element: T_LIST . '(' @68 assignment_list ')'
 
-    '('  shift, and go to state 547
+    '('  shift, and go to state 559
 
 
-state 458
+state 465
 
-  424 assignment_list_element: variable .
+  443 assignment_list_element: variable .
 
-    $default  reduce using rule 424 (assignment_list_element)
+    $default  reduce using rule 443 (assignment_list_element)
 
 
-state 459
+state 466
 
-  216 expr_without_variable: T_LIST '(' @39 assignment_list . ')' '=' expr
-  422 assignment_list: assignment_list . ',' assignment_list_element
+  235 expr_without_variable: T_LIST '(' @41 assignment_list . ')' '=' expr
+  441 assignment_list: assignment_list . ',' assignment_list_element
 
-    ','  shift, and go to state 548
-    ')'  shift, and go to state 549
+    ','  shift, and go to state 560
+    ')'  shift, and go to state 561
 
 
-state 460
+state 467
 
-  423 assignment_list: assignment_list_element .
+  442 assignment_list: assignment_list_element .
 
-    $default  reduce using rule 423 (assignment_list)
+    $default  reduce using rule 442 (assignment_list)
 
 
-state 461
+state 468
 
-  437 non_empty_array_pair_list: '&' w_variable .
+  456 non_empty_array_pair_list: '&' w_variable .
 
-    $default  reduce using rule 437 (non_empty_array_pair_list)
+    $default  reduce using rule 456 (non_empty_array_pair_list)
 
 
-state 462
+state 469
 
-  382 w_variable: variable .
+  401 w_variable: variable .
 
-    $default  reduce using rule 382 (w_variable)
+    $default  reduce using rule 401 (w_variable)
 
 
-state 463
+state 470
 
-  432 non_empty_array_pair_list: expr T_DOUBLE_ARROW . expr
-  436                          | expr T_DOUBLE_ARROW . '&' w_variable
+  451 non_empty_array_pair_list: expr T_DOUBLE_ARROW . expr
+  455                          | expr T_DOUBLE_ARROW . '&' w_variable
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -14369,7 +14493,7 @@ state 463
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 550
+    '&'                         shift, and go to state 562
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -14389,12 +14513,12 @@ state 463
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -14405,52 +14529,52 @@ state 463
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 551
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 563
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 464
+state 471
 
-  290 expr_without_variable: T_ARRAY '(' array_pair_list ')' .
+  309 expr_without_variable: T_ARRAY '(' array_pair_list ')' .
 
-    $default  reduce using rule 290 (expr_without_variable)
+    $default  reduce using rule 309 (expr_without_variable)
 
 
-state 465
+state 472
 
-  374 possible_comma: ',' .
-  430 non_empty_array_pair_list: non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW expr
-  431                          | non_empty_array_pair_list ',' . expr
-  434                          | non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW '&' w_variable
-  435                          | non_empty_array_pair_list ',' . '&' w_variable
+  393 possible_comma: ',' .
+  449 non_empty_array_pair_list: non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW expr
+  450                          | non_empty_array_pair_list ',' . expr
+  453                          | non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW '&' w_variable
+  454                          | non_empty_array_pair_list ',' . '&' w_variable
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -14458,7 +14582,7 @@ state 465
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 552
+    '&'                         shift, and go to state 564
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -14478,12 +14602,12 @@ state 465
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -14494,68 +14618,68 @@ state 465
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 374 (possible_comma)
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 553
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 393 (possible_comma)
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 565
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 466
+state 473
 
-  429 array_pair_list: non_empty_array_pair_list possible_comma .
+  448 array_pair_list: non_empty_array_pair_list possible_comma .
 
-    $default  reduce using rule 429 (array_pair_list)
+    $default  reduce using rule 448 (array_pair_list)
 
 
-state 467
+state 474
 
-  444 encaps_var: T_VARIABLE '[' @67 . encaps_var_offset ']'
+  463 encaps_var: T_VARIABLE '[' @69 . encaps_var_offset ']'
 
-    T_STRING      shift, and go to state 554
-    T_VARIABLE    shift, and go to state 555
-    T_NUM_STRING  shift, and go to state 556
+    T_STRING      shift, and go to state 566
+    T_VARIABLE    shift, and go to state 567
+    T_NUM_STRING  shift, and go to state 568
 
-    encaps_var_offset  go to state 557
+    encaps_var_offset  go to state 569
 
 
-state 468
+state 475
 
-  445 encaps_var: T_VARIABLE T_OBJECT_OPERATOR T_STRING .
+  464 encaps_var: T_VARIABLE T_OBJECT_OPERATOR T_STRING .
 
-    $default  reduce using rule 445 (encaps_var)
+    $default  reduce using rule 464 (encaps_var)
 
 
-state 469
+state 476
 
-  447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}'
+  466 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -14582,12 +14706,12 @@ state 469
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -14598,85 +14722,85 @@ state 469
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 558
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 570
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 470
+state 477
 
-  446 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES expr '}' .
+  465 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES expr '}' .
 
-    $default  reduce using rule 446 (encaps_var)
+    $default  reduce using rule 465 (encaps_var)
 
 
-state 471
+state 478
 
-  448 encaps_var: T_CURLY_OPEN variable '}' .
+  467 encaps_var: T_CURLY_OPEN variable '}' .
 
-    $default  reduce using rule 448 (encaps_var)
+    $default  reduce using rule 467 (encaps_var)
 
 
-state 472
+state 479
 
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' . @52 function_call_parameter_list ')'
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' . @54 function_call_parameter_list ')'
 
-    $default  reduce using rule 304 (@52)
+    $default  reduce using rule 323 (@54)
 
-    @52  go to state 559
+    @54  go to state 571
 
 
-state 473
+state 480
 
     3 top_statement_list: top_statement_list . @1 top_statement
-   15 top_statement: T_NAMESPACE '{' @3 top_statement_list . '}'
+   16 top_statement: T_NAMESPACE '{' @3 top_statement_list . '}'
 
-    '}'  shift, and go to state 560
+    '}'  shift, and go to state 572
 
     $default  reduce using rule 2 (@1)
 
     @1  go to state 4
 
 
-state 474
+state 481
 
-   13 top_statement: T_NAMESPACE namespace_name '{' @2 . top_statement_list '}'
+   14 top_statement: T_NAMESPACE namespace_name '{' @2 . top_statement_list '}'
 
     $default  reduce using rule 4 (top_statement_list)
 
-    top_statement_list  go to state 561
+    top_statement_list  go to state 573
 
 
-state 475
+state 482
 
-  307 function_call: T_NS_SEPARATOR namespace_name '(' @53 . function_call_parameter_list ')'
+  326 function_call: T_NS_SEPARATOR namespace_name '(' @55 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -14684,7 +14808,7 @@ state 475
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -14704,12 +14828,12 @@ state 475
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -14720,450 +14844,517 @@ state 475
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 562
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 574
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
 
-state 476
+state 483
 
-   32 inner_statement: T_HALT_COMPILER . '(' ')' ';'
+   26 annotation_arg: T_STRING . '=' T_CONSTANT_ENCAPSED_STRING
 
-    '('  shift, and go to state 563
+    '='  shift, and go to state 575
 
 
-state 477
+state 484
 
-   27 inner_statement_list: inner_statement_list @4 inner_statement .
+   25 annotation_arg: T_CONSTANT_ENCAPSED_STRING .
 
-    $default  reduce using rule 27 (inner_statement_list)
+    $default  reduce using rule 25 (annotation_arg)
 
 
-state 478
+state 485
 
-   29 inner_statement: statement .
+   22 annotation: T_ANNOTATION T_STRING '(' annotation_args . ')'
 
-    $default  reduce using rule 29 (inner_statement)
+    ')'  shift, and go to state 576
 
 
-state 479
+state 486
 
-   30 inner_statement: function_declaration_statement .
+   23 annotation_args: annotation_arg .
+   24                | annotation_arg . ',' annotation_arg
 
-    $default  reduce using rule 30 (inner_statement)
+    ','  shift, and go to state 577
 
+    $default  reduce using rule 23 (annotation_args)
 
-state 480
 
-   31 inner_statement: class_declaration_statement .
+state 487
 
-    $default  reduce using rule 31 (inner_statement)
+   41 inner_statement: T_HALT_COMPILER . '(' ')' ';'
 
+    '('  shift, and go to state 578
 
-state 481
 
-  409 compound_variable: '$' '{' expr '}' .
+state 488
+
+   36 inner_statement_list: inner_statement_list @4 inner_statement .
+
+    $default  reduce using rule 36 (inner_statement_list)
+
+
+state 489
+
+   38 inner_statement: statement .
+
+    $default  reduce using rule 38 (inner_statement)
+
+
+state 490
+
+   39 inner_statement: function_declaration_statement .
+
+    $default  reduce using rule 39 (inner_statement)
+
+
+state 491
+
+   40 inner_statement: class_declaration_statement .
+
+    $default  reduce using rule 40 (inner_statement)
+
+
+state 492
+
+  428 compound_variable: '$' '{' expr '}' .
+
+    $default  reduce using rule 428 (compound_variable)
+
+
+state 493
+
+  181 non_empty_function_call_parameter_list: '&' . w_variable
 
-    $default  reduce using rule 409 (compound_variable)
+    T_STRING        shift, and go to state 114
+    T_VARIABLE      shift, and go to state 33
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    w_variable                         go to state 579
+    variable                           go to state 469
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 482
+state 494
 
-  168 non_empty_function_call_parameter_list: '&' . w_variable
+   19 annotations: annotations . annotation
+  182 non_empty_function_call_parameter_list: annotations . variable
+  183                                       | annotations . '&' w_variable
 
-    T_STRING        shift, and go to state 111
+    '&'             shift, and go to state 580
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    w_variable                         go to state 564
-    variable                           go to state 462
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    T_ANNOTATION    shift, and go to state 74
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    annotation                         go to state 219
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 581
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 483
+state 495
 
-  303 function_call: namespace_name '(' @51 function_call_parameter_list . ')'
+  322 function_call: namespace_name '(' @53 function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 565
+    ')'  shift, and go to state 582
 
 
-state 484
+state 496
 
-  164 function_call_parameter_list: non_empty_function_call_parameter_list .
-  169 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list . ',' expr_without_variable
-  170                                       | non_empty_function_call_parameter_list . ',' variable
-  171                                       | non_empty_function_call_parameter_list . ',' '&' w_variable
+  177 function_call_parameter_list: non_empty_function_call_parameter_list .
+  184 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list . ',' expr_without_variable
+  185                                       | non_empty_function_call_parameter_list . ',' variable
+  186                                       | non_empty_function_call_parameter_list . ',' '&' w_variable
 
-    ','  shift, and go to state 566
+    ','  shift, and go to state 583
 
-    $default  reduce using rule 164 (function_call_parameter_list)
+    $default  reduce using rule 177 (function_call_parameter_list)
 
 
-state 485
+state 497
 
-  166 non_empty_function_call_parameter_list: expr_without_variable .
-  380 expr: expr_without_variable .
+  179 non_empty_function_call_parameter_list: expr_without_variable .
+  399 expr: expr_without_variable .
 
-    ','       reduce using rule 166 (non_empty_function_call_parameter_list)
-    ')'       reduce using rule 166 (non_empty_function_call_parameter_list)
-    $default  reduce using rule 380 (expr)
+    ','       reduce using rule 179 (non_empty_function_call_parameter_list)
+    ')'       reduce using rule 179 (non_empty_function_call_parameter_list)
+    $default  reduce using rule 399 (expr)
 
 
-state 486
+state 498
 
-  167 non_empty_function_call_parameter_list: variable .
-  217 expr_without_variable: variable . '=' expr
-  218                      | variable . '=' '&' variable
-  220                      | variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments
-  224                      | variable . T_PLUS_EQUAL expr
-  225                      | variable . T_MINUS_EQUAL expr
-  226                      | variable . T_MUL_EQUAL expr
-  227                      | variable . T_DIV_EQUAL expr
-  228                      | variable . T_CONCAT_EQUAL expr
-  229                      | variable . T_MOD_EQUAL expr
-  230                      | variable . T_AND_EQUAL expr
-  231                      | variable . T_OR_EQUAL expr
-  232                      | variable . T_XOR_EQUAL expr
-  233                      | variable . T_SL_EQUAL expr
-  234                      | variable . T_SR_EQUAL expr
-  381 r_variable: variable .
-  383 rw_variable: variable .
-
-    '='             shift, and go to state 251
-    T_SR_EQUAL      shift, and go to state 252
-    T_SL_EQUAL      shift, and go to state 253
-    T_XOR_EQUAL     shift, and go to state 254
-    T_OR_EQUAL      shift, and go to state 255
-    T_AND_EQUAL     shift, and go to state 256
-    T_MOD_EQUAL     shift, and go to state 257
-    T_CONCAT_EQUAL  shift, and go to state 258
-    T_DIV_EQUAL     shift, and go to state 259
-    T_MUL_EQUAL     shift, and go to state 260
-    T_MINUS_EQUAL   shift, and go to state 261
-    T_PLUS_EQUAL    shift, and go to state 262
-
-    ','       reduce using rule 167 (non_empty_function_call_parameter_list)
-    T_DEC     reduce using rule 383 (rw_variable)
-    T_INC     reduce using rule 383 (rw_variable)
-    ')'       reduce using rule 167 (non_empty_function_call_parameter_list)
-    $default  reduce using rule 381 (r_variable)
+  180 non_empty_function_call_parameter_list: variable .
+  236 expr_without_variable: variable . '=' expr
+  237                      | variable . '=' '&' variable
+  239                      | variable . '=' '&' T_NEW class_name_reference @42 ctor_arguments
+  243                      | variable . T_PLUS_EQUAL expr
+  244                      | variable . T_MINUS_EQUAL expr
+  245                      | variable . T_MUL_EQUAL expr
+  246                      | variable . T_DIV_EQUAL expr
+  247                      | variable . T_CONCAT_EQUAL expr
+  248                      | variable . T_MOD_EQUAL expr
+  249                      | variable . T_AND_EQUAL expr
+  250                      | variable . T_OR_EQUAL expr
+  251                      | variable . T_XOR_EQUAL expr
+  252                      | variable . T_SL_EQUAL expr
+  253                      | variable . T_SR_EQUAL expr
+  400 r_variable: variable .
+  402 rw_variable: variable .
+
+    '='             shift, and go to state 257
+    T_SR_EQUAL      shift, and go to state 258
+    T_SL_EQUAL      shift, and go to state 259
+    T_XOR_EQUAL     shift, and go to state 260
+    T_OR_EQUAL      shift, and go to state 261
+    T_AND_EQUAL     shift, and go to state 262
+    T_MOD_EQUAL     shift, and go to state 263
+    T_CONCAT_EQUAL  shift, and go to state 264
+    T_DIV_EQUAL     shift, and go to state 265
+    T_MUL_EQUAL     shift, and go to state 266
+    T_MINUS_EQUAL   shift, and go to state 267
+    T_PLUS_EQUAL    shift, and go to state 268
+
+    ','       reduce using rule 180 (non_empty_function_call_parameter_list)
+    T_DEC     reduce using rule 402 (rw_variable)
+    T_INC     reduce using rule 402 (rw_variable)
+    ')'       reduce using rule 180 (non_empty_function_call_parameter_list)
+    $default  reduce using rule 400 (r_variable)
 
 
-state 487
+state 499
 
-   24 constant_declaration: constant_declaration ',' T_STRING '=' . static_scalar
+   33 constant_declaration: constant_declaration ',' T_STRING '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 567
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 584
+    static_class_constant  go to state 449
 
 
-state 488
+state 500
 
-  323 fully_qualified_class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
+  342 fully_qualified_class_name: T_NAMESPACE . T_NS_SEPARATOR namespace_name
 
-    T_NS_SEPARATOR  shift, and go to state 568
+    T_NS_SEPARATOR  shift, and go to state 585
 
 
-state 489
+state 501
 
-  324 fully_qualified_class_name: T_NS_SEPARATOR . namespace_name
+  343 fully_qualified_class_name: T_NS_SEPARATOR . namespace_name
 
-    T_STRING  shift, and go to state 111
+    T_STRING  shift, and go to state 114
 
-    namespace_name  go to state 569
+    namespace_name  go to state 586
 
 
-state 490
+state 502
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  322 fully_qualified_class_name: namespace_name .
+  341 fully_qualified_class_name: namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    $default  reduce using rule 322 (fully_qualified_class_name)
+    $default  reduce using rule 341 (fully_qualified_class_name)
 
 
-state 491
+state 503
 
-  108 extends_from: T_EXTENDS fully_qualified_class_name .
+  117 extends_from: T_EXTENDS fully_qualified_class_name .
 
-    $default  reduce using rule 108 (extends_from)
+    $default  reduce using rule 117 (extends_from)
 
 
-state 492
+state 504
 
-  101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 . implements_list '{' class_statement_list '}'
+  110 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 . implements_list '{' class_statement_list '}'
 
-    T_IMPLEMENTS  shift, and go to state 570
+    T_IMPLEMENTS  shift, and go to state 587
 
-    $default  reduce using rule 112 (implements_list)
+    $default  reduce using rule 121 (implements_list)
 
-    implements_list  go to state 571
+    implements_list  go to state 588
 
 
-state 493
+state 505
 
-  111 interface_extends_list: T_EXTENDS . interface_list
+  120 interface_extends_list: T_EXTENDS . interface_list
 
-    T_STRING        shift, and go to state 111
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    T_STRING        shift, and go to state 114
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
 
-    namespace_name              go to state 490
-    interface_list              go to state 572
-    fully_qualified_class_name  go to state 573
+    namespace_name              go to state 502
+    interface_list              go to state 589
+    fully_qualified_class_name  go to state 590
 
 
-state 494
+state 506
 
-  103 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list . '{' class_statement_list '}'
+  112 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list . '{' class_statement_list '}'
 
-    '{'  shift, and go to state 574
+    '{'  shift, and go to state 591
 
 
-state 495
+state 507
 
-   99 unticked_function_declaration_statement: function is_reference T_STRING @29 . '(' parameter_list ')' '{' inner_statement_list '}'
+  108 unticked_function_declaration_statement: function is_reference T_STRING @29 . '(' parameter_list ')' '{' inner_statement_list '}'
 
-    '('  shift, and go to state 575
+    '('  shift, and go to state 592
 
 
-state 496
+state 508
 
-  294 expr_without_variable: function is_reference '(' @50 . parameter_list ')' lexical_vars '{' inner_statement_list '}'
+  313 expr_without_variable: function is_reference '(' @52 . parameter_list ')' lexical_vars '{' inner_statement_list '}'
 
-    T_STRING        shift, and go to state 111
-    T_ARRAY         shift, and go to state 576
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    T_STRING        shift, and go to state 114
+    T_ARRAY         shift, and go to state 593
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
+    T_ANNOTATION    shift, and go to state 74
 
-    ')'       reduce using rule 152 (parameter_list)
-    $default  reduce using rule 161 (optional_class_type)
+    ')'       reduce using rule 161 (parameter_list)
+    $default  reduce using rule 174 (optional_class_type)
 
-    namespace_name              go to state 490
-    parameter_list              go to state 577
-    non_empty_parameter_list    go to state 578
-    optional_class_type         go to state 579
-    fully_qualified_class_name  go to state 580
+    namespace_name              go to state 502
+    annotations                 go to state 594
+    annotation                  go to state 84
+    parameter_list              go to state 595
+    non_empty_parameter_list    go to state 596
+    optional_class_type         go to state 597
+    fully_qualified_class_name  go to state 598
 
 
-state 497
+state 509
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @54 function_call_parameter_list ')'
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @56 function_call_parameter_list ')'
 
-    $default  reduce using rule 308 (@54)
+    $default  reduce using rule 327 (@56)
 
-    @54  go to state 581
+    @56  go to state 599
 
 
-state 498
+state 510
 
-  311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' . @55 function_call_parameter_list ')'
+  330 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' . @57 function_call_parameter_list ')'
 
-    $default  reduce using rule 310 (@55)
+    $default  reduce using rule 329 (@57)
 
-    @55  go to state 582
+    @57  go to state 600
 
 
-state 499
+state 511
 
-  396 variable_without_objects: simple_indirect_reference reference_variable .
-  405 reference_variable: reference_variable . '[' dim_offset ']'
-  406                   | reference_variable . '{' expr '}'
+  415 variable_without_objects: simple_indirect_reference reference_variable .
+  424 reference_variable: reference_variable . '[' dim_offset ']'
+  425                   | reference_variable . '{' expr '}'
 
-    '['  shift, and go to state 266
-    '{'  shift, and go to state 267
+    '['  shift, and go to state 272
+    '{'  shift, and go to state 273
 
-    $default  reduce using rule 396 (variable_without_objects)
+    $default  reduce using rule 415 (variable_without_objects)
 
 
-state 500
+state 512
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  244                      | expr T_LOGICAL_OR @44 expr .
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  263                      | expr T_LOGICAL_OR @46 expr .
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-    $default  reduce using rule 244 (expr_without_variable)
+    $default  reduce using rule 263 (expr_without_variable)
 
 
-state 501
+state 513
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  246                      | expr T_LOGICAL_AND @45 expr .
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  265                      | expr T_LOGICAL_AND @47 expr .
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-    $default  reduce using rule 246 (expr_without_variable)
+    $default  reduce using rule 265 (expr_without_variable)
 
 
-state 502
+state 514
 
-  277 expr_without_variable: expr '?' ':' @48 . expr
+  296 expr_without_variable: expr '?' ':' @50 . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -15190,12 +15381,12 @@ state 502
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -15206,274 +15397,274 @@ state 502
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 583
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 601
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 503
+state 515
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  275                      | expr '?' @46 expr . ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    ':'                    shift, and go to state 584
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  294                      | expr '?' @48 expr . ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    ':'                    shift, and go to state 602
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
 
-state 504
+state 516
+
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  259                      | expr T_BOOLEAN_OR @44 expr .
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  240                      | expr T_BOOLEAN_OR @42 expr .
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 240 (expr_without_variable)
+    $default  reduce using rule 259 (expr_without_variable)
 
 
-state 505
+state 517
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  242                      | expr T_BOOLEAN_AND @43 expr .
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  261                      | expr T_BOOLEAN_AND @45 expr .
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-    $default  reduce using rule 242 (expr_without_variable)
+    $default  reduce using rule 261 (expr_without_variable)
 
 
-state 506
+state 518
 
-  220 expr_without_variable: variable '=' '&' T_NEW . class_name_reference @40 ctor_arguments
+  239 expr_without_variable: variable '=' '&' T_NEW . class_name_reference @42 ctor_arguments
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 142
-    T_NS_SEPARATOR  shift, and go to state 143
-    '$'             shift, and go to state 77
-
-    namespace_name                go to state 144
-    class_name                    go to state 145
-    class_name_reference          go to state 585
-    dynamic_class_name_reference  go to state 147
-    static_member                 go to state 102
-    variable_class_name           go to state 148
-    base_variable                 go to state 149
-    reference_variable            go to state 150
-    compound_variable             go to state 107
-    simple_indirect_reference     go to state 151
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 145
+    T_NS_SEPARATOR  shift, and go to state 146
+    '$'             shift, and go to state 78
+
+    namespace_name                go to state 147
+    class_name                    go to state 148
+    class_name_reference          go to state 603
+    dynamic_class_name_reference  go to state 150
+    static_member                 go to state 105
+    variable_class_name           go to state 151
+    base_variable                 go to state 152
+    reference_variable            go to state 153
+    compound_variable             go to state 110
+    simple_indirect_reference     go to state 154
 
 
-state 507
+state 519
 
-  218 expr_without_variable: variable '=' '&' variable .
+  237 expr_without_variable: variable '=' '&' variable .
 
-    $default  reduce using rule 218 (expr_without_variable)
+    $default  reduce using rule 237 (expr_without_variable)
 
 
-state 508
+state 520
 
-  317 function_call: variable_without_objects '(' @58 function_call_parameter_list . ')'
+  336 function_call: variable_without_objects '(' @60 function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 586
+    ')'  shift, and go to state 604
 
 
-state 509
+state 521
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @56 function_call_parameter_list ')'
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @58 function_call_parameter_list ')'
 
-    $default  reduce using rule 312 (@56)
+    $default  reduce using rule 331 (@58)
 
-    @56  go to state 587
+    @58  go to state 605
 
 
-state 510
+state 522
 
-  315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' . @57 function_call_parameter_list ')'
+  334 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' . @59 function_call_parameter_list ')'
 
-    $default  reduce using rule 314 (@57)
+    $default  reduce using rule 333 (@59)
 
-    @57  go to state 588
+    @59  go to state 606
 
 
-state 511
+state 523
 
-  418 variable_name: T_STRING .
+  437 variable_name: T_STRING .
 
-    $default  reduce using rule 418 (variable_name)
+    $default  reduce using rule 437 (variable_name)
 
 
-state 512
+state 524
 
-  419 variable_name: '{' . expr '}'
+  438 variable_name: '{' . expr '}'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -15500,12 +15691,12 @@ state 512
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -15516,117 +15707,117 @@ state 512
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 589
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 607
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 513
+state 525
 
-  414 object_property: variable_without_objects . @65
+  433 object_property: variable_without_objects . @67
 
-    $default  reduce using rule 413 (@65)
+    $default  reduce using rule 432 (@67)
 
-    @65  go to state 590
+    @67  go to state 608
 
 
-state 514
+state 526
 
-  386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @61 object_property . @62 method_or_not variable_properties
+  405 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @63 object_property . @64 method_or_not variable_properties
 
-    $default  reduce using rule 385 (@62)
+    $default  reduce using rule 404 (@64)
 
-    @62  go to state 591
+    @64  go to state 609
 
 
-state 515
+state 527
 
-  412 object_property: object_dim_list .
-  415 object_dim_list: object_dim_list . '[' dim_offset ']'
-  416                | object_dim_list . '{' expr '}'
+  431 object_property: object_dim_list .
+  434 object_dim_list: object_dim_list . '[' dim_offset ']'
+  435                | object_dim_list . '{' expr '}'
 
-    '['  shift, and go to state 592
-    '{'  shift, and go to state 593
+    '['  shift, and go to state 610
+    '{'  shift, and go to state 611
 
-    $default  reduce using rule 412 (object_property)
+    $default  reduce using rule 431 (object_property)
 
 
-state 516
+state 528
 
-  417 object_dim_list: variable_name .
+  436 object_dim_list: variable_name .
 
-    $default  reduce using rule 417 (object_dim_list)
+    $default  reduce using rule 436 (object_dim_list)
 
 
-state 517
+state 529
 
-  405 reference_variable: reference_variable '[' dim_offset ']' .
+  424 reference_variable: reference_variable '[' dim_offset ']' .
 
-    $default  reduce using rule 405 (reference_variable)
+    $default  reduce using rule 424 (reference_variable)
 
 
-state 518
+state 530
 
-  406 reference_variable: reference_variable '{' expr '}' .
+  425 reference_variable: reference_variable '{' expr '}' .
 
-    $default  reduce using rule 406 (reference_variable)
+    $default  reduce using rule 425 (reference_variable)
 
 
-state 519
+state 531
 
-  341 ctor_arguments: '(' function_call_parameter_list . ')'
+  360 ctor_arguments: '(' function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 594
+    ')'  shift, and go to state 612
 
 
-state 520
+state 532
 
-  329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @59 object_property . @60 dynamic_class_name_variable_properties
+  348 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @61 object_property . @62 dynamic_class_name_variable_properties
 
-    $default  reduce using rule 328 (@60)
+    $default  reduce using rule 347 (@62)
 
-    @60  go to state 595
+    @62  go to state 613
 
 
-state 521
+state 533
 
-   41 unticked_statement: T_IF '(' expr ')' ':' . @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
+   50 unticked_statement: T_IF '(' expr ')' ':' . @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
 
-    $default  reduce using rule 39 (@7)
+    $default  reduce using rule 48 (@7)
 
-    @7  go to state 596
+    @7  go to state 614
 
 
-state 522
+state 534
 
-   38 unticked_statement: T_IF '(' expr ')' @5 . statement @6 elseif_list else_single
+   47 unticked_statement: T_IF '(' expr ')' @5 . statement @6 elseif_list else_single
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -15686,63 +15877,63 @@ state 522
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 597
-    unticked_statement                 go to state 84
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    statement                          go to state 615
+    unticked_statement                 go to state 87
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 523
+state 535
 
-   47 unticked_statement: T_DO @11 statement T_WHILE '(' . @12 expr ')' ';'
+   56 unticked_statement: T_DO @11 statement T_WHILE '(' . @12 expr ')' ';'
 
-    $default  reduce using rule 46 (@12)
+    $default  reduce using rule 55 (@12)
 
-    @12  go to state 598
+    @12  go to state 616
 
 
-state 524
+state 536
 
-   44 unticked_statement: T_WHILE '(' @9 expr ')' . @10 while_statement
+   53 unticked_statement: T_WHILE '(' @9 expr ')' . @10 while_statement
 
-    $default  reduce using rule 43 (@10)
+    $default  reduce using rule 52 (@10)
 
-    @10  go to state 599
+    @10  go to state 617
 
 
-state 525
+state 537
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 . for_expr ';' @14 for_expr ')' @15 for_statement
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 . for_expr ';' @14 for_expr ')' @15 for_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -15769,12 +15960,12 @@ state 525
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -15785,45 +15976,45 @@ state 525
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 210 (for_expr)
-
-    namespace_name                     go to state 80
-    for_expr                           go to state 600
-    non_empty_for_expr                 go to state 292
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 293
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 229 (for_expr)
+
+    namespace_name                     go to state 81
+    for_expr                           go to state 618
+    non_empty_for_expr                 go to state 298
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 299
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 526
+state 538
 
-  213 non_empty_for_expr: non_empty_for_expr ',' @38 . expr
+  232 non_empty_for_expr: non_empty_for_expr ',' @40 . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -15850,12 +16041,12 @@ state 526
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -15866,130 +16057,130 @@ state 526
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 601
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 619
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 527
+state 539
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 . variable foreach_optional_arg ')' @20 foreach_statement
+   81 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 . variable foreach_optional_arg ')' @20 foreach_statement
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 602
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 620
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 528
+state 540
 
-   69 unticked_statement: T_FOREACH '(' variable T_AS @17 . foreach_variable foreach_optional_arg ')' @18 foreach_statement
+   78 unticked_statement: T_FOREACH '(' variable T_AS @17 . foreach_variable foreach_optional_arg ')' @18 foreach_statement
 
-    '&'             shift, and go to state 603
-    T_STRING        shift, and go to state 111
+    '&'             shift, and go to state 621
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    foreach_variable                   go to state 604
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 605
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    foreach_variable                   go to state 622
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 623
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 529
+state 541
 
-  126 declare_list: T_STRING '=' . static_scalar
+  135 declare_list: T_STRING '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 606
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 624
+    static_class_constant  go to state 449
 
 
-state 530
+state 542
 
-  127 declare_list: declare_list ',' . T_STRING '=' static_scalar
+  136 declare_list: declare_list ',' . T_STRING '=' static_scalar
 
-    T_STRING  shift, and go to state 607
+    T_STRING  shift, and go to state 625
 
 
-state 531
+state 543
 
-   74 unticked_statement: T_DECLARE @21 '(' declare_list ')' . declare_statement
+   83 unticked_statement: T_DECLARE @21 '(' declare_list ')' . declare_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -15997,7 +16188,7 @@ state 531
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    ':'                         shift, and go to state 608
+    ':'                         shift, and go to state 626
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -16050,540 +16241,540 @@ state 531
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 609
-    unticked_statement                 go to state 84
-    declare_statement                  go to state 610
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    statement                          go to state 627
+    unticked_statement                 go to state 87
+    declare_statement                  go to state 628
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 532
+state 544
 
-   53 unticked_statement: T_SWITCH '(' expr ')' @16 . switch_case_list
+   62 unticked_statement: T_SWITCH '(' expr ')' @16 . switch_case_list
 
-    ':'  shift, and go to state 611
-    '{'  shift, and go to state 612
+    ':'  shift, and go to state 629
+    '{'  shift, and go to state 630
 
-    switch_case_list  go to state 613
+    switch_case_list  go to state 631
 
 
-state 533
+state 545
 
-  358 static_scalar: '+' static_scalar .
+  377 static_scalar: '+' static_scalar .
 
-    $default  reduce using rule 358 (static_scalar)
+    $default  reduce using rule 377 (static_scalar)
 
 
-state 534
+state 546
 
-  359 static_scalar: '-' static_scalar .
+  378 static_scalar: '-' static_scalar .
 
-    $default  reduce using rule 359 (static_scalar)
+    $default  reduce using rule 378 (static_scalar)
 
 
-state 535
+state 547
 
-  360 static_scalar: T_ARRAY '(' . static_array_pair_list ')'
+  379 static_scalar: T_ARRAY '(' . static_array_pair_list ')'
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    $default  reduce using rule 371 (static_array_pair_list)
+    $default  reduce using rule 390 (static_array_pair_list)
 
-    namespace_name                    go to state 438
-    class_name                        go to state 439
-    common_scalar                     go to state 440
-    static_scalar                     go to state 614
-    static_class_constant             go to state 442
-    static_array_pair_list            go to state 615
-    non_empty_static_array_pair_list  go to state 616
+    namespace_name                    go to state 445
+    class_name                        go to state 446
+    common_scalar                     go to state 447
+    static_scalar                     go to state 632
+    static_class_constant             go to state 449
+    static_array_pair_list            go to state 633
+    non_empty_static_array_pair_list  go to state 634
 
 
-state 536
+state 548
 
-  352 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC
+  371 common_scalar: T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE . T_END_HEREDOC
 
-    T_END_HEREDOC  shift, and go to state 332
+    T_END_HEREDOC  shift, and go to state 338
 
 
-state 537
+state 549
 
-  320 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
-  356 static_scalar: T_NAMESPACE T_NS_SEPARATOR . namespace_name
+  339 class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
+  375 static_scalar: T_NAMESPACE T_NS_SEPARATOR . namespace_name
 
-    T_STRING  shift, and go to state 111
+    T_STRING  shift, and go to state 114
 
-    namespace_name  go to state 617
+    namespace_name  go to state 635
 
 
-state 538
+state 550
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  321 class_name: T_NS_SEPARATOR namespace_name .
-  357 static_scalar: T_NS_SEPARATOR namespace_name .
+  340 class_name: T_NS_SEPARATOR namespace_name .
+  376 static_scalar: T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 321 (class_name)
-    $default                reduce using rule 357 (static_scalar)
+    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 340 (class_name)
+    $default                reduce using rule 376 (static_scalar)
 
 
-state 539
+state 551
 
-  362 static_class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING
+  381 static_class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM . T_STRING
 
-    T_STRING  shift, and go to state 618
+    T_STRING  shift, and go to state 636
 
 
-state 540
+state 552
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' . T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' . T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    T_CATCH  shift, and go to state 619
+    T_CATCH  shift, and go to state 637
 
 
-state 541
+state 553
 
-   23 use_declaration: T_NS_SEPARATOR namespace_name T_AS T_STRING .
+   32 use_declaration: T_NS_SEPARATOR namespace_name T_AS T_STRING .
 
-    $default  reduce using rule 23 (use_declaration)
+    $default  reduce using rule 32 (use_declaration)
 
 
-state 542
+state 554
 
-  176 global_var: '$' '{' expr '}' .
+  191 global_var: '$' '{' expr '}' .
 
-    $default  reduce using rule 176 (global_var)
+    $default  reduce using rule 191 (global_var)
 
 
-state 543
+state 555
 
-  178 static_var_list: static_var_list ',' T_VARIABLE '=' . static_scalar
+  193 static_var_list: static_var_list ',' T_VARIABLE '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 620
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 638
+    static_class_constant  go to state 449
 
 
-state 544
+state 556
 
-   92 unset_variables: unset_variables ',' unset_variable .
+  101 unset_variables: unset_variables ',' unset_variable .
 
-    $default  reduce using rule 92 (unset_variables)
+    $default  reduce using rule 101 (unset_variables)
 
 
-state 545
+state 557
 
-   66 unticked_statement: T_UNSET '(' unset_variables ')' ';' .
+   75 unticked_statement: T_UNSET '(' unset_variables ')' ';' .
 
-    $default  reduce using rule 66 (unticked_statement)
+    $default  reduce using rule 75 (unticked_statement)
 
 
-state 546
+state 558
 
-  461 isset_variables: isset_variables ',' @68 . variable
+  480 isset_variables: isset_variables ',' @70 . variable
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 621
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 639
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 547
+state 559
 
-  426 assignment_list_element: T_LIST '(' . @66 assignment_list ')'
+  445 assignment_list_element: T_LIST '(' . @68 assignment_list ')'
 
-    $default  reduce using rule 425 (@66)
+    $default  reduce using rule 444 (@68)
 
-    @66  go to state 622
+    @68  go to state 640
 
 
-state 548
+state 560
 
-  422 assignment_list: assignment_list ',' . assignment_list_element
+  441 assignment_list: assignment_list ',' . assignment_list_element
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_LIST          shift, and go to state 457
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    $default  reduce using rule 427 (assignment_list_element)
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 458
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    assignment_list_element            go to state 623
+    T_STATIC        shift, and go to state 115
+    T_LIST          shift, and go to state 464
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    $default  reduce using rule 446 (assignment_list_element)
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 465
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    assignment_list_element            go to state 641
 
 
-state 549
+state 561
 
-  216 expr_without_variable: T_LIST '(' @39 assignment_list ')' . '=' expr
+  235 expr_without_variable: T_LIST '(' @41 assignment_list ')' . '=' expr
 
-    '='  shift, and go to state 624
+    '='  shift, and go to state 642
 
 
-state 550
+state 562
 
-  436 non_empty_array_pair_list: expr T_DOUBLE_ARROW '&' . w_variable
+  455 non_empty_array_pair_list: expr T_DOUBLE_ARROW '&' . w_variable
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    w_variable                         go to state 625
-    variable                           go to state 462
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    w_variable                         go to state 643
+    variable                           go to state 469
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 551
+state 563
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  432 non_empty_array_pair_list: expr T_DOUBLE_ARROW expr .
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 432 (non_empty_array_pair_list)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  451 non_empty_array_pair_list: expr T_DOUBLE_ARROW expr .
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 451 (non_empty_array_pair_list)
 
 
-state 552
+state 564
 
-  435 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' . w_variable
+  454 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' . w_variable
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    w_variable                         go to state 626
-    variable                           go to state 462
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    w_variable                         go to state 644
+    variable                           go to state 469
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 553
+state 565
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  430 non_empty_array_pair_list: non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW expr
-  431                          | non_empty_array_pair_list ',' expr .
-  434                          | non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW '&' w_variable
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    T_DOUBLE_ARROW         shift, and go to state 627
-
-    $default  reduce using rule 431 (non_empty_array_pair_list)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  449 non_empty_array_pair_list: non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW expr
+  450                          | non_empty_array_pair_list ',' expr .
+  453                          | non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW '&' w_variable
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    T_DOUBLE_ARROW         shift, and go to state 645
+
+    $default  reduce using rule 450 (non_empty_array_pair_list)
 
 
-state 554
+state 566
 
-  449 encaps_var_offset: T_STRING .
+  468 encaps_var_offset: T_STRING .
 
-    $default  reduce using rule 449 (encaps_var_offset)
+    $default  reduce using rule 468 (encaps_var_offset)
 
 
-state 555
+state 567
 
-  451 encaps_var_offset: T_VARIABLE .
+  470 encaps_var_offset: T_VARIABLE .
 
-    $default  reduce using rule 451 (encaps_var_offset)
+    $default  reduce using rule 470 (encaps_var_offset)
 
 
-state 556
+state 568
 
-  450 encaps_var_offset: T_NUM_STRING .
+  469 encaps_var_offset: T_NUM_STRING .
 
-    $default  reduce using rule 450 (encaps_var_offset)
+    $default  reduce using rule 469 (encaps_var_offset)
 
 
-state 557
+state 569
 
-  444 encaps_var: T_VARIABLE '[' @67 encaps_var_offset . ']'
+  463 encaps_var: T_VARIABLE '[' @69 encaps_var_offset . ']'
 
-    ']'  shift, and go to state 628
+    ']'  shift, and go to state 646
 
 
-state 558
+state 570
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}'
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ']'                    shift, and go to state 629
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  466 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}'
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ']'                    shift, and go to state 647
 
 
-state 559
+state 571
 
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' @52 . function_call_parameter_list ')'
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' @54 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -16591,7 +16782,7 @@ state 559
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -16611,12 +16802,12 @@ state 559
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -16627,94 +16818,154 @@ state 559
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 630
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
 
+    $default  reduce using rule 178 (function_call_parameter_list)
 
-state 560
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 648
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
-   15 top_statement: T_NAMESPACE '{' @3 top_statement_list '}' .
 
-    $default  reduce using rule 15 (top_statement)
+state 572
 
+   16 top_statement: T_NAMESPACE '{' @3 top_statement_list '}' .
 
-state 561
+    $default  reduce using rule 16 (top_statement)
+
+
+state 573
 
     3 top_statement_list: top_statement_list . @1 top_statement
-   13 top_statement: T_NAMESPACE namespace_name '{' @2 top_statement_list . '}'
+   14 top_statement: T_NAMESPACE namespace_name '{' @2 top_statement_list . '}'
 
-    '}'  shift, and go to state 631
+    '}'  shift, and go to state 649
 
     $default  reduce using rule 2 (@1)
 
     @1  go to state 4
 
 
-state 562
+state 574
 
-  307 function_call: T_NS_SEPARATOR namespace_name '(' @53 function_call_parameter_list . ')'
+  326 function_call: T_NS_SEPARATOR namespace_name '(' @55 function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 632
+    ')'  shift, and go to state 650
 
 
-state 563
+state 575
 
-   32 inner_statement: T_HALT_COMPILER '(' . ')' ';'
+   26 annotation_arg: T_STRING '=' . T_CONSTANT_ENCAPSED_STRING
 
-    ')'  shift, and go to state 633
+    T_CONSTANT_ENCAPSED_STRING  shift, and go to state 651
 
 
-state 564
+state 576
 
-  168 non_empty_function_call_parameter_list: '&' w_variable .
+   22 annotation: T_ANNOTATION T_STRING '(' annotation_args ')' .
 
-    $default  reduce using rule 168 (non_empty_function_call_parameter_list)
+    $default  reduce using rule 22 (annotation)
 
 
-state 565
+state 577
 
-  303 function_call: namespace_name '(' @51 function_call_parameter_list ')' .
+   24 annotation_args: annotation_arg ',' . annotation_arg
 
-    $default  reduce using rule 303 (function_call)
+    T_STRING                    shift, and go to state 483
+    T_CONSTANT_ENCAPSED_STRING  shift, and go to state 484
 
+    annotation_arg  go to state 652
 
-state 566
 
-  169 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' . expr_without_variable
-  170                                       | non_empty_function_call_parameter_list ',' . variable
-  171                                       | non_empty_function_call_parameter_list ',' . '&' w_variable
+state 578
+
+   41 inner_statement: T_HALT_COMPILER '(' . ')' ';'
+
+    ')'  shift, and go to state 653
+
+
+state 579
+
+  181 non_empty_function_call_parameter_list: '&' w_variable .
+
+    $default  reduce using rule 181 (non_empty_function_call_parameter_list)
+
+
+state 580
+
+  183 non_empty_function_call_parameter_list: annotations '&' . w_variable
+
+    T_STRING        shift, and go to state 114
+    T_VARIABLE      shift, and go to state 33
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    w_variable                         go to state 654
+    variable                           go to state 469
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+
+
+state 581
+
+  182 non_empty_function_call_parameter_list: annotations variable .
+
+    $default  reduce using rule 182 (non_empty_function_call_parameter_list)
+
+
+state 582
+
+  322 function_call: namespace_name '(' @53 function_call_parameter_list ')' .
+
+    $default  reduce using rule 322 (function_call)
+
+
+state 583
+
+  184 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' . expr_without_variable
+  185                                       | non_empty_function_call_parameter_list ',' . variable
+  186                                       | non_empty_function_call_parameter_list ',' . '&' w_variable
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -16722,7 +16973,7 @@ state 566
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 634
+    '&'                         shift, and go to state 655
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -16742,12 +16993,12 @@ state 566
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -16758,177 +17009,202 @@ state 566
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 635
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 172
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 636
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 656
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 175
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 657
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 567
+state 584
 
-   24 constant_declaration: constant_declaration ',' T_STRING '=' static_scalar .
+   33 constant_declaration: constant_declaration ',' T_STRING '=' static_scalar .
 
-    $default  reduce using rule 24 (constant_declaration)
+    $default  reduce using rule 33 (constant_declaration)
 
 
-state 568
+state 585
 
-  323 fully_qualified_class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
+  342 fully_qualified_class_name: T_NAMESPACE T_NS_SEPARATOR . namespace_name
 
-    T_STRING  shift, and go to state 111
+    T_STRING  shift, and go to state 114
 
-    namespace_name  go to state 637
+    namespace_name  go to state 658
 
 
-state 569
+state 586
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  324 fully_qualified_class_name: T_NS_SEPARATOR namespace_name .
+  343 fully_qualified_class_name: T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    $default  reduce using rule 324 (fully_qualified_class_name)
+    $default  reduce using rule 343 (fully_qualified_class_name)
 
 
-state 570
+state 587
 
-  113 implements_list: T_IMPLEMENTS . interface_list
+  122 implements_list: T_IMPLEMENTS . interface_list
 
-    T_STRING        shift, and go to state 111
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    T_STRING        shift, and go to state 114
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
 
-    namespace_name              go to state 490
-    interface_list              go to state 638
-    fully_qualified_class_name  go to state 573
+    namespace_name              go to state 502
+    interface_list              go to state 659
+    fully_qualified_class_name  go to state 590
 
 
-state 571
+state 588
 
-  101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list . '{' class_statement_list '}'
+  110 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list . '{' class_statement_list '}'
 
-    '{'  shift, and go to state 639
+    '{'  shift, and go to state 660
 
 
-state 572
+state 589
 
-  111 interface_extends_list: T_EXTENDS interface_list .
-  115 interface_list: interface_list . ',' fully_qualified_class_name
+  120 interface_extends_list: T_EXTENDS interface_list .
+  124 interface_list: interface_list . ',' fully_qualified_class_name
 
-    ','  shift, and go to state 640
+    ','  shift, and go to state 661
 
-    $default  reduce using rule 111 (interface_extends_list)
+    $default  reduce using rule 120 (interface_extends_list)
 
 
-state 573
+state 590
 
-  114 interface_list: fully_qualified_class_name .
+  123 interface_list: fully_qualified_class_name .
 
-    $default  reduce using rule 114 (interface_list)
+    $default  reduce using rule 123 (interface_list)
 
 
-state 574
+state 591
 
-  103 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list '{' . class_statement_list '}'
+  112 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list '{' . class_statement_list '}'
 
-    $default  reduce using rule 182 (class_statement_list)
+    $default  reduce using rule 197 (class_statement_list)
 
-    class_statement_list  go to state 641
+    class_statement_list  go to state 662
 
 
-state 575
+state 592
 
-   99 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' . parameter_list ')' '{' inner_statement_list '}'
+  108 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' . parameter_list ')' '{' inner_statement_list '}'
 
-    T_STRING        shift, and go to state 111
-    T_ARRAY         shift, and go to state 576
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    T_STRING        shift, and go to state 114
+    T_ARRAY         shift, and go to state 593
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
+    T_ANNOTATION    shift, and go to state 74
 
-    ')'       reduce using rule 152 (parameter_list)
-    $default  reduce using rule 161 (optional_class_type)
+    ')'       reduce using rule 161 (parameter_list)
+    $default  reduce using rule 174 (optional_class_type)
 
-    namespace_name              go to state 490
-    parameter_list              go to state 642
-    non_empty_parameter_list    go to state 578
-    optional_class_type         go to state 579
-    fully_qualified_class_name  go to state 580
+    namespace_name              go to state 502
+    annotations                 go to state 594
+    annotation                  go to state 84
+    parameter_list              go to state 663
+    non_empty_parameter_list    go to state 596
+    optional_class_type         go to state 597
+    fully_qualified_class_name  go to state 598
 
 
-state 576
+state 593
 
-  163 optional_class_type: T_ARRAY .
+  176 optional_class_type: T_ARRAY .
 
-    $default  reduce using rule 163 (optional_class_type)
+    $default  reduce using rule 176 (optional_class_type)
 
 
-state 577
+state 594
 
-  294 expr_without_variable: function is_reference '(' @50 parameter_list . ')' lexical_vars '{' inner_statement_list '}'
+   19 annotations: annotations . annotation
+  164 non_empty_parameter_list: annotations . optional_class_type T_VARIABLE
+  165                         | annotations . optional_class_type '&' T_VARIABLE
 
-    ')'  shift, and go to state 643
+    T_STRING        shift, and go to state 114
+    T_ARRAY         shift, and go to state 593
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
+    T_ANNOTATION    shift, and go to state 74
 
+    $default  reduce using rule 174 (optional_class_type)
 
-state 578
+    namespace_name              go to state 502
+    annotation                  go to state 219
+    optional_class_type         go to state 664
+    fully_qualified_class_name  go to state 598
 
-  151 parameter_list: non_empty_parameter_list .
-  157 non_empty_parameter_list: non_empty_parameter_list . ',' optional_class_type T_VARIABLE
-  158                         | non_empty_parameter_list . ',' optional_class_type '&' T_VARIABLE
-  159                         | non_empty_parameter_list . ',' optional_class_type '&' T_VARIABLE '=' static_scalar
-  160                         | non_empty_parameter_list . ',' optional_class_type T_VARIABLE '=' static_scalar
 
-    ','  shift, and go to state 644
+state 595
 
-    $default  reduce using rule 151 (parameter_list)
+  313 expr_without_variable: function is_reference '(' @52 parameter_list . ')' lexical_vars '{' inner_statement_list '}'
 
+    ')'  shift, and go to state 665
 
-state 579
 
-  153 non_empty_parameter_list: optional_class_type . T_VARIABLE
-  154                         | optional_class_type . '&' T_VARIABLE
-  155                         | optional_class_type . '&' T_VARIABLE '=' static_scalar
-  156                         | optional_class_type . T_VARIABLE '=' static_scalar
+state 596
 
-    '&'         shift, and go to state 645
-    T_VARIABLE  shift, and go to state 646
+  160 parameter_list: non_empty_parameter_list .
+  168 non_empty_parameter_list: non_empty_parameter_list . ',' optional_class_type T_VARIABLE
+  169                         | non_empty_parameter_list . ',' optional_class_type '&' T_VARIABLE
+  170                         | non_empty_parameter_list . ',' annotations optional_class_type T_VARIABLE
+  171                         | non_empty_parameter_list . ',' annotations optional_class_type '&' T_VARIABLE
+  172                         | non_empty_parameter_list . ',' optional_class_type '&' T_VARIABLE '=' static_scalar
+  173                         | non_empty_parameter_list . ',' optional_class_type T_VARIABLE '=' static_scalar
 
+    ','  shift, and go to state 666
 
-state 580
+    $default  reduce using rule 160 (parameter_list)
 
-  162 optional_class_type: fully_qualified_class_name .
 
-    $default  reduce using rule 162 (optional_class_type)
+state 597
 
+  162 non_empty_parameter_list: optional_class_type . T_VARIABLE
+  163                         | optional_class_type . '&' T_VARIABLE
+  166                         | optional_class_type . '&' T_VARIABLE '=' static_scalar
+  167                         | optional_class_type . T_VARIABLE '=' static_scalar
+
+    '&'         shift, and go to state 667
+    T_VARIABLE  shift, and go to state 668
+
+
+state 598
+
+  175 optional_class_type: fully_qualified_class_name .
+
+    $default  reduce using rule 175 (optional_class_type)
 
-state 581
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @54 . function_call_parameter_list ')'
+state 599
+
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -16936,7 +17212,7 @@ state 581
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -16956,12 +17232,12 @@ state 581
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -16972,45 +17248,48 @@ state 581
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 647
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 669
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
 
-state 582
+state 600
 
-  311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @55 . function_call_parameter_list ')'
+  330 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -17018,7 +17297,7 @@ state 582
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -17038,12 +17317,12 @@ state 582
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -17054,127 +17333,130 @@ state 582
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 670
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
-    $default  reduce using rule 165 (function_call_parameter_list)
 
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 648
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
-
-
-state 583
-
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  277                      | expr '?' ':' @48 expr .
-
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+state 601
 
-    $default  reduce using rule 277 (expr_without_variable)
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  296                      | expr '?' ':' @50 expr .
+
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 296 (expr_without_variable)
 
 
-state 584
+state 602
 
-  275 expr_without_variable: expr '?' @46 expr ':' . @47 expr
+  294 expr_without_variable: expr '?' @48 expr ':' . @49 expr
 
-    $default  reduce using rule 274 (@47)
+    $default  reduce using rule 293 (@49)
 
-    @47  go to state 649
+    @49  go to state 671
 
 
-state 585
+state 603
 
-  220 expr_without_variable: variable '=' '&' T_NEW class_name_reference . @40 ctor_arguments
+  239 expr_without_variable: variable '=' '&' T_NEW class_name_reference . @42 ctor_arguments
 
-    $default  reduce using rule 219 (@40)
+    $default  reduce using rule 238 (@42)
 
-    @40  go to state 650
+    @42  go to state 672
 
 
-state 586
+state 604
 
-  317 function_call: variable_without_objects '(' @58 function_call_parameter_list ')' .
+  336 function_call: variable_without_objects '(' @60 function_call_parameter_list ')' .
 
-    $default  reduce using rule 317 (function_call)
+    $default  reduce using rule 336 (function_call)
 
 
-state 587
+state 605
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 . function_call_parameter_list ')'
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @58 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -17182,7 +17464,7 @@ state 587
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -17202,12 +17484,12 @@ state 587
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -17218,45 +17500,48 @@ state 587
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 651
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 673
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
 
-state 588
+state 606
 
-  315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 . function_call_parameter_list ')'
+  334 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @59 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -17264,7 +17549,7 @@ state 588
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -17284,12 +17569,12 @@ state 588
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -17300,123 +17585,126 @@ state 588
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 652
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 674
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
 
-state 589
+state 607
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  419 variable_name: '{' expr . '}'
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    '}'                    shift, and go to state 653
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  438 variable_name: '{' expr . '}'
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    '}'                    shift, and go to state 675
 
 
-state 590
+state 608
 
-  414 object_property: variable_without_objects @65 .
+  433 object_property: variable_without_objects @67 .
 
-    $default  reduce using rule 414 (object_property)
+    $default  reduce using rule 433 (object_property)
 
 
-state 591
+state 609
 
-  386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @61 object_property @62 . method_or_not variable_properties
+  405 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @63 object_property @64 . method_or_not variable_properties
 
-    '('  shift, and go to state 654
+    '('  shift, and go to state 676
 
-    $default  reduce using rule 394 (method_or_not)
+    $default  reduce using rule 413 (method_or_not)
 
-    method_or_not  go to state 655
+    method_or_not  go to state 677
 
 
-state 592
+state 610
 
-  415 object_dim_list: object_dim_list '[' . dim_offset ']'
+  434 object_dim_list: object_dim_list '[' . dim_offset ']'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -17443,12 +17731,12 @@ state 592
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -17459,44 +17747,44 @@ state 592
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 410 (dim_offset)
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 407
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    dim_offset                         go to state 656
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 429 (dim_offset)
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 414
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    dim_offset                         go to state 678
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 593
+state 611
 
-  416 object_dim_list: object_dim_list '{' . expr '}'
+  435 object_dim_list: object_dim_list '{' . expr '}'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -17523,12 +17811,12 @@ state 593
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -17539,75 +17827,75 @@ state 593
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 657
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 679
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 594
+state 612
 
-  341 ctor_arguments: '(' function_call_parameter_list ')' .
+  360 ctor_arguments: '(' function_call_parameter_list ')' .
 
-    $default  reduce using rule 341 (ctor_arguments)
+    $default  reduce using rule 360 (ctor_arguments)
 
 
-state 595
+state 613
 
-  329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @59 object_property @60 . dynamic_class_name_variable_properties
+  348 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @61 object_property @62 . dynamic_class_name_variable_properties
 
-    $default  reduce using rule 332 (dynamic_class_name_variable_properties)
+    $default  reduce using rule 351 (dynamic_class_name_variable_properties)
 
-    dynamic_class_name_variable_properties  go to state 658
+    dynamic_class_name_variable_properties  go to state 680
 
 
-state 596
+state 614
 
-   41 unticked_statement: T_IF '(' expr ')' ':' @7 . inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
+   50 unticked_statement: T_IF '(' expr ')' ':' @7 . inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';'
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 659
+    inner_statement_list  go to state 681
 
 
-state 597
+state 615
 
-   38 unticked_statement: T_IF '(' expr ')' @5 statement . @6 elseif_list else_single
+   47 unticked_statement: T_IF '(' expr ')' @5 statement . @6 elseif_list else_single
 
-    $default  reduce using rule 37 (@6)
+    $default  reduce using rule 46 (@6)
 
-    @6  go to state 660
+    @6  go to state 682
 
 
-state 598
+state 616
 
-   47 unticked_statement: T_DO @11 statement T_WHILE '(' @12 . expr ')' ';'
+   56 unticked_statement: T_DO @11 statement T_WHILE '(' @12 . expr ')' ';'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -17634,12 +17922,12 @@ state 598
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -17650,41 +17938,41 @@ state 598
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 661
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 683
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 599
+state 617
 
-   44 unticked_statement: T_WHILE '(' @9 expr ')' @10 . while_statement
+   53 unticked_statement: T_WHILE '(' @9 expr ')' @10 . while_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -17692,7 +17980,7 @@ state 599
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    ':'                         shift, and go to state 662
+    ':'                         shift, and go to state 684
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -17745,343 +18033,343 @@ state 599
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 663
-    unticked_statement                 go to state 84
-    while_statement                    go to state 664
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    statement                          go to state 685
+    unticked_statement                 go to state 87
+    while_statement                    go to state 686
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 600
+state 618
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr . ';' @14 for_expr ')' @15 for_statement
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr . ';' @14 for_expr ')' @15 for_statement
 
-    ';'  shift, and go to state 665
+    ';'  shift, and go to state 687
 
 
-state 601
+state 619
 
-  213 non_empty_for_expr: non_empty_for_expr ',' @38 expr .
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 213 (non_empty_for_expr)
+  232 non_empty_for_expr: non_empty_for_expr ',' @40 expr .
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 232 (non_empty_for_expr)
 
 
-state 602
+state 620
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable . foreach_optional_arg ')' @20 foreach_statement
+   81 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable . foreach_optional_arg ')' @20 foreach_statement
 
-    T_DOUBLE_ARROW  shift, and go to state 666
+    T_DOUBLE_ARROW  shift, and go to state 688
 
-    $default  reduce using rule 116 (foreach_optional_arg)
+    $default  reduce using rule 125 (foreach_optional_arg)
 
-    foreach_optional_arg  go to state 667
+    foreach_optional_arg  go to state 689
 
 
-state 603
+state 621
 
-  119 foreach_variable: '&' . variable
+  128 foreach_variable: '&' . variable
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 668
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 690
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 604
+state 622
 
-   69 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable . foreach_optional_arg ')' @18 foreach_statement
+   78 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable . foreach_optional_arg ')' @18 foreach_statement
 
-    T_DOUBLE_ARROW  shift, and go to state 666
+    T_DOUBLE_ARROW  shift, and go to state 688
 
-    $default  reduce using rule 116 (foreach_optional_arg)
+    $default  reduce using rule 125 (foreach_optional_arg)
 
-    foreach_optional_arg  go to state 669
+    foreach_optional_arg  go to state 691
 
 
-state 605
+state 623
 
-  118 foreach_variable: variable .
+  127 foreach_variable: variable .
 
-    $default  reduce using rule 118 (foreach_variable)
+    $default  reduce using rule 127 (foreach_variable)
 
 
-state 606
+state 624
 
-  126 declare_list: T_STRING '=' static_scalar .
+  135 declare_list: T_STRING '=' static_scalar .
 
-    $default  reduce using rule 126 (declare_list)
+    $default  reduce using rule 135 (declare_list)
 
 
-state 607
+state 625
 
-  127 declare_list: declare_list ',' T_STRING . '=' static_scalar
+  136 declare_list: declare_list ',' T_STRING . '=' static_scalar
 
-    '='  shift, and go to state 670
+    '='  shift, and go to state 692
 
 
-state 608
+state 626
 
-  125 declare_statement: ':' . inner_statement_list T_ENDDECLARE ';'
+  134 declare_statement: ':' . inner_statement_list T_ENDDECLARE ';'
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 671
+    inner_statement_list  go to state 693
 
 
-state 609
+state 627
 
-  124 declare_statement: statement .
+  133 declare_statement: statement .
 
-    $default  reduce using rule 124 (declare_statement)
+    $default  reduce using rule 133 (declare_statement)
 
 
-state 610
+state 628
 
-   74 unticked_statement: T_DECLARE @21 '(' declare_list ')' declare_statement .
+   83 unticked_statement: T_DECLARE @21 '(' declare_list ')' declare_statement .
 
-    $default  reduce using rule 74 (unticked_statement)
+    $default  reduce using rule 83 (unticked_statement)
 
 
-state 611
+state 629
 
-  130 switch_case_list: ':' . case_list T_ENDSWITCH ';'
-  131                 | ':' . ';' case_list T_ENDSWITCH ';'
+  139 switch_case_list: ':' . case_list T_ENDSWITCH ';'
+  140                 | ':' . ';' case_list T_ENDSWITCH ';'
 
-    ';'  shift, and go to state 672
+    ';'  shift, and go to state 694
 
-    $default  reduce using rule 132 (case_list)
+    $default  reduce using rule 141 (case_list)
 
-    case_list  go to state 673
+    case_list  go to state 695
 
 
-state 612
+state 630
 
-  128 switch_case_list: '{' . case_list '}'
-  129                 | '{' . ';' case_list '}'
+  137 switch_case_list: '{' . case_list '}'
+  138                 | '{' . ';' case_list '}'
 
-    ';'  shift, and go to state 674
+    ';'  shift, and go to state 696
 
-    $default  reduce using rule 132 (case_list)
+    $default  reduce using rule 141 (case_list)
 
-    case_list  go to state 675
+    case_list  go to state 697
 
 
-state 613
+state 631
 
-   53 unticked_statement: T_SWITCH '(' expr ')' @16 switch_case_list .
+   62 unticked_statement: T_SWITCH '(' expr ')' @16 switch_case_list .
 
-    $default  reduce using rule 53 (unticked_statement)
+    $default  reduce using rule 62 (unticked_statement)
 
 
-state 614
+state 632
 
-  377 non_empty_static_array_pair_list: static_scalar . T_DOUBLE_ARROW static_scalar
-  378                                 | static_scalar .
+  396 non_empty_static_array_pair_list: static_scalar . T_DOUBLE_ARROW static_scalar
+  397                                 | static_scalar .
 
-    T_DOUBLE_ARROW  shift, and go to state 676
+    T_DOUBLE_ARROW  shift, and go to state 698
 
-    $default  reduce using rule 378 (non_empty_static_array_pair_list)
+    $default  reduce using rule 397 (non_empty_static_array_pair_list)
 
 
-state 615
+state 633
 
-  360 static_scalar: T_ARRAY '(' static_array_pair_list . ')'
+  379 static_scalar: T_ARRAY '(' static_array_pair_list . ')'
 
-    ')'  shift, and go to state 677
+    ')'  shift, and go to state 699
 
 
-state 616
+state 634
 
-  372 static_array_pair_list: non_empty_static_array_pair_list . possible_comma
-  375 non_empty_static_array_pair_list: non_empty_static_array_pair_list . ',' static_scalar T_DOUBLE_ARROW static_scalar
-  376                                 | non_empty_static_array_pair_list . ',' static_scalar
+  391 static_array_pair_list: non_empty_static_array_pair_list . possible_comma
+  394 non_empty_static_array_pair_list: non_empty_static_array_pair_list . ',' static_scalar T_DOUBLE_ARROW static_scalar
+  395                                 | non_empty_static_array_pair_list . ',' static_scalar
 
-    ','  shift, and go to state 678
+    ','  shift, and go to state 700
 
-    $default  reduce using rule 373 (possible_comma)
+    $default  reduce using rule 392 (possible_comma)
 
-    possible_comma  go to state 679
+    possible_comma  go to state 701
 
 
-state 617
+state 635
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  320 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
-  356 static_scalar: T_NAMESPACE T_NS_SEPARATOR namespace_name .
+  339 class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
+  375 static_scalar: T_NAMESPACE T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 320 (class_name)
-    $default                reduce using rule 356 (static_scalar)
+    T_PAAMAYIM_NEKUDOTAYIM  reduce using rule 339 (class_name)
+    $default                reduce using rule 375 (static_scalar)
 
 
-state 618
+state 636
 
-  362 static_class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
+  381 static_class_constant: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING .
 
-    $default  reduce using rule 362 (static_class_constant)
+    $default  reduce using rule 381 (static_class_constant)
 
 
-state 619
+state 637
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH . '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH . '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    '('  shift, and go to state 680
+    '('  shift, and go to state 702
 
 
-state 620
+state 638
 
-  178 static_var_list: static_var_list ',' T_VARIABLE '=' static_scalar .
+  193 static_var_list: static_var_list ',' T_VARIABLE '=' static_scalar .
 
-    $default  reduce using rule 178 (static_var_list)
+    $default  reduce using rule 193 (static_var_list)
 
 
-state 621
+state 639
 
-  461 isset_variables: isset_variables ',' @68 variable .
+  480 isset_variables: isset_variables ',' @70 variable .
 
-    $default  reduce using rule 461 (isset_variables)
+    $default  reduce using rule 480 (isset_variables)
 
 
-state 622
+state 640
 
-  426 assignment_list_element: T_LIST '(' @66 . assignment_list ')'
+  445 assignment_list_element: T_LIST '(' @68 . assignment_list ')'
 
-    T_STRING        shift, and go to state 111
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_LIST          shift, and go to state 457
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    $default  reduce using rule 427 (assignment_list_element)
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 458
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    assignment_list                    go to state 681
-    assignment_list_element            go to state 460
+    T_STATIC        shift, and go to state 115
+    T_LIST          shift, and go to state 464
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    $default  reduce using rule 446 (assignment_list_element)
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 465
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    assignment_list                    go to state 703
+    assignment_list_element            go to state 467
 
 
-state 623
+state 641
 
-  422 assignment_list: assignment_list ',' assignment_list_element .
+  441 assignment_list: assignment_list ',' assignment_list_element .
 
-    $default  reduce using rule 422 (assignment_list)
+    $default  reduce using rule 441 (assignment_list)
 
 
-state 624
+state 642
 
-  216 expr_without_variable: T_LIST '(' @39 assignment_list ')' '=' . expr
+  235 expr_without_variable: T_LIST '(' @41 assignment_list ')' '=' . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -18108,12 +18396,12 @@ state 624
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -18124,56 +18412,56 @@ state 624
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 682
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 704
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 625
+state 643
 
-  436 non_empty_array_pair_list: expr T_DOUBLE_ARROW '&' w_variable .
+  455 non_empty_array_pair_list: expr T_DOUBLE_ARROW '&' w_variable .
 
-    $default  reduce using rule 436 (non_empty_array_pair_list)
+    $default  reduce using rule 455 (non_empty_array_pair_list)
 
 
-state 626
+state 644
 
-  435 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' w_variable .
+  454 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' w_variable .
 
-    $default  reduce using rule 435 (non_empty_array_pair_list)
+    $default  reduce using rule 454 (non_empty_array_pair_list)
 
 
-state 627
+state 645
 
-  430 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . expr
-  434                          | non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . '&' w_variable
+  449 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . expr
+  453                          | non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . '&' w_variable
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -18181,7 +18469,7 @@ state 627
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 683
+    '&'                         shift, and go to state 705
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -18201,12 +18489,12 @@ state 627
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -18217,294 +18505,332 @@ state 627
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 684
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 706
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 628
+state 646
 
-  444 encaps_var: T_VARIABLE '[' @67 encaps_var_offset ']' .
+  463 encaps_var: T_VARIABLE '[' @69 encaps_var_offset ']' .
 
-    $default  reduce using rule 444 (encaps_var)
+    $default  reduce using rule 463 (encaps_var)
 
 
-state 629
+state 647
 
-  447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}'
+  466 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}'
 
-    '}'  shift, and go to state 685
+    '}'  shift, and go to state 707
 
 
-state 630
+state 648
 
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' @52 function_call_parameter_list . ')'
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' @54 function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 686
+    ')'  shift, and go to state 708
 
 
-state 631
+state 649
 
-   13 top_statement: T_NAMESPACE namespace_name '{' @2 top_statement_list '}' .
+   14 top_statement: T_NAMESPACE namespace_name '{' @2 top_statement_list '}' .
 
-    $default  reduce using rule 13 (top_statement)
+    $default  reduce using rule 14 (top_statement)
 
 
-state 632
+state 650
 
-  307 function_call: T_NS_SEPARATOR namespace_name '(' @53 function_call_parameter_list ')' .
+  326 function_call: T_NS_SEPARATOR namespace_name '(' @55 function_call_parameter_list ')' .
 
-    $default  reduce using rule 307 (function_call)
+    $default  reduce using rule 326 (function_call)
 
 
-state 633
+state 651
 
-   32 inner_statement: T_HALT_COMPILER '(' ')' . ';'
+   26 annotation_arg: T_STRING '=' T_CONSTANT_ENCAPSED_STRING .
 
-    ';'  shift, and go to state 687
+    $default  reduce using rule 26 (annotation_arg)
 
 
-state 634
+state 652
+
+   24 annotation_args: annotation_arg ',' annotation_arg .
+
+    $default  reduce using rule 24 (annotation_args)
+
+
+state 653
+
+   41 inner_statement: T_HALT_COMPILER '(' ')' . ';'
+
+    ';'  shift, and go to state 709
+
+
+state 654
+
+  183 non_empty_function_call_parameter_list: annotations '&' w_variable .
+
+    $default  reduce using rule 183 (non_empty_function_call_parameter_list)
 
-  171 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' . w_variable
 
-    T_STRING        shift, and go to state 111
+state 655
+
+  186 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' . w_variable
+
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    w_variable                         go to state 688
-    variable                           go to state 462
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    w_variable                         go to state 710
+    variable                           go to state 469
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 635
+state 656
 
-  169 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' expr_without_variable .
-  380 expr: expr_without_variable .
+  184 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' expr_without_variable .
+  399 expr: expr_without_variable .
 
-    ','       reduce using rule 169 (non_empty_function_call_parameter_list)
-    ')'       reduce using rule 169 (non_empty_function_call_parameter_list)
-    $default  reduce using rule 380 (expr)
+    ','       reduce using rule 184 (non_empty_function_call_parameter_list)
+    ')'       reduce using rule 184 (non_empty_function_call_parameter_list)
+    $default  reduce using rule 399 (expr)
 
 
-state 636
+state 657
 
-  170 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' variable .
-  217 expr_without_variable: variable . '=' expr
-  218                      | variable . '=' '&' variable
-  220                      | variable . '=' '&' T_NEW class_name_reference @40 ctor_arguments
-  224                      | variable . T_PLUS_EQUAL expr
-  225                      | variable . T_MINUS_EQUAL expr
-  226                      | variable . T_MUL_EQUAL expr
-  227                      | variable . T_DIV_EQUAL expr
-  228                      | variable . T_CONCAT_EQUAL expr
-  229                      | variable . T_MOD_EQUAL expr
-  230                      | variable . T_AND_EQUAL expr
-  231                      | variable . T_OR_EQUAL expr
-  232                      | variable . T_XOR_EQUAL expr
-  233                      | variable . T_SL_EQUAL expr
-  234                      | variable . T_SR_EQUAL expr
-  381 r_variable: variable .
-  383 rw_variable: variable .
-
-    '='             shift, and go to state 251
-    T_SR_EQUAL      shift, and go to state 252
-    T_SL_EQUAL      shift, and go to state 253
-    T_XOR_EQUAL     shift, and go to state 254
-    T_OR_EQUAL      shift, and go to state 255
-    T_AND_EQUAL     shift, and go to state 256
-    T_MOD_EQUAL     shift, and go to state 257
-    T_CONCAT_EQUAL  shift, and go to state 258
-    T_DIV_EQUAL     shift, and go to state 259
-    T_MUL_EQUAL     shift, and go to state 260
-    T_MINUS_EQUAL   shift, and go to state 261
-    T_PLUS_EQUAL    shift, and go to state 262
-
-    ','       reduce using rule 170 (non_empty_function_call_parameter_list)
-    T_DEC     reduce using rule 383 (rw_variable)
-    T_INC     reduce using rule 383 (rw_variable)
-    ')'       reduce using rule 170 (non_empty_function_call_parameter_list)
-    $default  reduce using rule 381 (r_variable)
+  185 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' variable .
+  236 expr_without_variable: variable . '=' expr
+  237                      | variable . '=' '&' variable
+  239                      | variable . '=' '&' T_NEW class_name_reference @42 ctor_arguments
+  243                      | variable . T_PLUS_EQUAL expr
+  244                      | variable . T_MINUS_EQUAL expr
+  245                      | variable . T_MUL_EQUAL expr
+  246                      | variable . T_DIV_EQUAL expr
+  247                      | variable . T_CONCAT_EQUAL expr
+  248                      | variable . T_MOD_EQUAL expr
+  249                      | variable . T_AND_EQUAL expr
+  250                      | variable . T_OR_EQUAL expr
+  251                      | variable . T_XOR_EQUAL expr
+  252                      | variable . T_SL_EQUAL expr
+  253                      | variable . T_SR_EQUAL expr
+  400 r_variable: variable .
+  402 rw_variable: variable .
+
+    '='             shift, and go to state 257
+    T_SR_EQUAL      shift, and go to state 258
+    T_SL_EQUAL      shift, and go to state 259
+    T_XOR_EQUAL     shift, and go to state 260
+    T_OR_EQUAL      shift, and go to state 261
+    T_AND_EQUAL     shift, and go to state 262
+    T_MOD_EQUAL     shift, and go to state 263
+    T_CONCAT_EQUAL  shift, and go to state 264
+    T_DIV_EQUAL     shift, and go to state 265
+    T_MUL_EQUAL     shift, and go to state 266
+    T_MINUS_EQUAL   shift, and go to state 267
+    T_PLUS_EQUAL    shift, and go to state 268
+
+    ','       reduce using rule 185 (non_empty_function_call_parameter_list)
+    T_DEC     reduce using rule 402 (rw_variable)
+    T_INC     reduce using rule 402 (rw_variable)
+    ')'       reduce using rule 185 (non_empty_function_call_parameter_list)
+    $default  reduce using rule 400 (r_variable)
 
 
-state 637
+state 658
 
     6 namespace_name: namespace_name . T_NS_SEPARATOR T_STRING
-  323 fully_qualified_class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
+  342 fully_qualified_class_name: T_NAMESPACE T_NS_SEPARATOR namespace_name .
 
-    T_NS_SEPARATOR  shift, and go to state 213
+    T_NS_SEPARATOR  shift, and go to state 217
 
-    $default  reduce using rule 323 (fully_qualified_class_name)
+    $default  reduce using rule 342 (fully_qualified_class_name)
 
 
-state 638
+state 659
 
-  113 implements_list: T_IMPLEMENTS interface_list .
-  115 interface_list: interface_list . ',' fully_qualified_class_name
+  122 implements_list: T_IMPLEMENTS interface_list .
+  124 interface_list: interface_list . ',' fully_qualified_class_name
 
-    ','  shift, and go to state 640
+    ','  shift, and go to state 661
 
-    $default  reduce using rule 113 (implements_list)
+    $default  reduce using rule 122 (implements_list)
 
 
-state 639
+state 660
 
-  101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list '{' . class_statement_list '}'
+  110 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list '{' . class_statement_list '}'
 
-    $default  reduce using rule 182 (class_statement_list)
+    $default  reduce using rule 197 (class_statement_list)
 
-    class_statement_list  go to state 689
+    class_statement_list  go to state 711
 
 
-state 640
+state 661
 
-  115 interface_list: interface_list ',' . fully_qualified_class_name
+  124 interface_list: interface_list ',' . fully_qualified_class_name
 
-    T_STRING        shift, and go to state 111
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    T_STRING        shift, and go to state 114
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
 
-    namespace_name              go to state 490
-    fully_qualified_class_name  go to state 690
+    namespace_name              go to state 502
+    fully_qualified_class_name  go to state 712
 
 
-state 641
+state 662
 
-  103 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list '{' class_statement_list . '}'
-  181 class_statement_list: class_statement_list . class_statement
+  112 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list '{' class_statement_list . '}'
+  196 class_statement_list: class_statement_list . class_statement
 
-    T_CONST      shift, and go to state 691
-    T_PUBLIC     shift, and go to state 692
-    T_PROTECTED  shift, and go to state 693
-    T_PRIVATE    shift, and go to state 694
-    T_FINAL      shift, and go to state 695
-    T_ABSTRACT   shift, and go to state 696
-    T_STATIC     shift, and go to state 697
-    T_VAR        shift, and go to state 698
-    '}'          shift, and go to state 699
+    T_CONST       shift, and go to state 713
+    T_PUBLIC      shift, and go to state 714
+    T_PROTECTED   shift, and go to state 715
+    T_PRIVATE     shift, and go to state 716
+    T_FINAL       shift, and go to state 717
+    T_ABSTRACT    shift, and go to state 718
+    T_STATIC      shift, and go to state 719
+    T_VAR         shift, and go to state 720
+    T_ANNOTATION  shift, and go to state 74
+    '}'           shift, and go to state 721
 
-    $default  reduce using rule 192 (method_modifiers)
+    $default  reduce using rule 211 (method_modifiers)
 
-    class_statement             go to state 700
-    variable_modifiers          go to state 701
-    method_modifiers            go to state 702
-    non_empty_member_modifiers  go to state 703
-    member_modifier             go to state 704
-    class_constant_declaration  go to state 705
+    annotations                 go to state 722
+    annotation                  go to state 84
+    class_statement             go to state 723
+    variable_modifiers          go to state 724
+    method_modifiers            go to state 725
+    non_empty_member_modifiers  go to state 726
+    member_modifier             go to state 727
+    class_constant_declaration  go to state 728
 
 
-state 642
+state 663
 
-   99 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list . ')' '{' inner_statement_list '}'
+  108 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list . ')' '{' inner_statement_list '}'
 
-    ')'  shift, and go to state 706
+    ')'  shift, and go to state 729
 
 
-state 643
+state 664
 
-  294 expr_without_variable: function is_reference '(' @50 parameter_list ')' . lexical_vars '{' inner_statement_list '}'
+  164 non_empty_parameter_list: annotations optional_class_type . T_VARIABLE
+  165                         | annotations optional_class_type . '&' T_VARIABLE
 
-    T_USE  shift, and go to state 707
+    '&'         shift, and go to state 730
+    T_VARIABLE  shift, and go to state 731
 
-    $default  reduce using rule 296 (lexical_vars)
 
-    lexical_vars  go to state 708
+state 665
 
+  313 expr_without_variable: function is_reference '(' @52 parameter_list ')' . lexical_vars '{' inner_statement_list '}'
 
-state 644
+    T_USE  shift, and go to state 732
 
-  157 non_empty_parameter_list: non_empty_parameter_list ',' . optional_class_type T_VARIABLE
-  158                         | non_empty_parameter_list ',' . optional_class_type '&' T_VARIABLE
-  159                         | non_empty_parameter_list ',' . optional_class_type '&' T_VARIABLE '=' static_scalar
-  160                         | non_empty_parameter_list ',' . optional_class_type T_VARIABLE '=' static_scalar
+    $default  reduce using rule 315 (lexical_vars)
 
-    T_STRING        shift, and go to state 111
-    T_ARRAY         shift, and go to state 576
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    lexical_vars  go to state 733
 
-    $default  reduce using rule 161 (optional_class_type)
 
-    namespace_name              go to state 490
-    optional_class_type         go to state 709
-    fully_qualified_class_name  go to state 580
+state 666
 
+  168 non_empty_parameter_list: non_empty_parameter_list ',' . optional_class_type T_VARIABLE
+  169                         | non_empty_parameter_list ',' . optional_class_type '&' T_VARIABLE
+  170                         | non_empty_parameter_list ',' . annotations optional_class_type T_VARIABLE
+  171                         | non_empty_parameter_list ',' . annotations optional_class_type '&' T_VARIABLE
+  172                         | non_empty_parameter_list ',' . optional_class_type '&' T_VARIABLE '=' static_scalar
+  173                         | non_empty_parameter_list ',' . optional_class_type T_VARIABLE '=' static_scalar
 
-state 645
+    T_STRING        shift, and go to state 114
+    T_ARRAY         shift, and go to state 593
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
+    T_ANNOTATION    shift, and go to state 74
 
-  154 non_empty_parameter_list: optional_class_type '&' . T_VARIABLE
-  155                         | optional_class_type '&' . T_VARIABLE '=' static_scalar
+    $default  reduce using rule 174 (optional_class_type)
 
-    T_VARIABLE  shift, and go to state 710
+    namespace_name              go to state 502
+    annotations                 go to state 734
+    annotation                  go to state 84
+    optional_class_type         go to state 735
+    fully_qualified_class_name  go to state 598
 
 
-state 646
+state 667
 
-  153 non_empty_parameter_list: optional_class_type T_VARIABLE .
-  156                         | optional_class_type T_VARIABLE . '=' static_scalar
+  163 non_empty_parameter_list: optional_class_type '&' . T_VARIABLE
+  166                         | optional_class_type '&' . T_VARIABLE '=' static_scalar
 
-    '='  shift, and go to state 711
+    T_VARIABLE  shift, and go to state 736
 
-    $default  reduce using rule 153 (non_empty_parameter_list)
 
+state 668
 
-state 647
+  162 non_empty_parameter_list: optional_class_type T_VARIABLE .
+  167                         | optional_class_type T_VARIABLE . '=' static_scalar
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @54 function_call_parameter_list . ')'
+    '='  shift, and go to state 737
 
-    ')'  shift, and go to state 712
+    $default  reduce using rule 162 (non_empty_parameter_list)
 
 
-state 648
+state 669
 
-  311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @55 function_call_parameter_list . ')'
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 713
+    ')'  shift, and go to state 738
 
 
-state 649
+state 670
+
+  330 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list . ')'
+
+    ')'  shift, and go to state 739
+
 
-  275 expr_without_variable: expr '?' @46 expr ':' @47 . expr
+state 671
+
+  294 expr_without_variable: expr '?' @48 expr ':' @49 . expr
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -18531,12 +18857,12 @@ state 649
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -18547,1003 +18873,1064 @@ state 649
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 714
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 740
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 650
+state 672
 
-  220 expr_without_variable: variable '=' '&' T_NEW class_name_reference @40 . ctor_arguments
+  239 expr_without_variable: variable '=' '&' T_NEW class_name_reference @42 . ctor_arguments
 
-    '('  shift, and go to state 416
+    '('  shift, and go to state 423
 
-    $default  reduce using rule 340 (ctor_arguments)
+    $default  reduce using rule 359 (ctor_arguments)
 
-    ctor_arguments  go to state 715
+    ctor_arguments  go to state 741
 
 
-state 651
+state 673
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list . ')'
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @58 function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 716
+    ')'  shift, and go to state 742
 
 
-state 652
+state 674
 
-  315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list . ')'
+  334 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @59 function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 717
+    ')'  shift, and go to state 743
 
 
-state 653
+state 675
 
-  419 variable_name: '{' expr '}' .
+  438 variable_name: '{' expr '}' .
 
-    $default  reduce using rule 419 (variable_name)
+    $default  reduce using rule 438 (variable_name)
 
 
-state 654
+state 676
 
-  393 method_or_not: '(' . @64 function_call_parameter_list ')'
+  412 method_or_not: '(' . @66 function_call_parameter_list ')'
 
-    $default  reduce using rule 392 (@64)
+    $default  reduce using rule 411 (@66)
 
-    @64  go to state 718
+    @66  go to state 744
 
 
-state 655
+state 677
 
-  386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @61 object_property @62 method_or_not . variable_properties
+  405 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @63 object_property @64 method_or_not . variable_properties
 
-    $default  reduce using rule 389 (variable_properties)
+    $default  reduce using rule 408 (variable_properties)
 
-    variable_properties  go to state 719
+    variable_properties  go to state 745
 
 
-state 656
+state 678
 
-  415 object_dim_list: object_dim_list '[' dim_offset . ']'
+  434 object_dim_list: object_dim_list '[' dim_offset . ']'
 
-    ']'  shift, and go to state 720
+    ']'  shift, and go to state 746
 
 
-state 657
+state 679
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  416 object_dim_list: object_dim_list '{' expr . '}'
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    '}'                    shift, and go to state 721
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  435 object_dim_list: object_dim_list '{' expr . '}'
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    '}'                    shift, and go to state 747
 
 
-state 658
+state 680
 
-  329 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @59 object_property @60 dynamic_class_name_variable_properties .
-  331 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties . dynamic_class_name_variable_property
+  348 dynamic_class_name_reference: base_variable T_OBJECT_OPERATOR @61 object_property @62 dynamic_class_name_variable_properties .
+  350 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties . dynamic_class_name_variable_property
 
-    T_OBJECT_OPERATOR  shift, and go to state 722
+    T_OBJECT_OPERATOR  shift, and go to state 748
 
-    $default  reduce using rule 329 (dynamic_class_name_reference)
+    $default  reduce using rule 348 (dynamic_class_name_reference)
 
-    dynamic_class_name_variable_property  go to state 723
+    dynamic_class_name_variable_property  go to state 749
 
 
-state 659
+state 681
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-   41 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list . @8 new_elseif_list new_else_single T_ENDIF ';'
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+   50 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list . @8 new_elseif_list new_else_single T_ENDIF ';'
 
-    T_ELSEIF  reduce using rule 40 (@8)
-    T_ELSE    reduce using rule 40 (@8)
-    T_ENDIF   reduce using rule 40 (@8)
-    $default  reduce using rule 26 (@4)
+    T_ELSEIF  reduce using rule 49 (@8)
+    T_ELSE    reduce using rule 49 (@8)
+    T_ENDIF   reduce using rule 49 (@8)
+    $default  reduce using rule 35 (@4)
 
-    @4  go to state 347
-    @8  go to state 724
+    @4  go to state 354
+    @8  go to state 750
 
 
-state 660
+state 682
 
-   38 unticked_statement: T_IF '(' expr ')' @5 statement @6 . elseif_list else_single
+   47 unticked_statement: T_IF '(' expr ')' @5 statement @6 . elseif_list else_single
 
-    $default  reduce using rule 141 (elseif_list)
+    $default  reduce using rule 150 (elseif_list)
 
-    elseif_list  go to state 725
+    elseif_list  go to state 751
 
 
-state 661
+state 683
 
-   47 unticked_statement: T_DO @11 statement T_WHILE '(' @12 expr . ')' ';'
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 726
+   56 unticked_statement: T_DO @11 statement T_WHILE '(' @12 expr . ')' ';'
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 752
 
 
-state 662
+state 684
 
-  140 while_statement: ':' . inner_statement_list T_ENDWHILE ';'
+  149 while_statement: ':' . inner_statement_list T_ENDWHILE ';'
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 727
+    inner_statement_list  go to state 753
 
 
-state 663
+state 685
 
-  139 while_statement: statement .
+  148 while_statement: statement .
 
-    $default  reduce using rule 139 (while_statement)
+    $default  reduce using rule 148 (while_statement)
 
 
-state 664
+state 686
 
-   44 unticked_statement: T_WHILE '(' @9 expr ')' @10 while_statement .
+   53 unticked_statement: T_WHILE '(' @9 expr ')' @10 while_statement .
 
-    $default  reduce using rule 44 (unticked_statement)
+    $default  reduce using rule 53 (unticked_statement)
 
 
-state 665
+state 687
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' . @14 for_expr ')' @15 for_statement
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' . @14 for_expr ')' @15 for_statement
 
-    $default  reduce using rule 49 (@14)
+    $default  reduce using rule 58 (@14)
 
-    @14  go to state 728
+    @14  go to state 754
 
 
-state 666
+state 688
 
-  117 foreach_optional_arg: T_DOUBLE_ARROW . foreach_variable
+  126 foreach_optional_arg: T_DOUBLE_ARROW . foreach_variable
 
-    '&'             shift, and go to state 603
-    T_STRING        shift, and go to state 111
+    '&'             shift, and go to state 621
+    T_STRING        shift, and go to state 114
     T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    foreach_variable                   go to state 729
-    function_call                      go to state 93
-    class_name                         go to state 136
-    variable                           go to state 605
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    foreach_variable                   go to state 755
+    function_call                      go to state 96
+    class_name                         go to state 139
+    variable                           go to state 623
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 667
+state 689
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg . ')' @20 foreach_statement
+   81 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg . ')' @20 foreach_statement
 
-    ')'  shift, and go to state 730
+    ')'  shift, and go to state 756
 
 
-state 668
+state 690
 
-  119 foreach_variable: '&' variable .
+  128 foreach_variable: '&' variable .
 
-    $default  reduce using rule 119 (foreach_variable)
+    $default  reduce using rule 128 (foreach_variable)
 
 
-state 669
+state 691
 
-   69 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg . ')' @18 foreach_statement
+   78 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg . ')' @18 foreach_statement
 
-    ')'  shift, and go to state 731
+    ')'  shift, and go to state 757
 
 
-state 670
+state 692
 
-  127 declare_list: declare_list ',' T_STRING '=' . static_scalar
+  136 declare_list: declare_list ',' T_STRING '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 732
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 758
+    static_class_constant  go to state 449
 
 
-state 671
+state 693
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  125 declare_statement: ':' inner_statement_list . T_ENDDECLARE ';'
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  134 declare_statement: ':' inner_statement_list . T_ENDDECLARE ';'
 
-    T_ENDDECLARE  shift, and go to state 733
+    T_ENDDECLARE  shift, and go to state 759
 
-    $default  reduce using rule 26 (@4)
+    $default  reduce using rule 35 (@4)
 
-    @4  go to state 347
+    @4  go to state 354
 
 
-state 672
+state 694
 
-  131 switch_case_list: ':' ';' . case_list T_ENDSWITCH ';'
+  140 switch_case_list: ':' ';' . case_list T_ENDSWITCH ';'
 
-    $default  reduce using rule 132 (case_list)
+    $default  reduce using rule 141 (case_list)
 
-    case_list  go to state 734
+    case_list  go to state 760
 
 
-state 673
+state 695
 
-  130 switch_case_list: ':' case_list . T_ENDSWITCH ';'
-  134 case_list: case_list . T_CASE expr case_separator @32 inner_statement_list
-  136          | case_list . T_DEFAULT case_separator @33 inner_statement_list
+  139 switch_case_list: ':' case_list . T_ENDSWITCH ';'
+  143 case_list: case_list . T_CASE expr case_separator @32 inner_statement_list
+  145          | case_list . T_DEFAULT case_separator @33 inner_statement_list
 
-    T_ENDSWITCH  shift, and go to state 735
-    T_CASE       shift, and go to state 736
-    T_DEFAULT    shift, and go to state 737
+    T_ENDSWITCH  shift, and go to state 761
+    T_CASE       shift, and go to state 762
+    T_DEFAULT    shift, and go to state 763
 
 
-state 674
+state 696
 
-  129 switch_case_list: '{' ';' . case_list '}'
+  138 switch_case_list: '{' ';' . case_list '}'
 
-    $default  reduce using rule 132 (case_list)
+    $default  reduce using rule 141 (case_list)
 
-    case_list  go to state 738
+    case_list  go to state 764
 
 
-state 675
+state 697
 
-  128 switch_case_list: '{' case_list . '}'
-  134 case_list: case_list . T_CASE expr case_separator @32 inner_statement_list
-  136          | case_list . T_DEFAULT case_separator @33 inner_statement_list
+  137 switch_case_list: '{' case_list . '}'
+  143 case_list: case_list . T_CASE expr case_separator @32 inner_statement_list
+  145          | case_list . T_DEFAULT case_separator @33 inner_statement_list
 
-    T_CASE     shift, and go to state 736
-    T_DEFAULT  shift, and go to state 737
-    '}'        shift, and go to state 739
+    T_CASE     shift, and go to state 762
+    T_DEFAULT  shift, and go to state 763
+    '}'        shift, and go to state 765
 
 
-state 676
+state 698
 
-  377 non_empty_static_array_pair_list: static_scalar T_DOUBLE_ARROW . static_scalar
+  396 non_empty_static_array_pair_list: static_scalar T_DOUBLE_ARROW . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 740
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 766
+    static_class_constant  go to state 449
 
 
-state 677
+state 699
 
-  360 static_scalar: T_ARRAY '(' static_array_pair_list ')' .
+  379 static_scalar: T_ARRAY '(' static_array_pair_list ')' .
 
-    $default  reduce using rule 360 (static_scalar)
+    $default  reduce using rule 379 (static_scalar)
 
 
-state 678
+state 700
 
-  374 possible_comma: ',' .
-  375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' . static_scalar T_DOUBLE_ARROW static_scalar
-  376                                 | non_empty_static_array_pair_list ',' . static_scalar
+  393 possible_comma: ',' .
+  394 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' . static_scalar T_DOUBLE_ARROW static_scalar
+  395                                 | non_empty_static_array_pair_list ',' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
+
+    $default  reduce using rule 393 (possible_comma)
+
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 767
+    static_class_constant  go to state 449
+
+
+state 701
+
+  391 static_array_pair_list: non_empty_static_array_pair_list possible_comma .
+
+    $default  reduce using rule 391 (static_array_pair_list)
+
+
+state 702
+
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' . @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+
+    $default  reduce using rule 86 (@23)
 
-    $default  reduce using rule 374 (possible_comma)
+    @23  go to state 768
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 741
-    static_class_constant  go to state 442
+
+state 703
+
+  441 assignment_list: assignment_list . ',' assignment_list_element
+  445 assignment_list_element: T_LIST '(' @68 assignment_list . ')'
+
+    ','  shift, and go to state 560
+    ')'  shift, and go to state 769
+
+
+state 704
+
+  235 expr_without_variable: T_LIST '(' @41 assignment_list ')' '=' expr .
+  259                      | expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 235 (expr_without_variable)
+
+
+state 705
+
+  453 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' . w_variable
+
+    T_STRING        shift, and go to state 114
+    T_VARIABLE      shift, and go to state 33
+    T_STATIC        shift, and go to state 115
+    T_NAMESPACE     shift, and go to state 136
+    T_NS_SEPARATOR  shift, and go to state 137
+    '$'             shift, and go to state 78
+
+    namespace_name                     go to state 138
+    function_call                      go to state 96
+    class_name                         go to state 139
+    w_variable                         go to state 770
+    variable                           go to state 469
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 142
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
 
 
-state 679
+state 706
 
-  372 static_array_pair_list: non_empty_static_array_pair_list possible_comma .
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+  449 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr .
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+
+    $default  reduce using rule 449 (non_empty_array_pair_list)
 
-    $default  reduce using rule 372 (static_array_pair_list)
 
+state 707
 
-state 680
+  466 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' .
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' . @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+    $default  reduce using rule 466 (encaps_var)
 
-    $default  reduce using rule 77 (@23)
 
-    @23  go to state 742
+state 708
 
+  324 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' @54 function_call_parameter_list ')' .
 
-state 681
+    $default  reduce using rule 324 (function_call)
 
-  422 assignment_list: assignment_list . ',' assignment_list_element
-  426 assignment_list_element: T_LIST '(' @66 assignment_list . ')'
 
-    ','  shift, and go to state 548
-    ')'  shift, and go to state 743
+state 709
 
+   41 inner_statement: T_HALT_COMPILER '(' ')' ';' .
 
-state 682
+    $default  reduce using rule 41 (inner_statement)
 
-  216 expr_without_variable: T_LIST '(' @39 assignment_list ')' '=' expr .
-  240                      | expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 216 (expr_without_variable)
 
+state 710
 
-state 683
+  186 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' w_variable .
 
-  434 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' . w_variable
+    $default  reduce using rule 186 (non_empty_function_call_parameter_list)
 
-    T_STRING        shift, and go to state 111
-    T_VARIABLE      shift, and go to state 33
-    T_STATIC        shift, and go to state 112
-    T_NAMESPACE     shift, and go to state 133
-    T_NS_SEPARATOR  shift, and go to state 134
-    '$'             shift, and go to state 77
-
-    namespace_name                     go to state 135
-    function_call                      go to state 93
-    class_name                         go to state 136
-    w_variable                         go to state 744
-    variable                           go to state 462
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 139
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
 
+state 711
 
-state 684
+  110 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list '{' class_statement_list . '}'
+  196 class_statement_list: class_statement_list . class_statement
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-  430 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr .
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-
-    $default  reduce using rule 430 (non_empty_array_pair_list)
+    T_CONST       shift, and go to state 713
+    T_PUBLIC      shift, and go to state 714
+    T_PROTECTED   shift, and go to state 715
+    T_PRIVATE     shift, and go to state 716
+    T_FINAL       shift, and go to state 717
+    T_ABSTRACT    shift, and go to state 718
+    T_STATIC      shift, and go to state 719
+    T_VAR         shift, and go to state 720
+    T_ANNOTATION  shift, and go to state 74
+    '}'           shift, and go to state 771
 
+    $default  reduce using rule 211 (method_modifiers)
 
-state 685
+    annotations                 go to state 722
+    annotation                  go to state 84
+    class_statement             go to state 723
+    variable_modifiers          go to state 724
+    method_modifiers            go to state 725
+    non_empty_member_modifiers  go to state 726
+    member_modifier             go to state 727
+    class_constant_declaration  go to state 728
 
-  447 encaps_var: T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' .
 
-    $default  reduce using rule 447 (encaps_var)
+state 712
 
+  124 interface_list: interface_list ',' fully_qualified_class_name .
 
-state 686
+    $default  reduce using rule 124 (interface_list)
 
-  305 function_call: T_NAMESPACE T_NS_SEPARATOR namespace_name '(' @52 function_call_parameter_list ')' .
 
-    $default  reduce using rule 305 (function_call)
+state 713
 
+  226 class_constant_declaration: T_CONST . T_STRING '=' static_scalar
 
-state 687
+    T_STRING  shift, and go to state 772
 
-   32 inner_statement: T_HALT_COMPILER '(' ')' ';' .
 
-    $default  reduce using rule 32 (inner_statement)
+state 714
 
+  215 member_modifier: T_PUBLIC .
 
-state 688
+    $default  reduce using rule 215 (member_modifier)
 
-  171 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' w_variable .
 
-    $default  reduce using rule 171 (non_empty_function_call_parameter_list)
+state 715
 
+  216 member_modifier: T_PROTECTED .
 
-state 689
+    $default  reduce using rule 216 (member_modifier)
 
-  101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list '{' class_statement_list . '}'
-  181 class_statement_list: class_statement_list . class_statement
 
-    T_CONST      shift, and go to state 691
-    T_PUBLIC     shift, and go to state 692
-    T_PROTECTED  shift, and go to state 693
-    T_PRIVATE    shift, and go to state 694
-    T_FINAL      shift, and go to state 695
-    T_ABSTRACT   shift, and go to state 696
-    T_STATIC     shift, and go to state 697
-    T_VAR        shift, and go to state 698
-    '}'          shift, and go to state 745
+state 716
 
-    $default  reduce using rule 192 (method_modifiers)
+  217 member_modifier: T_PRIVATE .
 
-    class_statement             go to state 700
-    variable_modifiers          go to state 701
-    method_modifiers            go to state 702
-    non_empty_member_modifiers  go to state 703
-    member_modifier             go to state 704
-    class_constant_declaration  go to state 705
+    $default  reduce using rule 217 (member_modifier)
 
 
-state 690
+state 717
 
-  115 interface_list: interface_list ',' fully_qualified_class_name .
+  220 member_modifier: T_FINAL .
 
-    $default  reduce using rule 115 (interface_list)
+    $default  reduce using rule 220 (member_modifier)
 
 
-state 691
+state 718
 
-  207 class_constant_declaration: T_CONST . T_STRING '=' static_scalar
+  219 member_modifier: T_ABSTRACT .
 
-    T_STRING  shift, and go to state 746
+    $default  reduce using rule 219 (member_modifier)
 
 
-state 692
+state 719
 
-  196 member_modifier: T_PUBLIC .
+  218 member_modifier: T_STATIC .
 
-    $default  reduce using rule 196 (member_modifier)
+    $default  reduce using rule 218 (member_modifier)
 
 
-state 693
+state 720
 
-  197 member_modifier: T_PROTECTED .
+  210 variable_modifiers: T_VAR .
 
-    $default  reduce using rule 197 (member_modifier)
+    $default  reduce using rule 210 (variable_modifiers)
 
 
-state 694
+state 721
 
-  198 member_modifier: T_PRIVATE .
+  112 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list '{' class_statement_list '}' .
 
-    $default  reduce using rule 198 (member_modifier)
+    $default  reduce using rule 112 (unticked_class_declaration_statement)
 
 
-state 695
+state 722
 
-  201 member_modifier: T_FINAL .
+   19 annotations: annotations . annotation
+  201 class_statement: annotations . variable_modifiers @37 class_variable_declaration ';'
+  206                | annotations . method_modifiers function is_reference T_STRING @39 '(' parameter_list ')' method_body
 
-    $default  reduce using rule 201 (member_modifier)
+    T_PUBLIC      shift, and go to state 714
+    T_PROTECTED   shift, and go to state 715
+    T_PRIVATE     shift, and go to state 716
+    T_FINAL       shift, and go to state 717
+    T_ABSTRACT    shift, and go to state 718
+    T_STATIC      shift, and go to state 719
+    T_VAR         shift, and go to state 720
+    T_ANNOTATION  shift, and go to state 74
 
+    $default  reduce using rule 211 (method_modifiers)
 
-state 696
+    annotation                  go to state 219
+    variable_modifiers          go to state 773
+    method_modifiers            go to state 774
+    non_empty_member_modifiers  go to state 726
+    member_modifier             go to state 727
 
-  200 member_modifier: T_ABSTRACT .
 
-    $default  reduce using rule 200 (member_modifier)
+state 723
 
+  196 class_statement_list: class_statement_list class_statement .
 
-state 697
+    $default  reduce using rule 196 (class_statement_list)
 
-  199 member_modifier: T_STATIC .
 
-    $default  reduce using rule 199 (member_modifier)
+state 724
 
+  199 class_statement: variable_modifiers . @36 class_variable_declaration ';'
 
-state 698
+    $default  reduce using rule 198 (@36)
 
-  191 variable_modifiers: T_VAR .
+    @36  go to state 775
 
-    $default  reduce using rule 191 (variable_modifiers)
 
+state 725
 
-state 699
+  204 class_statement: method_modifiers . function is_reference T_STRING @38 '(' parameter_list ')' method_body
 
-  103 unticked_class_declaration_statement: interface_entry T_STRING @31 interface_extends_list '{' class_statement_list '}' .
+    T_FUNCTION  shift, and go to state 46
 
-    $default  reduce using rule 103 (unticked_class_declaration_statement)
+    function  go to state 776
 
 
-state 700
+state 726
 
-  181 class_statement_list: class_statement_list class_statement .
+  209 variable_modifiers: non_empty_member_modifiers .
+  212 method_modifiers: non_empty_member_modifiers .
+  214 non_empty_member_modifiers: non_empty_member_modifiers . member_modifier
 
-    $default  reduce using rule 181 (class_statement_list)
+    T_PUBLIC     shift, and go to state 714
+    T_PROTECTED  shift, and go to state 715
+    T_PRIVATE    shift, and go to state 716
+    T_FINAL      shift, and go to state 717
+    T_ABSTRACT   shift, and go to state 718
+    T_STATIC     shift, and go to state 719
 
+    T_FUNCTION  reduce using rule 212 (method_modifiers)
+    $default    reduce using rule 209 (variable_modifiers)
 
-state 701
+    member_modifier  go to state 777
 
-  184 class_statement: variable_modifiers . @36 class_variable_declaration ';'
 
-    $default  reduce using rule 183 (@36)
+state 727
 
-    @36  go to state 747
+  213 non_empty_member_modifiers: member_modifier .
 
+    $default  reduce using rule 213 (non_empty_member_modifiers)
 
-state 702
 
-  187 class_statement: method_modifiers . function is_reference T_STRING @37 '(' parameter_list ')' method_body
+state 728
 
-    T_FUNCTION  shift, and go to state 46
+  202 class_statement: class_constant_declaration . ';'
+  225 class_constant_declaration: class_constant_declaration . ',' T_STRING '=' static_scalar
 
-    function  go to state 748
+    ','  shift, and go to state 778
+    ';'  shift, and go to state 779
 
 
-state 703
+state 729
 
-  190 variable_modifiers: non_empty_member_modifiers .
-  193 method_modifiers: non_empty_member_modifiers .
-  195 non_empty_member_modifiers: non_empty_member_modifiers . member_modifier
+  108 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' . '{' inner_statement_list '}'
 
-    T_PUBLIC     shift, and go to state 692
-    T_PROTECTED  shift, and go to state 693
-    T_PRIVATE    shift, and go to state 694
-    T_FINAL      shift, and go to state 695
-    T_ABSTRACT   shift, and go to state 696
-    T_STATIC     shift, and go to state 697
+    '{'  shift, and go to state 780
 
-    T_FUNCTION  reduce using rule 193 (method_modifiers)
-    $default    reduce using rule 190 (variable_modifiers)
 
-    member_modifier  go to state 749
+state 730
 
+  165 non_empty_parameter_list: annotations optional_class_type '&' . T_VARIABLE
 
-state 704
+    T_VARIABLE  shift, and go to state 781
 
-  194 non_empty_member_modifiers: member_modifier .
 
-    $default  reduce using rule 194 (non_empty_member_modifiers)
+state 731
 
+  164 non_empty_parameter_list: annotations optional_class_type T_VARIABLE .
 
-state 705
+    $default  reduce using rule 164 (non_empty_parameter_list)
 
-  185 class_statement: class_constant_declaration . ';'
-  206 class_constant_declaration: class_constant_declaration . ',' T_STRING '=' static_scalar
 
-    ','  shift, and go to state 750
-    ';'  shift, and go to state 751
+state 732
 
+  316 lexical_vars: T_USE . '(' lexical_var_list ')'
 
-state 706
+    '('  shift, and go to state 782
 
-   99 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' . '{' inner_statement_list '}'
 
-    '{'  shift, and go to state 752
+state 733
 
+  313 expr_without_variable: function is_reference '(' @52 parameter_list ')' lexical_vars . '{' inner_statement_list '}'
 
-state 707
+    '{'  shift, and go to state 783
 
-  297 lexical_vars: T_USE . '(' lexical_var_list ')'
 
-    '('  shift, and go to state 753
+state 734
 
+   19 annotations: annotations . annotation
+  170 non_empty_parameter_list: non_empty_parameter_list ',' annotations . optional_class_type T_VARIABLE
+  171                         | non_empty_parameter_list ',' annotations . optional_class_type '&' T_VARIABLE
 
-state 708
+    T_STRING        shift, and go to state 114
+    T_ARRAY         shift, and go to state 593
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
+    T_ANNOTATION    shift, and go to state 74
 
-  294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars . '{' inner_statement_list '}'
+    $default  reduce using rule 174 (optional_class_type)
 
-    '{'  shift, and go to state 754
+    namespace_name              go to state 502
+    annotation                  go to state 219
+    optional_class_type         go to state 784
+    fully_qualified_class_name  go to state 598
 
 
-state 709
+state 735
 
-  157 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type . T_VARIABLE
-  158                         | non_empty_parameter_list ',' optional_class_type . '&' T_VARIABLE
-  159                         | non_empty_parameter_list ',' optional_class_type . '&' T_VARIABLE '=' static_scalar
-  160                         | non_empty_parameter_list ',' optional_class_type . T_VARIABLE '=' static_scalar
+  168 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type . T_VARIABLE
+  169                         | non_empty_parameter_list ',' optional_class_type . '&' T_VARIABLE
+  172                         | non_empty_parameter_list ',' optional_class_type . '&' T_VARIABLE '=' static_scalar
+  173                         | non_empty_parameter_list ',' optional_class_type . T_VARIABLE '=' static_scalar
 
-    '&'         shift, and go to state 755
-    T_VARIABLE  shift, and go to state 756
+    '&'         shift, and go to state 785
+    T_VARIABLE  shift, and go to state 786
 
 
-state 710
+state 736
 
-  154 non_empty_parameter_list: optional_class_type '&' T_VARIABLE .
-  155                         | optional_class_type '&' T_VARIABLE . '=' static_scalar
+  163 non_empty_parameter_list: optional_class_type '&' T_VARIABLE .
+  166                         | optional_class_type '&' T_VARIABLE . '=' static_scalar
 
-    '='  shift, and go to state 757
+    '='  shift, and go to state 787
 
-    $default  reduce using rule 154 (non_empty_parameter_list)
+    $default  reduce using rule 163 (non_empty_parameter_list)
 
 
-state 711
+state 737
 
-  156 non_empty_parameter_list: optional_class_type T_VARIABLE '=' . static_scalar
+  167 non_empty_parameter_list: optional_class_type T_VARIABLE '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 758
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 788
+    static_class_constant  go to state 449
 
 
-state 712
+state 738
 
-  309 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @54 function_call_parameter_list ')' .
+  328 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list ')' .
 
-    $default  reduce using rule 309 (function_call)
+    $default  reduce using rule 328 (function_call)
 
 
-state 713
+state 739
 
-  311 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @55 function_call_parameter_list ')' .
+  330 function_call: class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list ')' .
 
-    $default  reduce using rule 311 (function_call)
+    $default  reduce using rule 330 (function_call)
 
 
-state 714
+state 740
 
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  275                      | expr '?' @46 expr ':' @47 expr .
-  277                      | expr . '?' ':' @48 expr
-
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  294                      | expr '?' @48 expr ':' @49 expr .
+  296                      | expr . '?' ':' @50 expr
+
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
 
-    $default  reduce using rule 275 (expr_without_variable)
+    $default  reduce using rule 294 (expr_without_variable)
 
 
-state 715
+state 741
 
-  220 expr_without_variable: variable '=' '&' T_NEW class_name_reference @40 ctor_arguments .
+  239 expr_without_variable: variable '=' '&' T_NEW class_name_reference @42 ctor_arguments .
 
-    $default  reduce using rule 220 (expr_without_variable)
+    $default  reduce using rule 239 (expr_without_variable)
 
 
-state 716
+state 742
 
-  313 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @56 function_call_parameter_list ')' .
+  332 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @58 function_call_parameter_list ')' .
 
-    $default  reduce using rule 313 (function_call)
+    $default  reduce using rule 332 (function_call)
 
 
-state 717
+state 743
 
-  315 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @57 function_call_parameter_list ')' .
+  334 function_call: variable_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects '(' @59 function_call_parameter_list ')' .
 
-    $default  reduce using rule 315 (function_call)
+    $default  reduce using rule 334 (function_call)
 
 
-state 718
+state 744
 
-  393 method_or_not: '(' @64 . function_call_parameter_list ')'
+  412 method_or_not: '(' @66 . function_call_parameter_list ')'
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -19551,7 +19938,7 @@ state 718
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    '&'                         shift, and go to state 482
+    '&'                         shift, and go to state 493
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -19571,12 +19958,12 @@ state 718
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -19587,139 +19974,142 @@ state 718
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 165 (function_call_parameter_list)
-
-    namespace_name                          go to state 80
-    function_call_parameter_list            go to state 759
-    non_empty_function_call_parameter_list  go to state 484
-    expr_without_variable                   go to state 485
-    function                                go to state 114
-    function_call                           go to state 93
-    class_name                              go to state 94
-    common_scalar                           go to state 95
-    scalar                                  go to state 96
-    expr                                    go to state 172
-    r_variable                              go to state 98
-    rw_variable                             go to state 99
-    variable                                go to state 486
-    variable_without_objects                go to state 101
-    static_member                           go to state 102
-    variable_class_name                     go to state 103
-    base_variable_with_function_calls       go to state 104
-    base_variable                           go to state 105
-    reference_variable                      go to state 106
-    compound_variable                       go to state 107
-    simple_indirect_reference               go to state 108
-    internal_functions_in_yacc              go to state 109
-    class_constant                          go to state 110
+    T_ANNOTATION                shift, and go to state 74
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 178 (function_call_parameter_list)
+
+    namespace_name                          go to state 81
+    annotations                             go to state 494
+    annotation                              go to state 84
+    function_call_parameter_list            go to state 789
+    non_empty_function_call_parameter_list  go to state 496
+    expr_without_variable                   go to state 497
+    function                                go to state 117
+    function_call                           go to state 96
+    class_name                              go to state 97
+    common_scalar                           go to state 98
+    scalar                                  go to state 99
+    expr                                    go to state 175
+    r_variable                              go to state 101
+    rw_variable                             go to state 102
+    variable                                go to state 498
+    variable_without_objects                go to state 104
+    static_member                           go to state 105
+    variable_class_name                     go to state 106
+    base_variable_with_function_calls       go to state 107
+    base_variable                           go to state 108
+    reference_variable                      go to state 109
+    compound_variable                       go to state 110
+    simple_indirect_reference               go to state 111
+    internal_functions_in_yacc              go to state 112
+    class_constant                          go to state 113
 
 
-state 719
+state 745
 
-  386 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @61 object_property @62 method_or_not variable_properties .
-  388 variable_properties: variable_properties . variable_property
+  405 variable: base_variable_with_function_calls T_OBJECT_OPERATOR @63 object_property @64 method_or_not variable_properties .
+  407 variable_properties: variable_properties . variable_property
 
-    T_OBJECT_OPERATOR  shift, and go to state 760
+    T_OBJECT_OPERATOR  shift, and go to state 790
 
-    $default  reduce using rule 386 (variable)
+    $default  reduce using rule 405 (variable)
 
-    variable_property  go to state 761
+    variable_property  go to state 791
 
 
-state 720
+state 746
 
-  415 object_dim_list: object_dim_list '[' dim_offset ']' .
+  434 object_dim_list: object_dim_list '[' dim_offset ']' .
 
-    $default  reduce using rule 415 (object_dim_list)
+    $default  reduce using rule 434 (object_dim_list)
 
 
-state 721
+state 747
 
-  416 object_dim_list: object_dim_list '{' expr '}' .
+  435 object_dim_list: object_dim_list '{' expr '}' .
 
-    $default  reduce using rule 416 (object_dim_list)
+    $default  reduce using rule 435 (object_dim_list)
 
 
-state 722
+state 748
 
-  333 dynamic_class_name_variable_property: T_OBJECT_OPERATOR . object_property
+  352 dynamic_class_name_variable_property: T_OBJECT_OPERATOR . object_property
 
-    T_STRING    shift, and go to state 511
+    T_STRING    shift, and go to state 523
     T_VARIABLE  shift, and go to state 33
-    '{'         shift, and go to state 512
-    '$'         shift, and go to state 77
+    '{'         shift, and go to state 524
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 513
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    object_property            go to state 762
-    object_dim_list            go to state 515
-    variable_name              go to state 516
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 525
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    object_property            go to state 792
+    object_dim_list            go to state 527
+    variable_name              go to state 528
+    simple_indirect_reference  go to state 369
 
 
-state 723
+state 749
 
-  331 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property .
+  350 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property .
 
-    $default  reduce using rule 331 (dynamic_class_name_variable_properties)
+    $default  reduce using rule 350 (dynamic_class_name_variable_properties)
 
 
-state 724
+state 750
 
-   41 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 . new_elseif_list new_else_single T_ENDIF ';'
+   50 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 . new_elseif_list new_else_single T_ENDIF ';'
 
-    $default  reduce using rule 144 (new_elseif_list)
+    $default  reduce using rule 153 (new_elseif_list)
 
-    new_elseif_list  go to state 763
+    new_elseif_list  go to state 793
 
 
-state 725
+state 751
 
-   38 unticked_statement: T_IF '(' expr ')' @5 statement @6 elseif_list . else_single
-  143 elseif_list: elseif_list . T_ELSEIF '(' expr ')' @34 statement
+   47 unticked_statement: T_IF '(' expr ')' @5 statement @6 elseif_list . else_single
+  152 elseif_list: elseif_list . T_ELSEIF '(' expr ')' @34 statement
 
-    T_ELSEIF  shift, and go to state 764
-    T_ELSE    shift, and go to state 765
+    T_ELSEIF  shift, and go to state 794
+    T_ELSE    shift, and go to state 795
 
-    T_ELSEIF  [reduce using rule 147 (else_single)]
-    T_ELSE    [reduce using rule 147 (else_single)]
-    $default  reduce using rule 147 (else_single)
+    T_ELSEIF  [reduce using rule 156 (else_single)]
+    T_ELSE    [reduce using rule 156 (else_single)]
+    $default  reduce using rule 156 (else_single)
 
-    else_single  go to state 766
+    else_single  go to state 796
 
 
-state 726
+state 752
 
-   47 unticked_statement: T_DO @11 statement T_WHILE '(' @12 expr ')' . ';'
+   56 unticked_statement: T_DO @11 statement T_WHILE '(' @12 expr ')' . ';'
 
-    ';'  shift, and go to state 767
+    ';'  shift, and go to state 797
 
 
-state 727
+state 753
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  140 while_statement: ':' inner_statement_list . T_ENDWHILE ';'
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  149 while_statement: ':' inner_statement_list . T_ENDWHILE ';'
 
-    T_ENDWHILE  shift, and go to state 768
+    T_ENDWHILE  shift, and go to state 798
 
-    $default  reduce using rule 26 (@4)
+    $default  reduce using rule 35 (@4)
 
-    @4  go to state 347
+    @4  go to state 354
 
 
-state 728
+state 754
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 . for_expr ')' @15 for_statement
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 . for_expr ')' @15 for_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -19746,12 +20136,12 @@ state 728
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -19762,102 +20152,102 @@ state 728
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    $default  reduce using rule 210 (for_expr)
-
-    namespace_name                     go to state 80
-    for_expr                           go to state 769
-    non_empty_for_expr                 go to state 292
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 293
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    $default  reduce using rule 229 (for_expr)
+
+    namespace_name                     go to state 81
+    for_expr                           go to state 799
+    non_empty_for_expr                 go to state 298
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 299
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 729
+state 755
 
-  117 foreach_optional_arg: T_DOUBLE_ARROW foreach_variable .
+  126 foreach_optional_arg: T_DOUBLE_ARROW foreach_variable .
 
-    $default  reduce using rule 117 (foreach_optional_arg)
+    $default  reduce using rule 126 (foreach_optional_arg)
 
 
-state 730
+state 756
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' . @20 foreach_statement
+   81 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' . @20 foreach_statement
 
-    $default  reduce using rule 71 (@20)
+    $default  reduce using rule 80 (@20)
 
-    @20  go to state 770
+    @20  go to state 800
 
 
-state 731
+state 757
 
-   69 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' . @18 foreach_statement
+   78 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' . @18 foreach_statement
 
-    $default  reduce using rule 68 (@18)
+    $default  reduce using rule 77 (@18)
 
-    @18  go to state 771
+    @18  go to state 801
 
 
-state 732
+state 758
 
-  127 declare_list: declare_list ',' T_STRING '=' static_scalar .
+  136 declare_list: declare_list ',' T_STRING '=' static_scalar .
 
-    $default  reduce using rule 127 (declare_list)
+    $default  reduce using rule 136 (declare_list)
 
 
-state 733
+state 759
 
-  125 declare_statement: ':' inner_statement_list T_ENDDECLARE . ';'
+  134 declare_statement: ':' inner_statement_list T_ENDDECLARE . ';'
 
-    ';'  shift, and go to state 772
+    ';'  shift, and go to state 802
 
 
-state 734
+state 760
 
-  131 switch_case_list: ':' ';' case_list . T_ENDSWITCH ';'
-  134 case_list: case_list . T_CASE expr case_separator @32 inner_statement_list
-  136          | case_list . T_DEFAULT case_separator @33 inner_statement_list
+  140 switch_case_list: ':' ';' case_list . T_ENDSWITCH ';'
+  143 case_list: case_list . T_CASE expr case_separator @32 inner_statement_list
+  145          | case_list . T_DEFAULT case_separator @33 inner_statement_list
 
-    T_ENDSWITCH  shift, and go to state 773
-    T_CASE       shift, and go to state 736
-    T_DEFAULT    shift, and go to state 737
+    T_ENDSWITCH  shift, and go to state 803
+    T_CASE       shift, and go to state 762
+    T_DEFAULT    shift, and go to state 763
 
 
-state 735
+state 761
 
-  130 switch_case_list: ':' case_list T_ENDSWITCH . ';'
+  139 switch_case_list: ':' case_list T_ENDSWITCH . ';'
 
-    ';'  shift, and go to state 774
+    ';'  shift, and go to state 804
 
 
-state 736
+state 762
 
-  134 case_list: case_list T_CASE . expr case_separator @32 inner_statement_list
+  143 case_list: case_list T_CASE . expr case_separator @32 inner_statement_list
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -19884,12 +20274,12 @@ state 736
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -19900,309 +20290,343 @@ state 736
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 775
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 805
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 737
+state 763
 
-  136 case_list: case_list T_DEFAULT . case_separator @33 inner_statement_list
+  145 case_list: case_list T_DEFAULT . case_separator @33 inner_statement_list
 
-    ':'  shift, and go to state 776
-    ';'  shift, and go to state 777
+    ':'  shift, and go to state 806
+    ';'  shift, and go to state 807
 
-    case_separator  go to state 778
+    case_separator  go to state 808
 
 
-state 738
+state 764
 
-  129 switch_case_list: '{' ';' case_list . '}'
-  134 case_list: case_list . T_CASE expr case_separator @32 inner_statement_list
-  136          | case_list . T_DEFAULT case_separator @33 inner_statement_list
+  138 switch_case_list: '{' ';' case_list . '}'
+  143 case_list: case_list . T_CASE expr case_separator @32 inner_statement_list
+  145          | case_list . T_DEFAULT case_separator @33 inner_statement_list
 
-    T_CASE     shift, and go to state 736
-    T_DEFAULT  shift, and go to state 737
-    '}'        shift, and go to state 779
+    T_CASE     shift, and go to state 762
+    T_DEFAULT  shift, and go to state 763
+    '}'        shift, and go to state 809
 
 
-state 739
+state 765
 
-  128 switch_case_list: '{' case_list '}' .
+  137 switch_case_list: '{' case_list '}' .
 
-    $default  reduce using rule 128 (switch_case_list)
+    $default  reduce using rule 137 (switch_case_list)
 
 
-state 740
+state 766
 
-  377 non_empty_static_array_pair_list: static_scalar T_DOUBLE_ARROW static_scalar .
+  396 non_empty_static_array_pair_list: static_scalar T_DOUBLE_ARROW static_scalar .
 
-    $default  reduce using rule 377 (non_empty_static_array_pair_list)
+    $default  reduce using rule 396 (non_empty_static_array_pair_list)
 
 
-state 741
+state 767
 
-  375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar . T_DOUBLE_ARROW static_scalar
-  376                                 | non_empty_static_array_pair_list ',' static_scalar .
+  394 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar . T_DOUBLE_ARROW static_scalar
+  395                                 | non_empty_static_array_pair_list ',' static_scalar .
 
-    T_DOUBLE_ARROW  shift, and go to state 780
+    T_DOUBLE_ARROW  shift, and go to state 810
 
-    $default  reduce using rule 376 (non_empty_static_array_pair_list)
+    $default  reduce using rule 395 (non_empty_static_array_pair_list)
 
 
-state 742
+state 768
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 . fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 . fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    T_STRING        shift, and go to state 111
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    T_STRING        shift, and go to state 114
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
 
-    namespace_name              go to state 490
-    fully_qualified_class_name  go to state 781
+    namespace_name              go to state 502
+    fully_qualified_class_name  go to state 811
 
 
-state 743
+state 769
 
-  426 assignment_list_element: T_LIST '(' @66 assignment_list ')' .
+  445 assignment_list_element: T_LIST '(' @68 assignment_list ')' .
 
-    $default  reduce using rule 426 (assignment_list_element)
+    $default  reduce using rule 445 (assignment_list_element)
 
 
-state 744
+state 770
 
-  434 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_variable .
+  453 non_empty_array_pair_list: non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_variable .
 
-    $default  reduce using rule 434 (non_empty_array_pair_list)
+    $default  reduce using rule 453 (non_empty_array_pair_list)
 
 
-state 745
+state 771
 
-  101 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list '{' class_statement_list '}' .
+  110 unticked_class_declaration_statement: class_entry_type T_STRING extends_from @30 implements_list '{' class_statement_list '}' .
 
-    $default  reduce using rule 101 (unticked_class_declaration_statement)
+    $default  reduce using rule 110 (unticked_class_declaration_statement)
 
 
-state 746
+state 772
 
-  207 class_constant_declaration: T_CONST T_STRING . '=' static_scalar
+  226 class_constant_declaration: T_CONST T_STRING . '=' static_scalar
 
-    '='  shift, and go to state 782
+    '='  shift, and go to state 812
 
 
-state 747
+state 773
 
-  184 class_statement: variable_modifiers @36 . class_variable_declaration ';'
+  201 class_statement: annotations variable_modifiers . @37 class_variable_declaration ';'
 
-    T_VARIABLE  shift, and go to state 783
+    $default  reduce using rule 200 (@37)
 
-    class_variable_declaration  go to state 784
+    @37  go to state 813
 
 
-state 748
+state 774
 
-  187 class_statement: method_modifiers function . is_reference T_STRING @37 '(' parameter_list ')' method_body
+  206 class_statement: annotations method_modifiers . function is_reference T_STRING @39 '(' parameter_list ')' method_body
 
-    '&'  shift, and go to state 219
+    T_FUNCTION  shift, and go to state 46
 
-    $default  reduce using rule 96 (is_reference)
+    function  go to state 814
 
-    is_reference  go to state 785
 
+state 775
 
-state 749
+  199 class_statement: variable_modifiers @36 . class_variable_declaration ';'
 
-  195 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .
+    T_VARIABLE  shift, and go to state 815
 
-    $default  reduce using rule 195 (non_empty_member_modifiers)
+    class_variable_declaration  go to state 816
 
 
-state 750
+state 776
 
-  206 class_constant_declaration: class_constant_declaration ',' . T_STRING '=' static_scalar
+  204 class_statement: method_modifiers function . is_reference T_STRING @38 '(' parameter_list ')' method_body
 
-    T_STRING  shift, and go to state 786
+    '&'  shift, and go to state 225
 
+    $default  reduce using rule 105 (is_reference)
 
-state 751
+    is_reference  go to state 817
 
-  185 class_statement: class_constant_declaration ';' .
 
-    $default  reduce using rule 185 (class_statement)
+state 777
 
+  214 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .
 
-state 752
+    $default  reduce using rule 214 (non_empty_member_modifiers)
 
-   99 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' '{' . inner_statement_list '}'
 
-    $default  reduce using rule 28 (inner_statement_list)
+state 778
 
-    inner_statement_list  go to state 787
+  225 class_constant_declaration: class_constant_declaration ',' . T_STRING '=' static_scalar
 
+    T_STRING  shift, and go to state 818
 
-state 753
 
-  297 lexical_vars: T_USE '(' . lexical_var_list ')'
+state 779
 
-    '&'         shift, and go to state 788
-    T_VARIABLE  shift, and go to state 789
+  202 class_statement: class_constant_declaration ';' .
 
-    lexical_var_list  go to state 790
+    $default  reduce using rule 202 (class_statement)
 
 
-state 754
+state 780
 
-  294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars '{' . inner_statement_list '}'
+  108 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' '{' . inner_statement_list '}'
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 791
+    inner_statement_list  go to state 819
 
 
-state 755
+state 781
 
-  158 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' . T_VARIABLE
-  159                         | non_empty_parameter_list ',' optional_class_type '&' . T_VARIABLE '=' static_scalar
+  165 non_empty_parameter_list: annotations optional_class_type '&' T_VARIABLE .
 
-    T_VARIABLE  shift, and go to state 792
+    $default  reduce using rule 165 (non_empty_parameter_list)
 
 
-state 756
+state 782
 
-  157 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE .
-  160                         | non_empty_parameter_list ',' optional_class_type T_VARIABLE . '=' static_scalar
+  316 lexical_vars: T_USE '(' . lexical_var_list ')'
 
-    '='  shift, and go to state 793
+    '&'         shift, and go to state 820
+    T_VARIABLE  shift, and go to state 821
 
-    $default  reduce using rule 157 (non_empty_parameter_list)
+    lexical_var_list  go to state 822
 
 
-state 757
+state 783
+
+  313 expr_without_variable: function is_reference '(' @52 parameter_list ')' lexical_vars '{' . inner_statement_list '}'
+
+    $default  reduce using rule 37 (inner_statement_list)
+
+    inner_statement_list  go to state 823
+
+
+state 784
+
+  170 non_empty_parameter_list: non_empty_parameter_list ',' annotations optional_class_type . T_VARIABLE
+  171                         | non_empty_parameter_list ',' annotations optional_class_type . '&' T_VARIABLE
+
+    '&'         shift, and go to state 824
+    T_VARIABLE  shift, and go to state 825
+
+
+state 785
+
+  169 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' . T_VARIABLE
+  172                         | non_empty_parameter_list ',' optional_class_type '&' . T_VARIABLE '=' static_scalar
+
+    T_VARIABLE  shift, and go to state 826
+
+
+state 786
+
+  168 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE .
+  173                         | non_empty_parameter_list ',' optional_class_type T_VARIABLE . '=' static_scalar
+
+    '='  shift, and go to state 827
 
-  155 non_empty_parameter_list: optional_class_type '&' T_VARIABLE '=' . static_scalar
+    $default  reduce using rule 168 (non_empty_parameter_list)
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+
+state 787
+
+  166 non_empty_parameter_list: optional_class_type '&' T_VARIABLE '=' . static_scalar
+
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 794
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 828
+    static_class_constant  go to state 449
 
 
-state 758
+state 788
 
-  156 non_empty_parameter_list: optional_class_type T_VARIABLE '=' static_scalar .
+  167 non_empty_parameter_list: optional_class_type T_VARIABLE '=' static_scalar .
 
-    $default  reduce using rule 156 (non_empty_parameter_list)
+    $default  reduce using rule 167 (non_empty_parameter_list)
 
 
-state 759
+state 789
 
-  393 method_or_not: '(' @64 function_call_parameter_list . ')'
+  412 method_or_not: '(' @66 function_call_parameter_list . ')'
 
-    ')'  shift, and go to state 795
+    ')'  shift, and go to state 829
 
 
-state 760
+state 790
 
-  391 variable_property: T_OBJECT_OPERATOR . object_property @63 method_or_not
+  410 variable_property: T_OBJECT_OPERATOR . object_property @65 method_or_not
 
-    T_STRING    shift, and go to state 511
+    T_STRING    shift, and go to state 523
     T_VARIABLE  shift, and go to state 33
-    '{'         shift, and go to state 512
-    '$'         shift, and go to state 77
+    '{'         shift, and go to state 524
+    '$'         shift, and go to state 78
 
-    variable_without_objects   go to state 513
-    reference_variable         go to state 361
-    compound_variable          go to state 107
-    object_property            go to state 796
-    object_dim_list            go to state 515
-    variable_name              go to state 516
-    simple_indirect_reference  go to state 362
+    variable_without_objects   go to state 525
+    reference_variable         go to state 368
+    compound_variable          go to state 110
+    object_property            go to state 830
+    object_dim_list            go to state 527
+    variable_name              go to state 528
+    simple_indirect_reference  go to state 369
 
 
-state 761
+state 791
 
-  388 variable_properties: variable_properties variable_property .
+  407 variable_properties: variable_properties variable_property .
 
-    $default  reduce using rule 388 (variable_properties)
+    $default  reduce using rule 407 (variable_properties)
 
 
-state 762
+state 792
 
-  333 dynamic_class_name_variable_property: T_OBJECT_OPERATOR object_property .
+  352 dynamic_class_name_variable_property: T_OBJECT_OPERATOR object_property .
 
-    $default  reduce using rule 333 (dynamic_class_name_variable_property)
+    $default  reduce using rule 352 (dynamic_class_name_variable_property)
 
 
-state 763
+state 793
 
-   41 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list . new_else_single T_ENDIF ';'
-  146 new_elseif_list: new_elseif_list . T_ELSEIF '(' expr ')' ':' @35 inner_statement_list
+   50 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list . new_else_single T_ENDIF ';'
+  155 new_elseif_list: new_elseif_list . T_ELSEIF '(' expr ')' ':' @35 inner_statement_list
 
-    T_ELSEIF  shift, and go to state 797
-    T_ELSE    shift, and go to state 798
+    T_ELSEIF  shift, and go to state 831
+    T_ELSE    shift, and go to state 832
 
-    $default  reduce using rule 149 (new_else_single)
+    $default  reduce using rule 158 (new_else_single)
 
-    new_else_single  go to state 799
+    new_else_single  go to state 833
 
 
-state 764
+state 794
 
-  143 elseif_list: elseif_list T_ELSEIF . '(' expr ')' @34 statement
+  152 elseif_list: elseif_list T_ELSEIF . '(' expr ')' @34 statement
 
-    '('  shift, and go to state 800
+    '('  shift, and go to state 834
 
 
-state 765
+state 795
 
-  148 else_single: T_ELSE . statement
+  157 else_single: T_ELSE . statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -20262,73 +20686,73 @@ state 765
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 801
-    unticked_statement                 go to state 84
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    statement                          go to state 835
+    unticked_statement                 go to state 87
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 766
+state 796
 
-   38 unticked_statement: T_IF '(' expr ')' @5 statement @6 elseif_list else_single .
+   47 unticked_statement: T_IF '(' expr ')' @5 statement @6 elseif_list else_single .
 
-    $default  reduce using rule 38 (unticked_statement)
+    $default  reduce using rule 47 (unticked_statement)
 
 
-state 767
+state 797
 
-   47 unticked_statement: T_DO @11 statement T_WHILE '(' @12 expr ')' ';' .
+   56 unticked_statement: T_DO @11 statement T_WHILE '(' @12 expr ')' ';' .
 
-    $default  reduce using rule 47 (unticked_statement)
+    $default  reduce using rule 56 (unticked_statement)
 
 
-state 768
+state 798
 
-  140 while_statement: ':' inner_statement_list T_ENDWHILE . ';'
+  149 while_statement: ':' inner_statement_list T_ENDWHILE . ';'
 
-    ';'  shift, and go to state 802
+    ';'  shift, and go to state 836
 
 
-state 769
+state 799
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr . ')' @15 for_statement
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr . ')' @15 for_statement
 
-    ')'  shift, and go to state 803
+    ')'  shift, and go to state 837
 
 
-state 770
+state 800
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 . foreach_statement
+   81 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 . foreach_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -20336,7 +20760,7 @@ state 770
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    ':'                         shift, and go to state 804
+    ':'                         shift, and go to state 838
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -20389,46 +20813,46 @@ state 770
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 805
-    unticked_statement                 go to state 84
-    foreach_statement                  go to state 806
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    statement                          go to state 839
+    unticked_statement                 go to state 87
+    foreach_statement                  go to state 840
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 771
+state 801
 
-   69 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 . foreach_statement
+   78 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 . foreach_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -20436,7 +20860,7 @@ state 771
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    ':'                         shift, and go to state 804
+    ':'                         shift, and go to state 838
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -20489,395 +20913,429 @@ state 771
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 805
-    unticked_statement                 go to state 84
-    foreach_statement                  go to state 807
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    statement                          go to state 839
+    unticked_statement                 go to state 87
+    foreach_statement                  go to state 841
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 772
+state 802
 
-  125 declare_statement: ':' inner_statement_list T_ENDDECLARE ';' .
+  134 declare_statement: ':' inner_statement_list T_ENDDECLARE ';' .
 
-    $default  reduce using rule 125 (declare_statement)
+    $default  reduce using rule 134 (declare_statement)
 
 
-state 773
+state 803
 
-  131 switch_case_list: ':' ';' case_list T_ENDSWITCH . ';'
+  140 switch_case_list: ':' ';' case_list T_ENDSWITCH . ';'
 
-    ';'  shift, and go to state 808
+    ';'  shift, and go to state 842
 
 
-state 774
+state 804
 
-  130 switch_case_list: ':' case_list T_ENDSWITCH ';' .
+  139 switch_case_list: ':' case_list T_ENDSWITCH ';' .
 
-    $default  reduce using rule 130 (switch_case_list)
+    $default  reduce using rule 139 (switch_case_list)
 
 
-state 775
+state 805
 
-  134 case_list: case_list T_CASE expr . case_separator @32 inner_statement_list
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    ':'                    shift, and go to state 776
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ';'                    shift, and go to state 777
-
-    case_separator  go to state 809
+  143 case_list: case_list T_CASE expr . case_separator @32 inner_statement_list
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    ':'                    shift, and go to state 806
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ';'                    shift, and go to state 807
+
+    case_separator  go to state 843
 
 
-state 776
+state 806
 
-  137 case_separator: ':' .
+  146 case_separator: ':' .
 
-    $default  reduce using rule 137 (case_separator)
+    $default  reduce using rule 146 (case_separator)
 
 
-state 777
+state 807
 
-  138 case_separator: ';' .
+  147 case_separator: ';' .
 
-    $default  reduce using rule 138 (case_separator)
+    $default  reduce using rule 147 (case_separator)
 
 
-state 778
+state 808
 
-  136 case_list: case_list T_DEFAULT case_separator . @33 inner_statement_list
+  145 case_list: case_list T_DEFAULT case_separator . @33 inner_statement_list
 
-    $default  reduce using rule 135 (@33)
+    $default  reduce using rule 144 (@33)
 
-    @33  go to state 810
+    @33  go to state 844
 
 
-state 779
+state 809
 
-  129 switch_case_list: '{' ';' case_list '}' .
+  138 switch_case_list: '{' ';' case_list '}' .
 
-    $default  reduce using rule 129 (switch_case_list)
+    $default  reduce using rule 138 (switch_case_list)
 
 
-state 780
+state 810
 
-  375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW . static_scalar
+  394 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 811
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 845
+    static_class_constant  go to state 449
 
 
-state 781
+state 811
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name . @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name . @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    $default  reduce using rule 78 (@24)
+    $default  reduce using rule 87 (@24)
 
-    @24  go to state 812
+    @24  go to state 846
 
 
-state 782
+state 812
 
-  207 class_constant_declaration: T_CONST T_STRING '=' . static_scalar
+  226 class_constant_declaration: T_CONST T_STRING '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
+
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 847
+    static_class_constant  go to state 449
+
+
+state 813
+
+  201 class_statement: annotations variable_modifiers @37 . class_variable_declaration ';'
+
+    T_VARIABLE  shift, and go to state 815
+
+    class_variable_declaration  go to state 848
+
+
+state 814
+
+  206 class_statement: annotations method_modifiers function . is_reference T_STRING @39 '(' parameter_list ')' method_body
+
+    '&'  shift, and go to state 225
+
+    $default  reduce using rule 105 (is_reference)
+
+    is_reference  go to state 849
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 813
-    static_class_constant  go to state 442
 
+state 815
 
-state 783
+  223 class_variable_declaration: T_VARIABLE .
+  224                           | T_VARIABLE . '=' static_scalar
 
-  204 class_variable_declaration: T_VARIABLE .
-  205                           | T_VARIABLE . '=' static_scalar
+    '='  shift, and go to state 850
 
-    '='  shift, and go to state 814
+    $default  reduce using rule 223 (class_variable_declaration)
 
-    $default  reduce using rule 204 (class_variable_declaration)
 
+state 816
 
-state 784
+  199 class_statement: variable_modifiers @36 class_variable_declaration . ';'
+  221 class_variable_declaration: class_variable_declaration . ',' T_VARIABLE
+  222                           | class_variable_declaration . ',' T_VARIABLE '=' static_scalar
 
-  184 class_statement: variable_modifiers @36 class_variable_declaration . ';'
-  202 class_variable_declaration: class_variable_declaration . ',' T_VARIABLE
-  203                           | class_variable_declaration . ',' T_VARIABLE '=' static_scalar
+    ','  shift, and go to state 851
+    ';'  shift, and go to state 852
 
-    ','  shift, and go to state 815
-    ';'  shift, and go to state 816
 
+state 817
 
-state 785
+  204 class_statement: method_modifiers function is_reference . T_STRING @38 '(' parameter_list ')' method_body
 
-  187 class_statement: method_modifiers function is_reference . T_STRING @37 '(' parameter_list ')' method_body
+    T_STRING  shift, and go to state 853
 
-    T_STRING  shift, and go to state 817
 
+state 818
 
-state 786
+  225 class_constant_declaration: class_constant_declaration ',' T_STRING . '=' static_scalar
 
-  206 class_constant_declaration: class_constant_declaration ',' T_STRING . '=' static_scalar
+    '='  shift, and go to state 854
 
-    '='  shift, and go to state 818
 
+state 819
 
-state 787
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  108 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list . '}'
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-   99 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list . '}'
+    '}'  shift, and go to state 855
 
-    '}'  shift, and go to state 819
+    $default  reduce using rule 35 (@4)
 
-    $default  reduce using rule 26 (@4)
+    @4  go to state 354
 
-    @4  go to state 347
 
+state 820
 
-state 788
+  320 lexical_var_list: '&' . T_VARIABLE
 
-  301 lexical_var_list: '&' . T_VARIABLE
+    T_VARIABLE  shift, and go to state 856
 
-    T_VARIABLE  shift, and go to state 820
 
+state 821
 
-state 789
+  319 lexical_var_list: T_VARIABLE .
 
-  300 lexical_var_list: T_VARIABLE .
+    $default  reduce using rule 319 (lexical_var_list)
 
-    $default  reduce using rule 300 (lexical_var_list)
 
+state 822
 
-state 790
+  316 lexical_vars: T_USE '(' lexical_var_list . ')'
+  317 lexical_var_list: lexical_var_list . ',' T_VARIABLE
+  318                 | lexical_var_list . ',' '&' T_VARIABLE
 
-  297 lexical_vars: T_USE '(' lexical_var_list . ')'
-  298 lexical_var_list: lexical_var_list . ',' T_VARIABLE
-  299                 | lexical_var_list . ',' '&' T_VARIABLE
+    ','  shift, and go to state 857
+    ')'  shift, and go to state 858
 
-    ','  shift, and go to state 821
-    ')'  shift, and go to state 822
 
+state 823
 
-state 791
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  313 expr_without_variable: function is_reference '(' @52 parameter_list ')' lexical_vars '{' inner_statement_list . '}'
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list . '}'
+    '}'  shift, and go to state 859
 
-    '}'  shift, and go to state 823
+    $default  reduce using rule 35 (@4)
 
-    $default  reduce using rule 26 (@4)
+    @4  go to state 354
 
-    @4  go to state 347
 
+state 824
 
-state 792
+  171 non_empty_parameter_list: non_empty_parameter_list ',' annotations optional_class_type '&' . T_VARIABLE
 
-  158 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE .
-  159                         | non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE . '=' static_scalar
+    T_VARIABLE  shift, and go to state 860
 
-    '='  shift, and go to state 824
 
-    $default  reduce using rule 158 (non_empty_parameter_list)
+state 825
 
+  170 non_empty_parameter_list: non_empty_parameter_list ',' annotations optional_class_type T_VARIABLE .
 
-state 793
+    $default  reduce using rule 170 (non_empty_parameter_list)
+
+
+state 826
+
+  169 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE .
+  172                         | non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE . '=' static_scalar
+
+    '='  shift, and go to state 861
+
+    $default  reduce using rule 169 (non_empty_parameter_list)
+
+
+state 827
 
-  160 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' . static_scalar
+  173 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 825
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 862
+    static_class_constant  go to state 449
 
 
-state 794
+state 828
 
-  155 non_empty_parameter_list: optional_class_type '&' T_VARIABLE '=' static_scalar .
+  166 non_empty_parameter_list: optional_class_type '&' T_VARIABLE '=' static_scalar .
 
-    $default  reduce using rule 155 (non_empty_parameter_list)
+    $default  reduce using rule 166 (non_empty_parameter_list)
 
 
-state 795
+state 829
 
-  393 method_or_not: '(' @64 function_call_parameter_list ')' .
+  412 method_or_not: '(' @66 function_call_parameter_list ')' .
 
-    $default  reduce using rule 393 (method_or_not)
+    $default  reduce using rule 412 (method_or_not)
 
 
-state 796
+state 830
 
-  391 variable_property: T_OBJECT_OPERATOR object_property . @63 method_or_not
+  410 variable_property: T_OBJECT_OPERATOR object_property . @65 method_or_not
 
-    $default  reduce using rule 390 (@63)
+    $default  reduce using rule 409 (@65)
 
-    @63  go to state 826
+    @65  go to state 863
 
 
-state 797
+state 831
 
-  146 new_elseif_list: new_elseif_list T_ELSEIF . '(' expr ')' ':' @35 inner_statement_list
+  155 new_elseif_list: new_elseif_list T_ELSEIF . '(' expr ')' ':' @35 inner_statement_list
 
-    '('  shift, and go to state 827
+    '('  shift, and go to state 864
 
 
-state 798
+state 832
 
-  150 new_else_single: T_ELSE . ':' inner_statement_list
+  159 new_else_single: T_ELSE . ':' inner_statement_list
 
-    ':'  shift, and go to state 828
+    ':'  shift, and go to state 865
 
 
-state 799
+state 833
 
-   41 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single . T_ENDIF ';'
+   50 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single . T_ENDIF ';'
 
-    T_ENDIF  shift, and go to state 829
+    T_ENDIF  shift, and go to state 866
 
 
-state 800
+state 834
 
-  143 elseif_list: elseif_list T_ELSEIF '(' . expr ')' @34 statement
+  152 elseif_list: elseif_list T_ELSEIF '(' . expr ')' @34 statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -20904,12 +21362,12 @@ state 800
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -20920,309 +21378,333 @@ state 800
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 830
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 867
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 801
+state 835
 
-  148 else_single: T_ELSE statement .
+  157 else_single: T_ELSE statement .
 
-    $default  reduce using rule 148 (else_single)
+    $default  reduce using rule 157 (else_single)
 
 
-state 802
+state 836
 
-  140 while_statement: ':' inner_statement_list T_ENDWHILE ';' .
+  149 while_statement: ':' inner_statement_list T_ENDWHILE ';' .
 
-    $default  reduce using rule 140 (while_statement)
+    $default  reduce using rule 149 (while_statement)
 
 
-state 803
+state 837
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' . @15 for_statement
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' . @15 for_statement
 
-    $default  reduce using rule 50 (@15)
+    $default  reduce using rule 59 (@15)
 
-    @15  go to state 831
+    @15  go to state 868
 
 
-state 804
+state 838
 
-  123 foreach_statement: ':' . inner_statement_list T_ENDFOREACH ';'
+  132 foreach_statement: ':' . inner_statement_list T_ENDFOREACH ';'
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 832
+    inner_statement_list  go to state 869
 
 
-state 805
+state 839
 
-  122 foreach_statement: statement .
+  131 foreach_statement: statement .
 
-    $default  reduce using rule 122 (foreach_statement)
+    $default  reduce using rule 131 (foreach_statement)
 
 
-state 806
+state 840
 
-   72 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement .
+   81 unticked_statement: T_FOREACH '(' expr_without_variable T_AS @19 variable foreach_optional_arg ')' @20 foreach_statement .
 
-    $default  reduce using rule 72 (unticked_statement)
+    $default  reduce using rule 81 (unticked_statement)
 
 
-state 807
+state 841
 
-   69 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement .
+   78 unticked_statement: T_FOREACH '(' variable T_AS @17 foreach_variable foreach_optional_arg ')' @18 foreach_statement .
 
-    $default  reduce using rule 69 (unticked_statement)
+    $default  reduce using rule 78 (unticked_statement)
 
 
-state 808
+state 842
 
-  131 switch_case_list: ':' ';' case_list T_ENDSWITCH ';' .
+  140 switch_case_list: ':' ';' case_list T_ENDSWITCH ';' .
 
-    $default  reduce using rule 131 (switch_case_list)
+    $default  reduce using rule 140 (switch_case_list)
 
 
-state 809
+state 843
 
-  134 case_list: case_list T_CASE expr case_separator . @32 inner_statement_list
+  143 case_list: case_list T_CASE expr case_separator . @32 inner_statement_list
 
-    $default  reduce using rule 133 (@32)
+    $default  reduce using rule 142 (@32)
 
-    @32  go to state 833
+    @32  go to state 870
 
 
-state 810
+state 844
 
-  136 case_list: case_list T_DEFAULT case_separator @33 . inner_statement_list
+  145 case_list: case_list T_DEFAULT case_separator @33 . inner_statement_list
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 834
+    inner_statement_list  go to state 871
 
 
-state 811
+state 845
 
-  375 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar .
+  394 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar .
 
-    $default  reduce using rule 375 (non_empty_static_array_pair_list)
+    $default  reduce using rule 394 (non_empty_static_array_pair_list)
 
 
-state 812
+state 846
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 . T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 . T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    T_VARIABLE  shift, and go to state 835
+    T_VARIABLE  shift, and go to state 872
 
 
-state 813
+state 847
 
-  207 class_constant_declaration: T_CONST T_STRING '=' static_scalar .
+  226 class_constant_declaration: T_CONST T_STRING '=' static_scalar .
 
-    $default  reduce using rule 207 (class_constant_declaration)
+    $default  reduce using rule 226 (class_constant_declaration)
 
 
-state 814
+state 848
 
-  205 class_variable_declaration: T_VARIABLE '=' . static_scalar
+  201 class_statement: annotations variable_modifiers @37 class_variable_declaration . ';'
+  221 class_variable_declaration: class_variable_declaration . ',' T_VARIABLE
+  222                           | class_variable_declaration . ',' T_VARIABLE '=' static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    ','  shift, and go to state 851
+    ';'  shift, and go to state 873
+
+
+state 849
+
+  206 class_statement: annotations method_modifiers function is_reference . T_STRING @39 '(' parameter_list ')' method_body
+
+    T_STRING  shift, and go to state 874
+
+
+state 850
+
+  224 class_variable_declaration: T_VARIABLE '=' . static_scalar
+
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 836
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 875
+    static_class_constant  go to state 449
 
 
-state 815
+state 851
 
-  202 class_variable_declaration: class_variable_declaration ',' . T_VARIABLE
-  203                           | class_variable_declaration ',' . T_VARIABLE '=' static_scalar
+  221 class_variable_declaration: class_variable_declaration ',' . T_VARIABLE
+  222                           | class_variable_declaration ',' . T_VARIABLE '=' static_scalar
 
-    T_VARIABLE  shift, and go to state 837
+    T_VARIABLE  shift, and go to state 876
 
 
-state 816
+state 852
 
-  184 class_statement: variable_modifiers @36 class_variable_declaration ';' .
+  199 class_statement: variable_modifiers @36 class_variable_declaration ';' .
 
-    $default  reduce using rule 184 (class_statement)
+    $default  reduce using rule 199 (class_statement)
 
 
-state 817
+state 853
 
-  187 class_statement: method_modifiers function is_reference T_STRING . @37 '(' parameter_list ')' method_body
+  204 class_statement: method_modifiers function is_reference T_STRING . @38 '(' parameter_list ')' method_body
 
-    $default  reduce using rule 186 (@37)
+    $default  reduce using rule 203 (@38)
 
-    @37  go to state 838
+    @38  go to state 877
 
 
-state 818
+state 854
 
-  206 class_constant_declaration: class_constant_declaration ',' T_STRING '=' . static_scalar
+  225 class_constant_declaration: class_constant_declaration ',' T_STRING '=' . static_scalar
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 839
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 878
+    static_class_constant  go to state 449
 
 
-state 819
+state 855
 
-   99 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}' .
+  108 unticked_function_declaration_statement: function is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}' .
 
-    $default  reduce using rule 99 (unticked_function_declaration_statement)
+    $default  reduce using rule 108 (unticked_function_declaration_statement)
 
 
-state 820
+state 856
 
-  301 lexical_var_list: '&' T_VARIABLE .
+  320 lexical_var_list: '&' T_VARIABLE .
 
-    $default  reduce using rule 301 (lexical_var_list)
+    $default  reduce using rule 320 (lexical_var_list)
 
 
-state 821
+state 857
 
-  298 lexical_var_list: lexical_var_list ',' . T_VARIABLE
-  299                 | lexical_var_list ',' . '&' T_VARIABLE
+  317 lexical_var_list: lexical_var_list ',' . T_VARIABLE
+  318                 | lexical_var_list ',' . '&' T_VARIABLE
 
-    '&'         shift, and go to state 840
-    T_VARIABLE  shift, and go to state 841
+    '&'         shift, and go to state 879
+    T_VARIABLE  shift, and go to state 880
 
 
-state 822
+state 858
 
-  297 lexical_vars: T_USE '(' lexical_var_list ')' .
+  316 lexical_vars: T_USE '(' lexical_var_list ')' .
 
-    $default  reduce using rule 297 (lexical_vars)
+    $default  reduce using rule 316 (lexical_vars)
 
 
-state 823
+state 859
 
-  294 expr_without_variable: function is_reference '(' @50 parameter_list ')' lexical_vars '{' inner_statement_list '}' .
+  313 expr_without_variable: function is_reference '(' @52 parameter_list ')' lexical_vars '{' inner_statement_list '}' .
 
-    $default  reduce using rule 294 (expr_without_variable)
+    $default  reduce using rule 313 (expr_without_variable)
 
 
-state 824
+state 860
+
+  171 non_empty_parameter_list: non_empty_parameter_list ',' annotations optional_class_type '&' T_VARIABLE .
 
-  159 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' . static_scalar
+    $default  reduce using rule 171 (non_empty_parameter_list)
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+
+state 861
+
+  172 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' . static_scalar
+
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 842
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 881
+    static_class_constant  go to state 449
 
 
-state 825
+state 862
 
-  160 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' static_scalar .
+  173 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' static_scalar .
 
-    $default  reduce using rule 160 (non_empty_parameter_list)
+    $default  reduce using rule 173 (non_empty_parameter_list)
 
 
-state 826
+state 863
 
-  391 variable_property: T_OBJECT_OPERATOR object_property @63 . method_or_not
+  410 variable_property: T_OBJECT_OPERATOR object_property @65 . method_or_not
 
-    '('  shift, and go to state 654
+    '('  shift, and go to state 676
 
-    $default  reduce using rule 394 (method_or_not)
+    $default  reduce using rule 413 (method_or_not)
 
-    method_or_not  go to state 843
+    method_or_not  go to state 882
 
 
-state 827
+state 864
 
-  146 new_elseif_list: new_elseif_list T_ELSEIF '(' . expr ')' ':' @35 inner_statement_list
+  155 new_elseif_list: new_elseif_list T_ELSEIF '(' . expr ')' ':' @35 inner_statement_list
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -21249,12 +21731,12 @@ state 827
     T_EXIT                      shift, and go to state 27
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_STRING_VARNAME            shift, and go to state 32
     T_VARIABLE                  shift, and go to state 33
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
     T_FUNCTION                  shift, and go to state 46
-    T_STATIC                    shift, and go to state 112
+    T_STATIC                    shift, and go to state 115
     T_ISSET                     shift, and go to state 57
     T_EMPTY                     shift, and go to state 58
     T_LIST                      shift, and go to state 62
@@ -21265,117 +21747,117 @@ state 827
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 844
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 883
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 828
+state 865
 
-  150 new_else_single: T_ELSE ':' . inner_statement_list
+  159 new_else_single: T_ELSE ':' . inner_statement_list
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 845
+    inner_statement_list  go to state 884
 
 
-state 829
+state 866
 
-   41 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF . ';'
+   50 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF . ';'
 
-    ';'  shift, and go to state 846
+    ';'  shift, and go to state 885
 
 
-state 830
+state 867
 
-  143 elseif_list: elseif_list T_ELSEIF '(' expr . ')' @34 statement
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 847
+  152 elseif_list: elseif_list T_ELSEIF '(' expr . ')' @34 statement
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 886
 
 
-state 831
+state 868
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 . for_statement
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 . for_statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -21383,7 +21865,7 @@ state 831
     T_INCLUDE_ONCE              shift, and go to state 8
     T_INCLUDE                   shift, and go to state 9
     T_PRINT                     shift, and go to state 10
-    ':'                         shift, and go to state 848
+    ':'                         shift, and go to state 887
     '+'                         shift, and go to state 11
     '-'                         shift, and go to state 12
     '!'                         shift, and go to state 13
@@ -21436,350 +21918,376 @@ state 831
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 849
-    unticked_statement                 go to state 84
-    for_statement                      go to state 850
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
+
+    namespace_name                     go to state 81
+    statement                          go to state 888
+    unticked_statement                 go to state 87
+    for_statement                      go to state 889
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
 
-state 832
+state 869
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  123 foreach_statement: ':' inner_statement_list . T_ENDFOREACH ';'
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  132 foreach_statement: ':' inner_statement_list . T_ENDFOREACH ';'
 
-    T_ENDFOREACH  shift, and go to state 851
+    T_ENDFOREACH  shift, and go to state 890
 
-    $default  reduce using rule 26 (@4)
+    $default  reduce using rule 35 (@4)
 
-    @4  go to state 347
+    @4  go to state 354
 
 
-state 833
+state 870
 
-  134 case_list: case_list T_CASE expr case_separator @32 . inner_statement_list
+  143 case_list: case_list T_CASE expr case_separator @32 . inner_statement_list
 
-    $default  reduce using rule 28 (inner_statement_list)
+    $default  reduce using rule 37 (inner_statement_list)
 
-    inner_statement_list  go to state 852
+    inner_statement_list  go to state 891
 
 
-state 834
+state 871
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  136 case_list: case_list T_DEFAULT case_separator @33 inner_statement_list .
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  145 case_list: case_list T_DEFAULT case_separator @33 inner_statement_list .
 
-    T_ENDSWITCH  reduce using rule 136 (case_list)
-    T_CASE       reduce using rule 136 (case_list)
-    T_DEFAULT    reduce using rule 136 (case_list)
-    '}'          reduce using rule 136 (case_list)
-    $default     reduce using rule 26 (@4)
+    T_ENDSWITCH  reduce using rule 145 (case_list)
+    T_CASE       reduce using rule 145 (case_list)
+    T_DEFAULT    reduce using rule 145 (case_list)
+    '}'          reduce using rule 145 (case_list)
+    $default     reduce using rule 35 (@4)
 
-    @4  go to state 347
+    @4  go to state 354
 
 
-state 835
+state 872
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE . ')' @25 '{' inner_statement_list '}' @26 additional_catches
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE . ')' @25 '{' inner_statement_list '}' @26 additional_catches
 
-    ')'  shift, and go to state 853
+    ')'  shift, and go to state 892
 
 
-state 836
+state 873
 
-  205 class_variable_declaration: T_VARIABLE '=' static_scalar .
+  201 class_statement: annotations variable_modifiers @37 class_variable_declaration ';' .
 
-    $default  reduce using rule 205 (class_variable_declaration)
+    $default  reduce using rule 201 (class_statement)
 
 
-state 837
+state 874
 
-  202 class_variable_declaration: class_variable_declaration ',' T_VARIABLE .
-  203                           | class_variable_declaration ',' T_VARIABLE . '=' static_scalar
+  206 class_statement: annotations method_modifiers function is_reference T_STRING . @39 '(' parameter_list ')' method_body
 
-    '='  shift, and go to state 854
+    $default  reduce using rule 205 (@39)
 
-    $default  reduce using rule 202 (class_variable_declaration)
+    @39  go to state 893
 
 
-state 838
+state 875
 
-  187 class_statement: method_modifiers function is_reference T_STRING @37 . '(' parameter_list ')' method_body
+  224 class_variable_declaration: T_VARIABLE '=' static_scalar .
 
-    '('  shift, and go to state 855
+    $default  reduce using rule 224 (class_variable_declaration)
 
 
-state 839
+state 876
 
-  206 class_constant_declaration: class_constant_declaration ',' T_STRING '=' static_scalar .
+  221 class_variable_declaration: class_variable_declaration ',' T_VARIABLE .
+  222                           | class_variable_declaration ',' T_VARIABLE . '=' static_scalar
 
-    $default  reduce using rule 206 (class_constant_declaration)
+    '='  shift, and go to state 894
 
+    $default  reduce using rule 221 (class_variable_declaration)
 
-state 840
 
-  299 lexical_var_list: lexical_var_list ',' '&' . T_VARIABLE
+state 877
 
-    T_VARIABLE  shift, and go to state 856
+  204 class_statement: method_modifiers function is_reference T_STRING @38 . '(' parameter_list ')' method_body
 
+    '('  shift, and go to state 895
 
-state 841
 
-  298 lexical_var_list: lexical_var_list ',' T_VARIABLE .
+state 878
+
+  225 class_constant_declaration: class_constant_declaration ',' T_STRING '=' static_scalar .
 
-    $default  reduce using rule 298 (lexical_var_list)
+    $default  reduce using rule 225 (class_constant_declaration)
 
 
-state 842
+state 879
 
-  159 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' static_scalar .
+  318 lexical_var_list: lexical_var_list ',' '&' . T_VARIABLE
 
-    $default  reduce using rule 159 (non_empty_parameter_list)
+    T_VARIABLE  shift, and go to state 896
 
 
-state 843
+state 880
 
-  391 variable_property: T_OBJECT_OPERATOR object_property @63 method_or_not .
+  317 lexical_var_list: lexical_var_list ',' T_VARIABLE .
 
-    $default  reduce using rule 391 (variable_property)
+    $default  reduce using rule 317 (lexical_var_list)
 
 
-state 844
+state 881
 
-  146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr . ')' ':' @35 inner_statement_list
-  240 expr_without_variable: expr . T_BOOLEAN_OR @42 expr
-  242                      | expr . T_BOOLEAN_AND @43 expr
-  244                      | expr . T_LOGICAL_OR @44 expr
-  246                      | expr . T_LOGICAL_AND @45 expr
-  247                      | expr . T_LOGICAL_XOR expr
-  248                      | expr . '|' expr
-  249                      | expr . '&' expr
-  250                      | expr . '^' expr
-  251                      | expr . '.' expr
-  252                      | expr . '+' expr
-  253                      | expr . '-' expr
-  254                      | expr . '*' expr
-  255                      | expr . '/' expr
-  256                      | expr . '%' expr
-  257                      | expr . T_SL expr
-  258                      | expr . T_SR expr
-  263                      | expr . T_IS_IDENTICAL expr
-  264                      | expr . T_IS_NOT_IDENTICAL expr
-  265                      | expr . T_IS_EQUAL expr
-  266                      | expr . T_IS_NOT_EQUAL expr
-  267                      | expr . '<' expr
-  268                      | expr . T_IS_SMALLER_OR_EQUAL expr
-  269                      | expr . '>' expr
-  270                      | expr . T_IS_GREATER_OR_EQUAL expr
-  271                      | expr . T_INSTANCEOF class_name_reference
-  275                      | expr . '?' @46 expr ':' @47 expr
-  277                      | expr . '?' ':' @48 expr
-
-    T_LOGICAL_OR           shift, and go to state 222
-    T_LOGICAL_XOR          shift, and go to state 223
-    T_LOGICAL_AND          shift, and go to state 224
-    '?'                    shift, and go to state 225
-    T_BOOLEAN_OR           shift, and go to state 226
-    T_BOOLEAN_AND          shift, and go to state 227
-    '|'                    shift, and go to state 228
-    '^'                    shift, and go to state 229
-    '&'                    shift, and go to state 230
-    T_IS_NOT_IDENTICAL     shift, and go to state 231
-    T_IS_IDENTICAL         shift, and go to state 232
-    T_IS_NOT_EQUAL         shift, and go to state 233
-    T_IS_EQUAL             shift, and go to state 234
-    '<'                    shift, and go to state 235
-    '>'                    shift, and go to state 236
-    T_IS_GREATER_OR_EQUAL  shift, and go to state 237
-    T_IS_SMALLER_OR_EQUAL  shift, and go to state 238
-    T_SR                   shift, and go to state 239
-    T_SL                   shift, and go to state 240
-    '+'                    shift, and go to state 241
-    '-'                    shift, and go to state 242
-    '.'                    shift, and go to state 243
-    '*'                    shift, and go to state 244
-    '/'                    shift, and go to state 245
-    '%'                    shift, and go to state 246
-    T_INSTANCEOF           shift, and go to state 247
-    ')'                    shift, and go to state 857
+  172 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE '=' static_scalar .
 
+    $default  reduce using rule 172 (non_empty_parameter_list)
 
-state 845
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  150 new_else_single: T_ELSE ':' inner_statement_list .
+state 882
 
-    T_ENDIF   reduce using rule 150 (new_else_single)
-    $default  reduce using rule 26 (@4)
+  410 variable_property: T_OBJECT_OPERATOR object_property @65 method_or_not .
 
-    @4  go to state 347
+    $default  reduce using rule 410 (variable_property)
 
 
-state 846
+state 883
+
+  155 new_elseif_list: new_elseif_list T_ELSEIF '(' expr . ')' ':' @35 inner_statement_list
+  259 expr_without_variable: expr . T_BOOLEAN_OR @44 expr
+  261                      | expr . T_BOOLEAN_AND @45 expr
+  263                      | expr . T_LOGICAL_OR @46 expr
+  265                      | expr . T_LOGICAL_AND @47 expr
+  266                      | expr . T_LOGICAL_XOR expr
+  267                      | expr . '|' expr
+  268                      | expr . '&' expr
+  269                      | expr . '^' expr
+  270                      | expr . '.' expr
+  271                      | expr . '+' expr
+  272                      | expr . '-' expr
+  273                      | expr . '*' expr
+  274                      | expr . '/' expr
+  275                      | expr . '%' expr
+  276                      | expr . T_SL expr
+  277                      | expr . T_SR expr
+  282                      | expr . T_IS_IDENTICAL expr
+  283                      | expr . T_IS_NOT_IDENTICAL expr
+  284                      | expr . T_IS_EQUAL expr
+  285                      | expr . T_IS_NOT_EQUAL expr
+  286                      | expr . '<' expr
+  287                      | expr . T_IS_SMALLER_OR_EQUAL expr
+  288                      | expr . '>' expr
+  289                      | expr . T_IS_GREATER_OR_EQUAL expr
+  290                      | expr . T_INSTANCEOF class_name_reference
+  294                      | expr . '?' @48 expr ':' @49 expr
+  296                      | expr . '?' ':' @50 expr
+
+    T_LOGICAL_OR           shift, and go to state 228
+    T_LOGICAL_XOR          shift, and go to state 229
+    T_LOGICAL_AND          shift, and go to state 230
+    '?'                    shift, and go to state 231
+    T_BOOLEAN_OR           shift, and go to state 232
+    T_BOOLEAN_AND          shift, and go to state 233
+    '|'                    shift, and go to state 234
+    '^'                    shift, and go to state 235
+    '&'                    shift, and go to state 236
+    T_IS_NOT_IDENTICAL     shift, and go to state 237
+    T_IS_IDENTICAL         shift, and go to state 238
+    T_IS_NOT_EQUAL         shift, and go to state 239
+    T_IS_EQUAL             shift, and go to state 240
+    '<'                    shift, and go to state 241
+    '>'                    shift, and go to state 242
+    T_IS_GREATER_OR_EQUAL  shift, and go to state 243
+    T_IS_SMALLER_OR_EQUAL  shift, and go to state 244
+    T_SR                   shift, and go to state 245
+    T_SL                   shift, and go to state 246
+    '+'                    shift, and go to state 247
+    '-'                    shift, and go to state 248
+    '.'                    shift, and go to state 249
+    '*'                    shift, and go to state 250
+    '/'                    shift, and go to state 251
+    '%'                    shift, and go to state 252
+    T_INSTANCEOF           shift, and go to state 253
+    ')'                    shift, and go to state 897
 
-   41 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';' .
 
-    $default  reduce using rule 41 (unticked_statement)
+state 884
 
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  159 new_else_single: T_ELSE ':' inner_statement_list .
 
-state 847
+    T_ENDIF   reduce using rule 159 (new_else_single)
+    $default  reduce using rule 35 (@4)
 
-  143 elseif_list: elseif_list T_ELSEIF '(' expr ')' . @34 statement
+    @4  go to state 354
 
-    $default  reduce using rule 142 (@34)
 
-    @34  go to state 858
+state 885
 
+   50 unticked_statement: T_IF '(' expr ')' ':' @7 inner_statement_list @8 new_elseif_list new_else_single T_ENDIF ';' .
 
-state 848
+    $default  reduce using rule 50 (unticked_statement)
 
-  121 for_statement: ':' . inner_statement_list T_ENDFOR ';'
 
-    $default  reduce using rule 28 (inner_statement_list)
+state 886
 
-    inner_statement_list  go to state 859
+  152 elseif_list: elseif_list T_ELSEIF '(' expr ')' . @34 statement
 
+    $default  reduce using rule 151 (@34)
 
-state 849
+    @34  go to state 898
 
-  120 for_statement: statement .
 
-    $default  reduce using rule 120 (for_statement)
+state 887
 
+  130 for_statement: ':' . inner_statement_list T_ENDFOR ';'
 
-state 850
+    $default  reduce using rule 37 (inner_statement_list)
 
-   51 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement .
+    inner_statement_list  go to state 899
 
-    $default  reduce using rule 51 (unticked_statement)
 
+state 888
 
-state 851
+  129 for_statement: statement .
 
-  123 foreach_statement: ':' inner_statement_list T_ENDFOREACH . ';'
+    $default  reduce using rule 129 (for_statement)
 
-    ';'  shift, and go to state 860
 
+state 889
 
-state 852
+   60 unticked_statement: T_FOR '(' for_expr ';' @13 for_expr ';' @14 for_expr ')' @15 for_statement .
+
+    $default  reduce using rule 60 (unticked_statement)
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  134 case_list: case_list T_CASE expr case_separator @32 inner_statement_list .
 
-    T_ENDSWITCH  reduce using rule 134 (case_list)
-    T_CASE       reduce using rule 134 (case_list)
-    T_DEFAULT    reduce using rule 134 (case_list)
-    '}'          reduce using rule 134 (case_list)
-    $default     reduce using rule 26 (@4)
+state 890
 
-    @4  go to state 347
+  132 foreach_statement: ':' inner_statement_list T_ENDFOREACH . ';'
 
+    ';'  shift, and go to state 900
 
-state 853
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' . @25 '{' inner_statement_list '}' @26 additional_catches
+state 891
 
-    $default  reduce using rule 79 (@25)
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  143 case_list: case_list T_CASE expr case_separator @32 inner_statement_list .
 
-    @25  go to state 861
+    T_ENDSWITCH  reduce using rule 143 (case_list)
+    T_CASE       reduce using rule 143 (case_list)
+    T_DEFAULT    reduce using rule 143 (case_list)
+    '}'          reduce using rule 143 (case_list)
+    $default     reduce using rule 35 (@4)
 
+    @4  go to state 354
 
-state 854
 
-  203 class_variable_declaration: class_variable_declaration ',' T_VARIABLE '=' . static_scalar
+state 892
+
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' . @25 '{' inner_statement_list '}' @26 additional_catches
+
+    $default  reduce using rule 88 (@25)
+
+    @25  go to state 901
+
+
+state 893
+
+  206 class_statement: annotations method_modifiers function is_reference T_STRING @39 . '(' parameter_list ')' method_body
+
+    '('  shift, and go to state 902
+
 
-    '+'                         shift, and go to state 432
-    '-'                         shift, and go to state 433
+state 894
+
+  222 class_variable_declaration: class_variable_declaration ',' T_VARIABLE '=' . static_scalar
+
+    '+'                         shift, and go to state 439
+    '-'                         shift, and go to state 440
     T_LNUMBER                   shift, and go to state 29
     T_DNUMBER                   shift, and go to state 30
-    T_STRING                    shift, and go to state 111
+    T_STRING                    shift, and go to state 114
     T_CONSTANT_ENCAPSED_STRING  shift, and go to state 35
-    T_STATIC                    shift, and go to state 112
-    T_ARRAY                     shift, and go to state 434
+    T_STATIC                    shift, and go to state 115
+    T_ARRAY                     shift, and go to state 441
     T_CLASS_C                   shift, and go to state 64
     T_METHOD_C                  shift, and go to state 65
     T_FUNC_C                    shift, and go to state 66
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
-    T_START_HEREDOC             shift, and go to state 435
-    T_NAMESPACE                 shift, and go to state 436
+    T_START_HEREDOC             shift, and go to state 442
+    T_NAMESPACE                 shift, and go to state 443
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
-    T_NS_SEPARATOR              shift, and go to state 437
+    T_NS_SEPARATOR              shift, and go to state 444
 
-    namespace_name         go to state 438
-    class_name             go to state 439
-    common_scalar          go to state 440
-    static_scalar          go to state 862
-    static_class_constant  go to state 442
+    namespace_name         go to state 445
+    class_name             go to state 446
+    common_scalar          go to state 447
+    static_scalar          go to state 903
+    static_class_constant  go to state 449
 
 
-state 855
+state 895
 
-  187 class_statement: method_modifiers function is_reference T_STRING @37 '(' . parameter_list ')' method_body
+  204 class_statement: method_modifiers function is_reference T_STRING @38 '(' . parameter_list ')' method_body
 
-    T_STRING        shift, and go to state 111
-    T_ARRAY         shift, and go to state 576
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+    T_STRING        shift, and go to state 114
+    T_ARRAY         shift, and go to state 593
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
+    T_ANNOTATION    shift, and go to state 74
 
-    ')'       reduce using rule 152 (parameter_list)
-    $default  reduce using rule 161 (optional_class_type)
+    ')'       reduce using rule 161 (parameter_list)
+    $default  reduce using rule 174 (optional_class_type)
 
-    namespace_name              go to state 490
-    parameter_list              go to state 863
-    non_empty_parameter_list    go to state 578
-    optional_class_type         go to state 579
-    fully_qualified_class_name  go to state 580
+    namespace_name              go to state 502
+    annotations                 go to state 594
+    annotation                  go to state 84
+    parameter_list              go to state 904
+    non_empty_parameter_list    go to state 596
+    optional_class_type         go to state 597
+    fully_qualified_class_name  go to state 598
 
 
-state 856
+state 896
 
-  299 lexical_var_list: lexical_var_list ',' '&' T_VARIABLE .
+  318 lexical_var_list: lexical_var_list ',' '&' T_VARIABLE .
 
-    $default  reduce using rule 299 (lexical_var_list)
+    $default  reduce using rule 318 (lexical_var_list)
 
 
-state 857
+state 897
 
-  146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' . ':' @35 inner_statement_list
+  155 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' . ':' @35 inner_statement_list
 
-    ':'  shift, and go to state 864
+    ':'  shift, and go to state 905
 
 
-state 858
+state 898
 
-  143 elseif_list: elseif_list T_ELSEIF '(' expr ')' @34 . statement
+  152 elseif_list: elseif_list T_ELSEIF '(' expr ')' @34 . statement
 
     T_REQUIRE_ONCE              shift, and go to state 5
     T_REQUIRE                   shift, and go to state 6
@@ -21839,343 +22347,389 @@ state 858
     T_LINE                      shift, and go to state 67
     T_FILE                      shift, and go to state 68
     T_START_HEREDOC             shift, and go to state 69
-    T_NAMESPACE                 shift, and go to state 113
+    T_NAMESPACE                 shift, and go to state 116
     T_NS_C                      shift, and go to state 71
     T_DIR                       shift, and go to state 72
     T_NS_SEPARATOR              shift, and go to state 73
-    '('                         shift, and go to state 74
-    ';'                         shift, and go to state 75
-    '{'                         shift, and go to state 76
-    '$'                         shift, and go to state 77
-    '`'                         shift, and go to state 78
-    '"'                         shift, and go to state 79
-
-    namespace_name                     go to state 80
-    statement                          go to state 865
-    unticked_statement                 go to state 84
-    expr_without_variable              go to state 91
-    function                           go to state 114
-    function_call                      go to state 93
-    class_name                         go to state 94
-    common_scalar                      go to state 95
-    scalar                             go to state 96
-    expr                               go to state 97
-    r_variable                         go to state 98
-    rw_variable                        go to state 99
-    variable                           go to state 100
-    variable_without_objects           go to state 101
-    static_member                      go to state 102
-    variable_class_name                go to state 103
-    base_variable_with_function_calls  go to state 104
-    base_variable                      go to state 105
-    reference_variable                 go to state 106
-    compound_variable                  go to state 107
-    simple_indirect_reference          go to state 108
-    internal_functions_in_yacc         go to state 109
-    class_constant                     go to state 110
+    '('                         shift, and go to state 75
+    ';'                         shift, and go to state 76
+    '{'                         shift, and go to state 77
+    '$'                         shift, and go to state 78
+    '`'                         shift, and go to state 79
+    '"'                         shift, and go to state 80
 
+    namespace_name                     go to state 81
+    statement                          go to state 906
+    unticked_statement                 go to state 87
+    expr_without_variable              go to state 94
+    function                           go to state 117
+    function_call                      go to state 96
+    class_name                         go to state 97
+    common_scalar                      go to state 98
+    scalar                             go to state 99
+    expr                               go to state 100
+    r_variable                         go to state 101
+    rw_variable                        go to state 102
+    variable                           go to state 103
+    variable_without_objects           go to state 104
+    static_member                      go to state 105
+    variable_class_name                go to state 106
+    base_variable_with_function_calls  go to state 107
+    base_variable                      go to state 108
+    reference_variable                 go to state 109
+    compound_variable                  go to state 110
+    simple_indirect_reference          go to state 111
+    internal_functions_in_yacc         go to state 112
+    class_constant                     go to state 113
 
-state 859
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  121 for_statement: ':' inner_statement_list . T_ENDFOR ';'
+state 899
 
-    T_ENDFOR  shift, and go to state 866
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  130 for_statement: ':' inner_statement_list . T_ENDFOR ';'
 
-    $default  reduce using rule 26 (@4)
+    T_ENDFOR  shift, and go to state 907
 
-    @4  go to state 347
+    $default  reduce using rule 35 (@4)
 
+    @4  go to state 354
 
-state 860
 
-  123 foreach_statement: ':' inner_statement_list T_ENDFOREACH ';' .
+state 900
 
-    $default  reduce using rule 123 (foreach_statement)
+  132 foreach_statement: ':' inner_statement_list T_ENDFOREACH ';' .
 
+    $default  reduce using rule 132 (foreach_statement)
 
-state 861
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 . '{' inner_statement_list '}' @26 additional_catches
+state 901
 
-    '{'  shift, and go to state 867
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 . '{' inner_statement_list '}' @26 additional_catches
 
+    '{'  shift, and go to state 908
 
-state 862
 
-  203 class_variable_declaration: class_variable_declaration ',' T_VARIABLE '=' static_scalar .
+state 902
 
-    $default  reduce using rule 203 (class_variable_declaration)
+  206 class_statement: annotations method_modifiers function is_reference T_STRING @39 '(' . parameter_list ')' method_body
 
+    T_STRING        shift, and go to state 114
+    T_ARRAY         shift, and go to state 593
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
+    T_ANNOTATION    shift, and go to state 74
 
-state 863
+    ')'       reduce using rule 161 (parameter_list)
+    $default  reduce using rule 174 (optional_class_type)
 
-  187 class_statement: method_modifiers function is_reference T_STRING @37 '(' parameter_list . ')' method_body
+    namespace_name              go to state 502
+    annotations                 go to state 594
+    annotation                  go to state 84
+    parameter_list              go to state 909
+    non_empty_parameter_list    go to state 596
+    optional_class_type         go to state 597
+    fully_qualified_class_name  go to state 598
 
-    ')'  shift, and go to state 868
 
+state 903
 
-state 864
+  222 class_variable_declaration: class_variable_declaration ',' T_VARIABLE '=' static_scalar .
 
-  146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' . @35 inner_statement_list
+    $default  reduce using rule 222 (class_variable_declaration)
 
-    $default  reduce using rule 145 (@35)
 
-    @35  go to state 869
+state 904
 
+  204 class_statement: method_modifiers function is_reference T_STRING @38 '(' parameter_list . ')' method_body
 
-state 865
+    ')'  shift, and go to state 910
 
-  143 elseif_list: elseif_list T_ELSEIF '(' expr ')' @34 statement .
 
-    $default  reduce using rule 143 (elseif_list)
+state 905
 
+  155 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' . @35 inner_statement_list
 
-state 866
+    $default  reduce using rule 154 (@35)
 
-  121 for_statement: ':' inner_statement_list T_ENDFOR . ';'
+    @35  go to state 911
 
-    ';'  shift, and go to state 870
 
+state 906
 
-state 867
+  152 elseif_list: elseif_list T_ELSEIF '(' expr ')' @34 statement .
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' . inner_statement_list '}' @26 additional_catches
+    $default  reduce using rule 152 (elseif_list)
 
-    $default  reduce using rule 28 (inner_statement_list)
 
-    inner_statement_list  go to state 871
+state 907
 
+  130 for_statement: ':' inner_statement_list T_ENDFOR . ';'
 
-state 868
+    ';'  shift, and go to state 912
 
-  187 class_statement: method_modifiers function is_reference T_STRING @37 '(' parameter_list ')' . method_body
 
-    ';'  shift, and go to state 872
-    '{'  shift, and go to state 873
+state 908
 
-    method_body  go to state 874
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' . inner_statement_list '}' @26 additional_catches
 
+    $default  reduce using rule 37 (inner_statement_list)
 
-state 869
+    inner_statement_list  go to state 913
 
-  146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' @35 . inner_statement_list
 
-    $default  reduce using rule 28 (inner_statement_list)
+state 909
 
-    inner_statement_list  go to state 875
+  206 class_statement: annotations method_modifiers function is_reference T_STRING @39 '(' parameter_list . ')' method_body
 
+    ')'  shift, and go to state 914
 
-state 870
 
-  121 for_statement: ':' inner_statement_list T_ENDFOR ';' .
+state 910
 
-    $default  reduce using rule 121 (for_statement)
+  204 class_statement: method_modifiers function is_reference T_STRING @38 '(' parameter_list ')' . method_body
 
+    ';'  shift, and go to state 915
+    '{'  shift, and go to state 916
 
-state 871
+    method_body  go to state 917
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list . '}' @26 additional_catches
 
-    '}'  shift, and go to state 876
+state 911
 
-    $default  reduce using rule 26 (@4)
+  155 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' @35 . inner_statement_list
 
-    @4  go to state 347
+    $default  reduce using rule 37 (inner_statement_list)
 
+    inner_statement_list  go to state 918
 
-state 872
 
-  188 method_body: ';' .
+state 912
 
-    $default  reduce using rule 188 (method_body)
+  130 for_statement: ':' inner_statement_list T_ENDFOR ';' .
 
+    $default  reduce using rule 130 (for_statement)
 
-state 873
 
-  189 method_body: '{' . inner_statement_list '}'
+state 913
 
-    $default  reduce using rule 28 (inner_statement_list)
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list . '}' @26 additional_catches
 
-    inner_statement_list  go to state 877
+    '}'  shift, and go to state 919
 
+    $default  reduce using rule 35 (@4)
 
-state 874
+    @4  go to state 354
 
-  187 class_statement: method_modifiers function is_reference T_STRING @37 '(' parameter_list ')' method_body .
 
-    $default  reduce using rule 187 (class_statement)
+state 914
 
+  206 class_statement: annotations method_modifiers function is_reference T_STRING @39 '(' parameter_list ')' . method_body
 
-state 875
+    ';'  shift, and go to state 915
+    '{'  shift, and go to state 916
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  146 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' @35 inner_statement_list .
+    method_body  go to state 920
 
-    T_ELSEIF  reduce using rule 146 (new_elseif_list)
-    T_ELSE    reduce using rule 146 (new_elseif_list)
-    T_ENDIF   reduce using rule 146 (new_elseif_list)
-    $default  reduce using rule 26 (@4)
 
-    @4  go to state 347
+state 915
 
+  207 method_body: ';' .
 
-state 876
+    $default  reduce using rule 207 (method_body)
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' . @26 additional_catches
 
-    $default  reduce using rule 80 (@26)
+state 916
 
-    @26  go to state 878
+  208 method_body: '{' . inner_statement_list '}'
 
+    $default  reduce using rule 37 (inner_statement_list)
 
-state 877
+    inner_statement_list  go to state 921
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-  189 method_body: '{' inner_statement_list . '}'
 
-    '}'  shift, and go to state 879
+state 917
 
-    $default  reduce using rule 26 (@4)
+  204 class_statement: method_modifiers function is_reference T_STRING @38 '(' parameter_list ')' method_body .
 
-    @4  go to state 347
+    $default  reduce using rule 204 (class_statement)
 
 
-state 878
+state 918
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 . additional_catches
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  155 new_elseif_list: new_elseif_list T_ELSEIF '(' expr ')' ':' @35 inner_statement_list .
 
-    T_CATCH  shift, and go to state 880
+    T_ELSEIF  reduce using rule 155 (new_elseif_list)
+    T_ELSE    reduce using rule 155 (new_elseif_list)
+    T_ENDIF   reduce using rule 155 (new_elseif_list)
+    $default  reduce using rule 35 (@4)
 
-    $default  reduce using rule 85 (additional_catches)
+    @4  go to state 354
 
-    additional_catches            go to state 881
-    non_empty_additional_catches  go to state 882
-    additional_catch              go to state 883
 
+state 919
 
-state 879
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' . @26 additional_catches
 
-  189 method_body: '{' inner_statement_list '}' .
+    $default  reduce using rule 89 (@26)
 
-    $default  reduce using rule 189 (method_body)
+    @26  go to state 922
 
 
-state 880
+state 920
 
-   90 additional_catch: T_CATCH . '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list '}'
+  206 class_statement: annotations method_modifiers function is_reference T_STRING @39 '(' parameter_list ')' method_body .
 
-    '('  shift, and go to state 884
+    $default  reduce using rule 206 (class_statement)
 
 
-state 881
+state 921
 
-   81 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches .
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+  208 method_body: '{' inner_statement_list . '}'
 
-    $default  reduce using rule 81 (unticked_statement)
+    '}'  shift, and go to state 923
 
+    $default  reduce using rule 35 (@4)
 
-state 882
+    @4  go to state 354
 
-   84 additional_catches: non_empty_additional_catches .
-   87 non_empty_additional_catches: non_empty_additional_catches . additional_catch
 
-    T_CATCH  shift, and go to state 880
+state 922
 
-    $default  reduce using rule 84 (additional_catches)
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 . additional_catches
 
-    additional_catch  go to state 885
+    T_CATCH  shift, and go to state 924
 
+    $default  reduce using rule 94 (additional_catches)
 
-state 883
+    additional_catches            go to state 925
+    non_empty_additional_catches  go to state 926
+    additional_catch              go to state 927
 
-   86 non_empty_additional_catches: additional_catch .
 
-    $default  reduce using rule 86 (non_empty_additional_catches)
+state 923
 
+  208 method_body: '{' inner_statement_list '}' .
 
-state 884
+    $default  reduce using rule 208 (method_body)
 
-   90 additional_catch: T_CATCH '(' . fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list '}'
 
-    T_STRING        shift, and go to state 111
-    T_NAMESPACE     shift, and go to state 488
-    T_NS_SEPARATOR  shift, and go to state 489
+state 924
 
-    namespace_name              go to state 490
-    fully_qualified_class_name  go to state 886
+   99 additional_catch: T_CATCH . '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list '}'
 
+    '('  shift, and go to state 928
 
-state 885
 
-   87 non_empty_additional_catches: non_empty_additional_catches additional_catch .
+state 925
 
-    $default  reduce using rule 87 (non_empty_additional_catches)
+   90 unticked_statement: T_TRY @22 '{' inner_statement_list '}' T_CATCH '(' @23 fully_qualified_class_name @24 T_VARIABLE ')' @25 '{' inner_statement_list '}' @26 additional_catches .
 
+    $default  reduce using rule 90 (unticked_statement)
 
-state 886
 
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name . @27 T_VARIABLE ')' @28 '{' inner_statement_list '}'
+state 926
 
-    $default  reduce using rule 88 (@27)
+   93 additional_catches: non_empty_additional_catches .
+   96 non_empty_additional_catches: non_empty_additional_catches . additional_catch
 
-    @27  go to state 887
+    T_CATCH  shift, and go to state 924
 
+    $default  reduce using rule 93 (additional_catches)
 
-state 887
+    additional_catch  go to state 929
 
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 . T_VARIABLE ')' @28 '{' inner_statement_list '}'
 
-    T_VARIABLE  shift, and go to state 888
+state 927
 
+   95 non_empty_additional_catches: additional_catch .
 
-state 888
+    $default  reduce using rule 95 (non_empty_additional_catches)
 
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE . ')' @28 '{' inner_statement_list '}'
 
-    ')'  shift, and go to state 889
+state 928
 
+   99 additional_catch: T_CATCH '(' . fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list '}'
 
-state 889
+    T_STRING        shift, and go to state 114
+    T_NAMESPACE     shift, and go to state 500
+    T_NS_SEPARATOR  shift, and go to state 501
 
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' . @28 '{' inner_statement_list '}'
+    namespace_name              go to state 502
+    fully_qualified_class_name  go to state 930
 
-    $default  reduce using rule 89 (@28)
 
-    @28  go to state 890
+state 929
 
+   96 non_empty_additional_catches: non_empty_additional_catches additional_catch .
 
-state 890
+    $default  reduce using rule 96 (non_empty_additional_catches)
 
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 . '{' inner_statement_list '}'
 
-    '{'  shift, and go to state 891
+state 930
 
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name . @27 T_VARIABLE ')' @28 '{' inner_statement_list '}'
 
-state 891
+    $default  reduce using rule 97 (@27)
 
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' . inner_statement_list '}'
+    @27  go to state 931
 
-    $default  reduce using rule 28 (inner_statement_list)
 
-    inner_statement_list  go to state 892
+state 931
 
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name @27 . T_VARIABLE ')' @28 '{' inner_statement_list '}'
 
-state 892
+    T_VARIABLE  shift, and go to state 932
 
-   27 inner_statement_list: inner_statement_list . @4 inner_statement
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list . '}'
 
-    '}'  shift, and go to state 893
+state 932
 
-    $default  reduce using rule 26 (@4)
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE . ')' @28 '{' inner_statement_list '}'
 
-    @4  go to state 347
+    ')'  shift, and go to state 933
 
 
-state 893
+state 933
+
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' . @28 '{' inner_statement_list '}'
+
+    $default  reduce using rule 98 (@28)
+
+    @28  go to state 934
+
+
+state 934
+
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 . '{' inner_statement_list '}'
+
+    '{'  shift, and go to state 935
+
+
+state 935
+
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' . inner_statement_list '}'
+
+    $default  reduce using rule 37 (inner_statement_list)
+
+    inner_statement_list  go to state 936
+
+
+state 936
+
+   36 inner_statement_list: inner_statement_list . @4 inner_statement
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list . '}'
+
+    '}'  shift, and go to state 937
+
+    $default  reduce using rule 35 (@4)
+
+    @4  go to state 354
+
+
+state 937
 
-   90 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list '}' .
+   99 additional_catch: T_CATCH '(' fully_qualified_class_name @27 T_VARIABLE ')' @28 '{' inner_statement_list '}' .
 
-    $default  reduce using rule 90 (additional_catch)
+    $default  reduce using rule 99 (additional_catch)
diff --git a/Zend/zend_language_parser.y b/Zend/zend_language_parser.y
index 2635fdb..3a7c593 100644
--- a/Zend/zend_language_parser.y
+++ b/Zend/zend_language_parser.y
@@ -148,6 +148,7 @@
 %token T_NS_C
 %token T_DIR
 %token T_NS_SEPARATOR
+%token T_ANNOTATION
 
 %% /* Rules */
 
@@ -168,6 +169,7 @@ namespace_name:
 top_statement:
 		statement						{ zend_verify_namespace(TSRMLS_C); }
 	|	function_declaration_statement	{ zend_verify_namespace(TSRMLS_C); zend_do_early_binding(TSRMLS_C); }
+	|	annotations class_declaration_statement		{ zend_verify_namespace(TSRMLS_C); zend_do_early_binding(TSRMLS_C); }
 	|	class_declaration_statement		{ zend_verify_namespace(TSRMLS_C); zend_do_early_binding(TSRMLS_C); }
 	|	T_HALT_COMPILER '(' ')' ';'		{ zend_do_halt_compiler_register(TSRMLS_C); YYACCEPT; }
 	|	T_NAMESPACE namespace_name ';'	{ zend_do_begin_namespace(&$2, 0 TSRMLS_CC); }
@@ -179,6 +181,26 @@ top_statement:
 	|	constant_declaration ';'		{ zend_verify_namespace(TSRMLS_C); }
 ;
 
+annotations:
+	annotations annotation { zend_do_begin_annotation_declaration(&$2 TSRMLS_CC); }
+	| annotation { zend_do_begin_annotation_declaration(&$1 TSRMLS_CC); }
+;
+
+annotation:
+	T_ANNOTATION T_STRING	{ $$ = $2; }
+	| T_ANNOTATION T_STRING '(' annotation_args	')' { $$ = $2; }
+;
+
+annotation_args:
+	annotation_arg { $$ = $1; }
+	| annotation_arg ',' annotation_arg 
+;
+
+annotation_arg:
+	T_CONSTANT_ENCAPSED_STRING { zend_do_add_annotation_arg(&$1, NULL TSRMLS_CC); }
+	| T_STRING '=' T_CONSTANT_ENCAPSED_STRING { zend_do_add_annotation_arg(&$1, &$3 TSRMLS_CC); }
+;
+
 use_declarations:
 		use_declarations ',' use_declaration
 	|	use_declaration
@@ -452,10 +474,14 @@ parameter_list:
 non_empty_parameter_list:
 		optional_class_type T_VARIABLE				{ znode tmp;  fetch_simple_variable(&tmp, &$2, 0 TSRMLS_CC); $$.op_type = IS_CONST; Z_LVAL($$.u.constant)=1; Z_TYPE($$.u.constant)=IS_LONG; INIT_PZVAL(&$$.u.constant); zend_do_receive_arg(ZEND_RECV, &tmp, &$$, NULL, &$1, &$2, 0 TSRMLS_CC); }
 	|	optional_class_type '&' T_VARIABLE			{ znode tmp;  fetch_simple_variable(&tmp, &$3, 0 TSRMLS_CC); $$.op_type = IS_CONST; Z_LVAL($$.u.constant)=1; Z_TYPE($$.u.constant)=IS_LONG; INIT_PZVAL(&$$.u.constant); zend_do_receive_arg(ZEND_RECV, &tmp, &$$, NULL, &$1, &$3, 1 TSRMLS_CC); }
+	|	annotations optional_class_type T_VARIABLE				{ znode tmp;  fetch_simple_variable(&tmp, &$3, 0 TSRMLS_CC); $$.op_type = IS_CONST; Z_LVAL($$.u.constant)=1; Z_TYPE($$.u.constant)=IS_LONG; INIT_PZVAL(&$$.u.constant); zend_do_receive_arg(ZEND_RECV, &tmp, &$$, NULL, &$2, &$3, 0 TSRMLS_CC); }
+	|	annotations optional_class_type '&' T_VARIABLE			{ znode tmp;  fetch_simple_variable(&tmp, &$4, 0 TSRMLS_CC); $$.op_type = IS_CONST; Z_LVAL($$.u.constant)=1; Z_TYPE($$.u.constant)=IS_LONG; INIT_PZVAL(&$$.u.constant); zend_do_receive_arg(ZEND_RECV, &tmp, &$$, NULL, &$2, &$4, 1 TSRMLS_CC); }
 	|	optional_class_type '&' T_VARIABLE '=' static_scalar			{ znode tmp;  fetch_simple_variable(&tmp, &$3, 0 TSRMLS_CC); $$.op_type = IS_CONST; Z_LVAL($$.u.constant)=1; Z_TYPE($$.u.constant)=IS_LONG; INIT_PZVAL(&$$.u.constant); zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &$$, &$5, &$1, &$3, 1 TSRMLS_CC); }
 	|	optional_class_type T_VARIABLE '=' static_scalar				{ znode tmp;  fetch_simple_variable(&tmp, &$2, 0 TSRMLS_CC); $$.op_type = IS_CONST; Z_LVAL($$.u.constant)=1; Z_TYPE($$.u.constant)=IS_LONG; INIT_PZVAL(&$$.u.constant); zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &$$, &$4, &$1, &$2, 0 TSRMLS_CC); }
 	|	non_empty_parameter_list ',' optional_class_type T_VARIABLE 	{ znode tmp;  fetch_simple_variable(&tmp, &$4, 0 TSRMLS_CC); $$=$1; Z_LVAL($$.u.constant)++; zend_do_receive_arg(ZEND_RECV, &tmp, &$$, NULL, &$3, &$4, 0 TSRMLS_CC); }
 	|	non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE	{ znode tmp;  fetch_simple_variable(&tmp, &$5, 0 TSRMLS_CC); $$=$1; Z_LVAL($$.u.constant)++; zend_do_receive_arg(ZEND_RECV, &tmp, &$$, NULL, &$3, &$5, 1 TSRMLS_CC); }
+	|	non_empty_parameter_list ',' annotations optional_class_type T_VARIABLE 	{ znode tmp;  fetch_simple_variable(&tmp, &$5, 0 TSRMLS_CC); $$=$2; Z_LVAL($$.u.constant)++; zend_do_receive_arg(ZEND_RECV, &tmp, &$$, NULL, &$4, &$5, 0 TSRMLS_CC); }
+	|	non_empty_parameter_list ',' annotations optional_class_type '&' T_VARIABLE	{ znode tmp;  fetch_simple_variable(&tmp, &$6, 0 TSRMLS_CC); $$=$2; Z_LVAL($$.u.constant)++; zend_do_receive_arg(ZEND_RECV, &tmp, &$$, NULL, &$4, &$6, 1 TSRMLS_CC); }
 	|	non_empty_parameter_list ',' optional_class_type '&' T_VARIABLE	 '=' static_scalar { znode tmp;  fetch_simple_variable(&tmp, &$5, 0 TSRMLS_CC); $$=$1; Z_LVAL($$.u.constant)++; zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &$$, &$7, &$3, &$5, 1 TSRMLS_CC); }
 	|	non_empty_parameter_list ',' optional_class_type T_VARIABLE '=' static_scalar 	{ znode tmp;  fetch_simple_variable(&tmp, &$4, 0 TSRMLS_CC); $$=$1; Z_LVAL($$.u.constant)++; zend_do_receive_arg(ZEND_RECV_INIT, &tmp, &$$, &$6, &$3, &$4, 0 TSRMLS_CC); }
 ;
@@ -478,6 +504,8 @@ non_empty_function_call_parameter_list:
 		expr_without_variable	{ Z_LVAL($$.u.constant) = 1;  zend_do_pass_param(&$1, ZEND_SEND_VAL, Z_LVAL($$.u.constant) TSRMLS_CC); }
 	|	variable				{ Z_LVAL($$.u.constant) = 1;  zend_do_pass_param(&$1, ZEND_SEND_VAR, Z_LVAL($$.u.constant) TSRMLS_CC); }
 	|	'&' w_variable 				{ Z_LVAL($$.u.constant) = 1;  zend_do_pass_param(&$2, ZEND_SEND_REF, Z_LVAL($$.u.constant) TSRMLS_CC); }
+	|	annotations variable				{ Z_LVAL($$.u.constant) = 1;  zend_do_pass_param(&$2, ZEND_SEND_VAR, Z_LVAL($$.u.constant) TSRMLS_CC); }
+	|	annotations '&' w_variable 				{ Z_LVAL($$.u.constant) = 1;  zend_do_pass_param(&$3, ZEND_SEND_REF, Z_LVAL($$.u.constant) TSRMLS_CC); }
 	|	non_empty_function_call_parameter_list ',' expr_without_variable	{ Z_LVAL($$.u.constant)=Z_LVAL($1.u.constant)+1;  zend_do_pass_param(&$3, ZEND_SEND_VAL, Z_LVAL($$.u.constant) TSRMLS_CC); }
 	|	non_empty_function_call_parameter_list ',' variable					{ Z_LVAL($$.u.constant)=Z_LVAL($1.u.constant)+1;  zend_do_pass_param(&$3, ZEND_SEND_VAR, Z_LVAL($$.u.constant) TSRMLS_CC); }
 	|	non_empty_function_call_parameter_list ',' '&' w_variable			{ Z_LVAL($$.u.constant)=Z_LVAL($1.u.constant)+1;  zend_do_pass_param(&$4, ZEND_SEND_REF, Z_LVAL($$.u.constant) TSRMLS_CC); }
@@ -513,9 +541,12 @@ class_statement_list:
 
 class_statement:
 		variable_modifiers { CG(access_type) = Z_LVAL($1.u.constant); } class_variable_declaration ';'
+	|	annotations variable_modifiers { CG(access_type) = Z_LVAL($2.u.constant); } class_variable_declaration ';'
 	|	class_constant_declaration ';'
 	|	method_modifiers function is_reference T_STRING { zend_do_begin_function_declaration(&$2, &$4, 1, $3.op_type, &$1 TSRMLS_CC); } '('
 			parameter_list ')' method_body { zend_do_abstract_method(&$4, &$1, &$9 TSRMLS_CC); zend_do_end_function_declaration(&$2 TSRMLS_CC); }
+	|	annotations method_modifiers function is_reference T_STRING { zend_do_begin_function_declaration(&$3, &$5, 1, $4.op_type, &$2 TSRMLS_CC); } '('
+			parameter_list ')' method_body { zend_do_abstract_method(&$5, &$2, &$10 TSRMLS_CC); zend_do_end_function_declaration(&$3 TSRMLS_CC); }
 ;
 
 
diff --git a/Zend/zend_language_scanner.c b/Zend/zend_language_scanner.c
index 8b0be1c..e0282af 100644
--- a/Zend/zend_language_scanner.c
+++ b/Zend/zend_language_scanner.c
@@ -1,4 +1,5 @@
-/* Generated by re2c 0.13.5 on Wed Jan  5 17:41:40 2011 */
+/* Generated by re2c 0.13.5 on Sat Mar 12 15:52:58 2011 */
+#line 1 "Zend/zend_language_scanner.l"
 /*
    +----------------------------------------------------------------------+
    | Zend Engine                                                          |
@@ -849,6 +850,7 @@ restart:
 yymore_restart:
 
 
+#line 854 "Zend/zend_language_scanner.c"
 {
 	YYCTYPE yych;
 	unsigned int yyaccept = 0;
@@ -947,6 +949,7 @@ yyc_INITIAL:
 yy3:
 		YYDEBUG(3, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1582 "Zend/zend_language_scanner.l"
 		{
 	if (YYCURSOR > YYLIMIT) {
 		return 0;
@@ -1011,6 +1014,7 @@ inline_html:
 	HANDLE_NEWLINES(yytext, yyleng);
 	return T_INLINE_HTML;
 }
+#line 1018 "Zend/zend_language_scanner.c"
 yy4:
 		YYDEBUG(4, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1028,6 +1032,7 @@ yy5:
 yy6:
 		YYDEBUG(6, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1570 "Zend/zend_language_scanner.l"
 		{
 	if (CG(short_tags)) {
 		zendlval->value.str.val = yytext; /* no copying - intentional */
@@ -1039,12 +1044,14 @@ yy6:
 		goto inline_char_handler;
 	}
 }
+#line 1048 "Zend/zend_language_scanner.c"
 yy7:
 		YYDEBUG(7, *YYCURSOR);
 		++YYCURSOR;
 		if ((yych = *YYCURSOR) == '=') goto yy43;
 		YYDEBUG(8, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1547 "Zend/zend_language_scanner.l"
 		{
 	if (CG(asp_tags)) {
 		zendlval->value.str.val = yytext; /* no copying - intentional */
@@ -1056,6 +1063,7 @@ yy7:
 		goto inline_char_handler;
 	}
 }
+#line 1067 "Zend/zend_language_scanner.c"
 yy9:
 		YYDEBUG(9, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1241,6 +1249,7 @@ yy35:
 		++YYCURSOR;
 		YYDEBUG(38, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1503 "Zend/zend_language_scanner.l"
 		{
 	YYCTYPE *bracket = zend_memrchr(yytext, '<', yyleng - (sizeof("script language=php>") - 1));
 
@@ -1257,6 +1266,7 @@ yy35:
 	BEGIN(ST_IN_SCRIPTING);
 	return T_OPEN_TAG;
 }
+#line 1270 "Zend/zend_language_scanner.c"
 yy39:
 		YYDEBUG(39, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1283,6 +1293,7 @@ yy43:
 		++YYCURSOR;
 		YYDEBUG(44, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1521 "Zend/zend_language_scanner.l"
 		{
 	if (CG(asp_tags)) {
 		zendlval->value.str.val = yytext; /* no copying - intentional */
@@ -1294,11 +1305,13 @@ yy43:
 		goto inline_char_handler;
 	}
 }
+#line 1309 "Zend/zend_language_scanner.c"
 yy45:
 		YYDEBUG(45, *YYCURSOR);
 		++YYCURSOR;
 		YYDEBUG(46, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1534 "Zend/zend_language_scanner.l"
 		{
 	if (CG(short_tags)) {
 		zendlval->value.str.val = yytext; /* no copying - intentional */
@@ -1310,6 +1323,7 @@ yy45:
 		goto inline_char_handler;
 	}
 }
+#line 1327 "Zend/zend_language_scanner.c"
 yy47:
 		YYDEBUG(47, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1336,6 +1350,7 @@ yy50:
 yy51:
 		YYDEBUG(51, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1560 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.str.val = yytext; /* no copying - intentional */
 	zendlval->value.str.len = yyleng;
@@ -1344,6 +1359,7 @@ yy51:
 	BEGIN(ST_IN_SCRIPTING);
 	return T_OPEN_TAG;
 }
+#line 1363 "Zend/zend_language_scanner.c"
 yy52:
 		YYDEBUG(52, *YYCURSOR);
 		++YYCURSOR;
@@ -1414,6 +1430,7 @@ yyc_ST_BACKQUOTE:
 yy56:
 		YYDEBUG(56, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 2040 "Zend/zend_language_scanner.l"
 		{
 	if (YYCURSOR > YYLIMIT) {
 		return 0;
@@ -1454,6 +1471,7 @@ yy56:
 	zend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);
 	return T_ENCAPSED_AND_WHITESPACE;
 }
+#line 1475 "Zend/zend_language_scanner.c"
 yy57:
 		YYDEBUG(57, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1464,10 +1482,12 @@ yy58:
 		++YYCURSOR;
 		YYDEBUG(59, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1984 "Zend/zend_language_scanner.l"
 		{
 	BEGIN(ST_IN_SCRIPTING);
 	return '`';
 }
+#line 1491 "Zend/zend_language_scanner.c"
 yy60:
 		YYDEBUG(60, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1477,12 +1497,14 @@ yy61:
 		++YYCURSOR;
 		YYDEBUG(62, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1971 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.lval = (long) '{';
 	yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);
 	yyless(1);
 	return T_CURLY_OPEN;
 }
+#line 1508 "Zend/zend_language_scanner.c"
 yy63:
 		YYDEBUG(63, *YYCURSOR);
 		yyaccept = 0;
@@ -1498,20 +1520,24 @@ yy63:
 yy65:
 		YYDEBUG(65, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1669 "Zend/zend_language_scanner.l"
 		{
 	zend_copy_value(zendlval, (yytext+1), (yyleng-1));
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 1530 "Zend/zend_language_scanner.c"
 yy66:
 		YYDEBUG(66, *YYCURSOR);
 		++YYCURSOR;
 		YYDEBUG(67, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1296 "Zend/zend_language_scanner.l"
 		{
 	yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);
 	return T_DOLLAR_OPEN_CURLY_BRACES;
 }
+#line 1541 "Zend/zend_language_scanner.c"
 yy68:
 		YYDEBUG(68, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1525,6 +1551,7 @@ yy70:
 		++YYCURSOR;
 		YYDEBUG(71, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1661 "Zend/zend_language_scanner.l"
 		{
 	yyless(yyleng - 1);
 	yy_push_state(ST_VAR_OFFSET TSRMLS_CC);
@@ -1532,6 +1559,7 @@ yy70:
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 1563 "Zend/zend_language_scanner.c"
 yy72:
 		YYDEBUG(72, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1549,6 +1577,7 @@ yy73:
 		++YYCURSOR;
 		YYDEBUG(74, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1651 "Zend/zend_language_scanner.l"
 		{
 	yyless(yyleng - 3);
 	yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);
@@ -1556,6 +1585,7 @@ yy73:
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 1589 "Zend/zend_language_scanner.c"
 	}
 /* *********************************** */
 yyc_ST_DOUBLE_QUOTES:
@@ -1623,6 +1653,7 @@ yy77:
 yy78:
 		YYDEBUG(78, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1990 "Zend/zend_language_scanner.l"
 		{
 	if (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {
 		YYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;
@@ -1671,6 +1702,7 @@ double_quotes_scan_done:
 	zend_scan_escape_string(zendlval, yytext, yyleng, '"' TSRMLS_CC);
 	return T_ENCAPSED_AND_WHITESPACE;
 }
+#line 1706 "Zend/zend_language_scanner.c"
 yy79:
 		YYDEBUG(79, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1681,10 +1713,12 @@ yy80:
 		++YYCURSOR;
 		YYDEBUG(81, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1979 "Zend/zend_language_scanner.l"
 		{
 	BEGIN(ST_IN_SCRIPTING);
 	return '"';
 }
+#line 1722 "Zend/zend_language_scanner.c"
 yy82:
 		YYDEBUG(82, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1694,12 +1728,14 @@ yy83:
 		++YYCURSOR;
 		YYDEBUG(84, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1971 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.lval = (long) '{';
 	yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);
 	yyless(1);
 	return T_CURLY_OPEN;
 }
+#line 1739 "Zend/zend_language_scanner.c"
 yy85:
 		YYDEBUG(85, *YYCURSOR);
 		yyaccept = 0;
@@ -1715,20 +1751,24 @@ yy85:
 yy87:
 		YYDEBUG(87, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1669 "Zend/zend_language_scanner.l"
 		{
 	zend_copy_value(zendlval, (yytext+1), (yyleng-1));
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 1761 "Zend/zend_language_scanner.c"
 yy88:
 		YYDEBUG(88, *YYCURSOR);
 		++YYCURSOR;
 		YYDEBUG(89, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1296 "Zend/zend_language_scanner.l"
 		{
 	yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);
 	return T_DOLLAR_OPEN_CURLY_BRACES;
 }
+#line 1772 "Zend/zend_language_scanner.c"
 yy90:
 		YYDEBUG(90, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1742,6 +1782,7 @@ yy92:
 		++YYCURSOR;
 		YYDEBUG(93, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1661 "Zend/zend_language_scanner.l"
 		{
 	yyless(yyleng - 1);
 	yy_push_state(ST_VAR_OFFSET TSRMLS_CC);
@@ -1749,6 +1790,7 @@ yy92:
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 1794 "Zend/zend_language_scanner.c"
 yy94:
 		YYDEBUG(94, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1766,6 +1808,7 @@ yy95:
 		++YYCURSOR;
 		YYDEBUG(96, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1651 "Zend/zend_language_scanner.l"
 		{
 	yyless(yyleng - 3);
 	yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);
@@ -1773,6 +1816,7 @@ yy95:
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 1820 "Zend/zend_language_scanner.c"
 	}
 /* *********************************** */
 yyc_ST_END_HEREDOC:
@@ -1783,6 +1827,7 @@ yyc_ST_END_HEREDOC:
 	++YYCURSOR;
 	YYDEBUG(100, *YYCURSOR);
 	yyleng = YYCURSOR - SCNG(yy_text);
+#line 1958 "Zend/zend_language_scanner.l"
 	{
 	YYCURSOR += CG(heredoc_len) - 1;
 	yyleng = CG(heredoc_len);
@@ -1794,6 +1839,7 @@ yyc_ST_END_HEREDOC:
 	BEGIN(ST_IN_SCRIPTING);
 	return T_END_HEREDOC;
 }
+#line 1843 "Zend/zend_language_scanner.c"
 /* *********************************** */
 yyc_ST_HEREDOC:
 	{
@@ -1855,6 +1901,7 @@ yy103:
 yy104:
 		YYDEBUG(104, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 2082 "Zend/zend_language_scanner.l"
 		{
 	int newline = 0;
 
@@ -1925,6 +1972,7 @@ heredoc_scan_done:
 	zend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);
 	return T_ENCAPSED_AND_WHITESPACE;
 }
+#line 1976 "Zend/zend_language_scanner.c"
 yy105:
 		YYDEBUG(105, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1939,12 +1987,14 @@ yy107:
 		++YYCURSOR;
 		YYDEBUG(108, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1971 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.lval = (long) '{';
 	yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);
 	yyless(1);
 	return T_CURLY_OPEN;
 }
+#line 1998 "Zend/zend_language_scanner.c"
 yy109:
 		YYDEBUG(109, *YYCURSOR);
 		yyaccept = 0;
@@ -1960,20 +2010,24 @@ yy109:
 yy111:
 		YYDEBUG(111, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1669 "Zend/zend_language_scanner.l"
 		{
 	zend_copy_value(zendlval, (yytext+1), (yyleng-1));
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 2020 "Zend/zend_language_scanner.c"
 yy112:
 		YYDEBUG(112, *YYCURSOR);
 		++YYCURSOR;
 		YYDEBUG(113, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1296 "Zend/zend_language_scanner.l"
 		{
 	yy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);
 	return T_DOLLAR_OPEN_CURLY_BRACES;
 }
+#line 2031 "Zend/zend_language_scanner.c"
 yy114:
 		YYDEBUG(114, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -1987,6 +2041,7 @@ yy116:
 		++YYCURSOR;
 		YYDEBUG(117, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1661 "Zend/zend_language_scanner.l"
 		{
 	yyless(yyleng - 1);
 	yy_push_state(ST_VAR_OFFSET TSRMLS_CC);
@@ -1994,6 +2049,7 @@ yy116:
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 2053 "Zend/zend_language_scanner.c"
 yy118:
 		YYDEBUG(118, *YYCURSOR);
 		yych = *++YYCURSOR;
@@ -2011,6 +2067,7 @@ yy119:
 		++YYCURSOR;
 		YYDEBUG(120, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1651 "Zend/zend_language_scanner.l"
 		{
 	yyless(yyleng - 3);
 	yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);
@@ -2018,6 +2075,7 @@ yy119:
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
+#line 2079 "Zend/zend_language_scanner.c"
 	}
 /* *********************************** */
 yyc_ST_IN_SCRIPTING:
@@ -2089,32 +2147,31 @@ yyc_ST_IN_SCRIPTING:
 		case 0x1C:
 		case 0x1D:
 		case 0x1E:
-		case 0x1F:	goto yy183;
+		case 0x1F:	goto yy184;
 		case '\t':
 		case '\n':
 		case '\r':
-		case ' ':	goto yy139;
-		case '!':	goto yy152;
-		case '"':	goto yy179;
-		case '#':	goto yy175;
-		case '$':	goto yy164;
-		case '%':	goto yy158;
-		case '&':	goto yy159;
-		case '\'':	goto yy177;
-		case '(':	goto yy146;
+		case ' ':	goto yy140;
+		case '!':	goto yy153;
+		case '"':	goto yy180;
+		case '#':	goto yy176;
+		case '$':	goto yy165;
+		case '%':	goto yy159;
+		case '&':	goto yy160;
+		case '\'':	goto yy178;
+		case '(':	goto yy147;
 		case ')':
 		case ',':
 		case ';':
-		case '@':
 		case '[':
 		case ']':
-		case '~':	goto yy165;
-		case '*':	goto yy155;
-		case '+':	goto yy151;
-		case '-':	goto yy137;
-		case '.':	goto yy157;
-		case '/':	goto yy156;
-		case '0':	goto yy171;
+		case '~':	goto yy166;
+		case '*':	goto yy156;
+		case '+':	goto yy152;
+		case '-':	goto yy139;
+		case '.':	goto yy158;
+		case '/':	goto yy157;
+		case '0':	goto yy172;
 		case '1':
 		case '2':
 		case '3':
@@ -2123,12 +2180,13 @@ yyc_ST_IN_SCRIPTING:
 		case '6':
 		case '7':
 		case '8':
-		case '9':	goto yy173;
-		case ':':	goto yy141;
-		case '<':	goto yy153;
-		case '=':	goto yy149;
-		case '>':	goto yy154;
-		case '?':	goto yy166;
+		case '9':	goto yy174;
+		case ':':	goto yy142;
+		case '<':	goto yy154;
+		case '=':	goto yy150;
+		case '>':	goto yy155;
+		case '?':	goto yy167;
+		case '@':	goto yy137;
 		case 'A':
 		case 'a':	goto yy132;
 		case 'B':
@@ -2146,11 +2204,11 @@ yyc_ST_IN_SCRIPTING:
 		case 'I':
 		case 'i':	goto yy130;
 		case 'L':
-		case 'l':	goto yy150;
+		case 'l':	goto yy151;
 		case 'N':
-		case 'n':	goto yy144;
+		case 'n':	goto yy145;
 		case 'O':
-		case 'o':	goto yy162;
+		case 'o':	goto yy163;
 		case 'P':
 		case 'p':	goto yy136;
 		case 'R':
@@ -2160,21 +2218,21 @@ yyc_ST_IN_SCRIPTING:
 		case 'T':
 		case 't':	goto yy129;
 		case 'U':
-		case 'u':	goto yy147;
+		case 'u':	goto yy148;
 		case 'V':
-		case 'v':	goto yy145;
+		case 'v':	goto yy146;
 		case 'W':
 		case 'w':	goto yy131;
 		case 'X':
-		case 'x':	goto yy163;
-		case '\\':	goto yy142;
-		case '^':	goto yy161;
-		case '_':	goto yy148;
-		case '`':	goto yy181;
-		case '{':	goto yy167;
-		case '|':	goto yy160;
-		case '}':	goto yy169;
-		default:	goto yy174;
+		case 'x':	goto yy164;
+		case '\\':	goto yy143;
+		case '^':	goto yy162;
+		case '_':	goto yy149;
+		case '`':	goto yy182;
+		case '{':	goto yy168;
+		case '|':	goto yy161;
+		case '}':	goto yy170;
+		default:	goto yy175;
 		}
 yy123:
 		YYDEBUG(123, *YYCURSOR);
@@ -2182,47 +2240,49 @@ yy123:
 		YYDEBUG(-1, yych);
 		switch ((yych = *YYCURSOR)) {
 		case 'C':
-		case 'c':	goto yy701;
+		case 'c':	goto yy704;
 		case 'L':
-		case 'l':	goto yy702;
+		case 'l':	goto yy705;
 		case 'M':
-		case 'm':	goto yy703;
+		case 'm':	goto yy706;
 		case 'N':
-		case 'n':	goto yy704;
+		case 'n':	goto yy707;
 		case 'V':
-		case 'v':	goto yy705;
+		case 'v':	goto yy708;
 		case 'X':
-		case 'x':	goto yy706;
-		default:	goto yy186;
+		case 'x':	goto yy709;
+		default:	goto yy187;
 		}
 yy124:
 		YYDEBUG(124, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1692 "Zend/zend_language_scanner.l"
 		{
 	zend_copy_value(zendlval, yytext, yyleng);
 	zendlval->type = IS_STRING;
 	return T_STRING;
 }
+#line 2266 "Zend/zend_language_scanner.c"
 yy125:
 		YYDEBUG(125, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'O') {
 			if (yych <= 'H') {
-				if (yych == 'E') goto yy683;
-				goto yy186;
+				if (yych == 'E') goto yy686;
+				goto yy187;
 			} else {
-				if (yych <= 'I') goto yy684;
-				if (yych <= 'N') goto yy186;
-				goto yy685;
+				if (yych <= 'I') goto yy687;
+				if (yych <= 'N') goto yy187;
+				goto yy688;
 			}
 		} else {
 			if (yych <= 'h') {
-				if (yych == 'e') goto yy683;
-				goto yy186;
+				if (yych == 'e') goto yy686;
+				goto yy187;
 			} else {
-				if (yych <= 'i') goto yy684;
-				if (yych == 'o') goto yy685;
-				goto yy186;
+				if (yych <= 'i') goto yy687;
+				if (yych == 'o') goto yy688;
+				goto yy187;
 			}
 		}
 yy126:
@@ -2230,21 +2290,21 @@ yy126:
 		yych = *++YYCURSOR;
 		if (yych <= 'U') {
 			if (yych <= 'N') {
-				if (yych == 'I') goto yy662;
-				goto yy186;
+				if (yych == 'I') goto yy665;
+				goto yy187;
 			} else {
-				if (yych <= 'O') goto yy663;
-				if (yych <= 'T') goto yy186;
-				goto yy664;
+				if (yych <= 'O') goto yy666;
+				if (yych <= 'T') goto yy187;
+				goto yy667;
 			}
 		} else {
 			if (yych <= 'n') {
-				if (yych == 'i') goto yy662;
-				goto yy186;
+				if (yych == 'i') goto yy665;
+				goto yy187;
 			} else {
-				if (yych <= 'o') goto yy663;
-				if (yych == 'u') goto yy664;
-				goto yy186;
+				if (yych <= 'o') goto yy666;
+				if (yych == 'u') goto yy667;
+				goto yy187;
 			}
 		}
 yy127:
@@ -2252,43 +2312,43 @@ yy127:
 		yych = *++YYCURSOR;
 		if (yych <= 'O') {
 			if (yych <= 'K') {
-				if (yych == 'A') goto yy634;
-				goto yy186;
+				if (yych == 'A') goto yy637;
+				goto yy187;
 			} else {
-				if (yych <= 'L') goto yy635;
-				if (yych <= 'N') goto yy186;
-				goto yy636;
+				if (yych <= 'L') goto yy638;
+				if (yych <= 'N') goto yy187;
+				goto yy639;
 			}
 		} else {
 			if (yych <= 'k') {
-				if (yych == 'a') goto yy634;
-				goto yy186;
+				if (yych == 'a') goto yy637;
+				goto yy187;
 			} else {
-				if (yych <= 'l') goto yy635;
-				if (yych == 'o') goto yy636;
-				goto yy186;
+				if (yych <= 'l') goto yy638;
+				if (yych == 'o') goto yy639;
+				goto yy187;
 			}
 		}
 yy128:
 		YYDEBUG(128, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy616;
-		if (yych == 'e') goto yy616;
-		goto yy186;
+		if (yych == 'E') goto yy619;
+		if (yych == 'e') goto yy619;
+		goto yy187;
 yy129:
 		YYDEBUG(129, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'R') {
-			if (yych == 'H') goto yy608;
-			if (yych <= 'Q') goto yy186;
-			goto yy609;
+			if (yych == 'H') goto yy611;
+			if (yych <= 'Q') goto yy187;
+			goto yy612;
 		} else {
 			if (yych <= 'h') {
-				if (yych <= 'g') goto yy186;
-				goto yy608;
+				if (yych <= 'g') goto yy187;
+				goto yy611;
 			} else {
-				if (yych == 'r') goto yy609;
-				goto yy186;
+				if (yych == 'r') goto yy612;
+				goto yy187;
 			}
 		}
 yy130:
@@ -2296,70 +2356,70 @@ yy130:
 		yych = *++YYCURSOR;
 		if (yych <= 'S') {
 			if (yych <= 'L') {
-				if (yych == 'F') goto yy561;
-				goto yy186;
+				if (yych == 'F') goto yy564;
+				goto yy187;
 			} else {
-				if (yych <= 'M') goto yy563;
-				if (yych <= 'N') goto yy564;
-				if (yych <= 'R') goto yy186;
-				goto yy565;
+				if (yych <= 'M') goto yy566;
+				if (yych <= 'N') goto yy567;
+				if (yych <= 'R') goto yy187;
+				goto yy568;
 			}
 		} else {
 			if (yych <= 'm') {
-				if (yych == 'f') goto yy561;
-				if (yych <= 'l') goto yy186;
-				goto yy563;
+				if (yych == 'f') goto yy564;
+				if (yych <= 'l') goto yy187;
+				goto yy566;
 			} else {
-				if (yych <= 'n') goto yy564;
-				if (yych == 's') goto yy565;
-				goto yy186;
+				if (yych <= 'n') goto yy567;
+				if (yych == 's') goto yy568;
+				goto yy187;
 			}
 		}
 yy131:
 		YYDEBUG(131, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy556;
-		if (yych == 'h') goto yy556;
-		goto yy186;
+		if (yych == 'H') goto yy559;
+		if (yych == 'h') goto yy559;
+		goto yy187;
 yy132:
 		YYDEBUG(132, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'S') {
 			if (yych <= 'M') {
-				if (yych == 'B') goto yy538;
-				goto yy186;
+				if (yych == 'B') goto yy541;
+				goto yy187;
 			} else {
-				if (yych <= 'N') goto yy539;
-				if (yych <= 'Q') goto yy186;
-				if (yych <= 'R') goto yy540;
-				goto yy541;
+				if (yych <= 'N') goto yy542;
+				if (yych <= 'Q') goto yy187;
+				if (yych <= 'R') goto yy543;
+				goto yy544;
 			}
 		} else {
 			if (yych <= 'n') {
-				if (yych == 'b') goto yy538;
-				if (yych <= 'm') goto yy186;
-				goto yy539;
+				if (yych == 'b') goto yy541;
+				if (yych <= 'm') goto yy187;
+				goto yy542;
 			} else {
-				if (yych <= 'q') goto yy186;
-				if (yych <= 'r') goto yy540;
-				if (yych <= 's') goto yy541;
-				goto yy186;
+				if (yych <= 'q') goto yy187;
+				if (yych <= 'r') goto yy543;
+				if (yych <= 's') goto yy544;
+				goto yy187;
 			}
 		}
 yy133:
 		YYDEBUG(133, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'W') {
-			if (yych == 'T') goto yy526;
-			if (yych <= 'V') goto yy186;
-			goto yy527;
+			if (yych == 'T') goto yy529;
+			if (yych <= 'V') goto yy187;
+			goto yy530;
 		} else {
 			if (yych <= 't') {
-				if (yych <= 's') goto yy186;
-				goto yy526;
+				if (yych <= 's') goto yy187;
+				goto yy529;
 			} else {
-				if (yych == 'w') goto yy527;
-				goto yy186;
+				if (yych == 'w') goto yy530;
+				goto yy187;
 			}
 		}
 yy134:
@@ -2368,77 +2428,86 @@ yy134:
 		yych = *(YYMARKER = ++YYCURSOR);
 		if (yych <= ';') {
 			if (yych <= '"') {
-				if (yych <= '!') goto yy186;
-				goto yy518;
+				if (yych <= '!') goto yy187;
+				goto yy521;
 			} else {
-				if (yych == '\'') goto yy519;
-				goto yy186;
+				if (yych == '\'') goto yy522;
+				goto yy187;
 			}
 		} else {
 			if (yych <= 'R') {
-				if (yych <= '<') goto yy517;
-				if (yych <= 'Q') goto yy186;
-				goto yy520;
+				if (yych <= '<') goto yy520;
+				if (yych <= 'Q') goto yy187;
+				goto yy523;
 			} else {
-				if (yych == 'r') goto yy520;
-				goto yy186;
+				if (yych == 'r') goto yy523;
+				goto yy187;
 			}
 		}
 yy135:
 		YYDEBUG(135, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'O') {
-			if (yych == 'L') goto yy507;
-			if (yych <= 'N') goto yy186;
-			goto yy508;
+			if (yych == 'L') goto yy510;
+			if (yych <= 'N') goto yy187;
+			goto yy511;
 		} else {
 			if (yych <= 'l') {
-				if (yych <= 'k') goto yy186;
-				goto yy507;
+				if (yych <= 'k') goto yy187;
+				goto yy510;
 			} else {
-				if (yych == 'o') goto yy508;
-				goto yy186;
+				if (yych == 'o') goto yy511;
+				goto yy187;
 			}
 		}
 yy136:
 		YYDEBUG(136, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'U') {
-			if (yych == 'R') goto yy483;
-			if (yych <= 'T') goto yy186;
-			goto yy484;
+			if (yych == 'R') goto yy486;
+			if (yych <= 'T') goto yy187;
+			goto yy487;
 		} else {
 			if (yych <= 'r') {
-				if (yych <= 'q') goto yy186;
-				goto yy483;
+				if (yych <= 'q') goto yy187;
+				goto yy486;
 			} else {
-				if (yych == 'u') goto yy484;
-				goto yy186;
+				if (yych == 'u') goto yy487;
+				goto yy187;
 			}
 		}
 yy137:
 		YYDEBUG(137, *YYCURSOR);
 		++YYCURSOR;
-		if ((yych = *YYCURSOR) <= '<') {
-			if (yych == '-') goto yy479;
-		} else {
-			if (yych <= '=') goto yy477;
-			if (yych <= '>') goto yy481;
-		}
+		if ((yych = *YYCURSOR) == '@') goto yy484;
 yy138:
 		YYDEBUG(138, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1285 "Zend/zend_language_scanner.l"
 		{
 	return yytext[0];
 }
+#line 2491 "Zend/zend_language_scanner.c"
 yy139:
 		YYDEBUG(139, *YYCURSOR);
-		++YYCURSOR;
-		yych = *YYCURSOR;
-		goto yy476;
+		yych = *++YYCURSOR;
+		if (yych <= '<') {
+			if (yych == '-') goto yy480;
+			goto yy138;
+		} else {
+			if (yych <= '=') goto yy478;
+			if (yych <= '>') goto yy482;
+			goto yy138;
+		}
 yy140:
 		YYDEBUG(140, *YYCURSOR);
+		++YYCURSOR;
+		yych = *YYCURSOR;
+		goto yy477;
+yy141:
+		YYDEBUG(141, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1020 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.str.val = yytext; /* no copying - intentional */
 	zendlval->value.str.len = yyleng;
@@ -2446,255 +2515,261 @@ yy140:
 	HANDLE_NEWLINES(yytext, yyleng);
 	return T_WHITESPACE;
 }
-yy141:
-		YYDEBUG(141, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == ':') goto yy473;
-		goto yy138;
+#line 2519 "Zend/zend_language_scanner.c"
 yy142:
 		YYDEBUG(142, *YYCURSOR);
-		++YYCURSOR;
+		yych = *++YYCURSOR;
+		if (yych == ':') goto yy474;
+		goto yy138;
+yy143:
 		YYDEBUG(143, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(144, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1049 "Zend/zend_language_scanner.l"
 		{
 	return T_NS_SEPARATOR;
 }
-yy144:
-		YYDEBUG(144, *YYCURSOR);
+#line 2534 "Zend/zend_language_scanner.c"
+yy145:
+		YYDEBUG(145, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'E') {
-			if (yych == 'A') goto yy461;
-			if (yych <= 'D') goto yy186;
-			goto yy462;
+			if (yych == 'A') goto yy462;
+			if (yych <= 'D') goto yy187;
+			goto yy463;
 		} else {
 			if (yych <= 'a') {
-				if (yych <= '`') goto yy186;
-				goto yy461;
+				if (yych <= '`') goto yy187;
+				goto yy462;
 			} else {
-				if (yych == 'e') goto yy462;
-				goto yy186;
+				if (yych == 'e') goto yy463;
+				goto yy187;
 			}
 		}
-yy145:
-		YYDEBUG(145, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy458;
-		if (yych == 'a') goto yy458;
-		goto yy186;
 yy146:
 		YYDEBUG(146, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy459;
+		if (yych == 'a') goto yy459;
+		goto yy187;
+yy147:
+		YYDEBUG(147, *YYCURSOR);
 		yyaccept = 1;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if (yych <= 'S') {
 			if (yych <= 'D') {
 				if (yych <= ' ') {
-					if (yych == '\t') goto yy379;
+					if (yych == '\t') goto yy380;
 					if (yych <= 0x1F) goto yy138;
-					goto yy379;
+					goto yy380;
 				} else {
 					if (yych <= '@') goto yy138;
 					if (yych == 'C') goto yy138;
-					goto yy379;
+					goto yy380;
 				}
 			} else {
 				if (yych <= 'I') {
-					if (yych == 'F') goto yy379;
+					if (yych == 'F') goto yy380;
 					if (yych <= 'H') goto yy138;
-					goto yy379;
+					goto yy380;
 				} else {
-					if (yych == 'O') goto yy379;
+					if (yych == 'O') goto yy380;
 					if (yych <= 'Q') goto yy138;
-					goto yy379;
+					goto yy380;
 				}
 			}
 		} else {
 			if (yych <= 'f') {
 				if (yych <= 'b') {
-					if (yych == 'U') goto yy379;
+					if (yych == 'U') goto yy380;
 					if (yych <= '`') goto yy138;
-					goto yy379;
+					goto yy380;
 				} else {
-					if (yych == 'd') goto yy379;
+					if (yych == 'd') goto yy380;
 					if (yych <= 'e') goto yy138;
-					goto yy379;
+					goto yy380;
 				}
 			} else {
 				if (yych <= 'o') {
-					if (yych == 'i') goto yy379;
+					if (yych == 'i') goto yy380;
 					if (yych <= 'n') goto yy138;
-					goto yy379;
+					goto yy380;
 				} else {
 					if (yych <= 's') {
 						if (yych <= 'q') goto yy138;
-						goto yy379;
+						goto yy380;
 					} else {
-						if (yych == 'u') goto yy379;
+						if (yych == 'u') goto yy380;
 						goto yy138;
 					}
 				}
 			}
 		}
-yy147:
-		YYDEBUG(147, *YYCURSOR);
+yy148:
+		YYDEBUG(148, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'S') {
-			if (yych == 'N') goto yy370;
-			if (yych <= 'R') goto yy186;
-			goto yy371;
+			if (yych == 'N') goto yy371;
+			if (yych <= 'R') goto yy187;
+			goto yy372;
 		} else {
 			if (yych <= 'n') {
-				if (yych <= 'm') goto yy186;
-				goto yy370;
+				if (yych <= 'm') goto yy187;
+				goto yy371;
 			} else {
-				if (yych == 's') goto yy371;
-				goto yy186;
+				if (yych == 's') goto yy372;
+				goto yy187;
 			}
 		}
-yy148:
-		YYDEBUG(148, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == '_') goto yy296;
-		goto yy186;
 yy149:
 		YYDEBUG(149, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych <= '<') goto yy138;
-		if (yych <= '=') goto yy290;
-		if (yych <= '>') goto yy292;
-		goto yy138;
+		if (yych == '_') goto yy297;
+		goto yy187;
 yy150:
 		YYDEBUG(150, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy286;
-		if (yych == 'i') goto yy286;
-		goto yy186;
+		if (yych <= '<') goto yy138;
+		if (yych <= '=') goto yy291;
+		if (yych <= '>') goto yy293;
+		goto yy138;
 yy151:
 		YYDEBUG(151, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '+') goto yy284;
-		if (yych == '=') goto yy282;
-		goto yy138;
+		if (yych == 'I') goto yy287;
+		if (yych == 'i') goto yy287;
+		goto yy187;
 yy152:
 		YYDEBUG(152, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '=') goto yy279;
+		if (yych == '+') goto yy285;
+		if (yych == '=') goto yy283;
 		goto yy138;
 yy153:
 		YYDEBUG(153, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == '=') goto yy280;
+		goto yy138;
+yy154:
+		YYDEBUG(154, *YYCURSOR);
 		yyaccept = 1;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if (yych <= ';') {
-			if (yych == '/') goto yy251;
+			if (yych == '/') goto yy252;
 			goto yy138;
 		} else {
-			if (yych <= '<') goto yy249;
-			if (yych <= '=') goto yy252;
-			if (yych <= '>') goto yy254;
+			if (yych <= '<') goto yy250;
+			if (yych <= '=') goto yy253;
+			if (yych <= '>') goto yy255;
 			goto yy138;
 		}
-yy154:
-		YYDEBUG(154, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych <= '<') goto yy138;
-		if (yych <= '=') goto yy245;
-		if (yych <= '>') goto yy243;
-		goto yy138;
 yy155:
 		YYDEBUG(155, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '=') goto yy241;
+		if (yych <= '<') goto yy138;
+		if (yych <= '=') goto yy246;
+		if (yych <= '>') goto yy244;
 		goto yy138;
 yy156:
 		YYDEBUG(156, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if (yych == '=') goto yy242;
+		goto yy138;
+yy157:
+		YYDEBUG(157, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if (yych <= '.') {
-			if (yych == '*') goto yy233;
+			if (yych == '*') goto yy234;
 			goto yy138;
 		} else {
-			if (yych <= '/') goto yy235;
-			if (yych == '=') goto yy236;
+			if (yych <= '/') goto yy236;
+			if (yych == '=') goto yy237;
 			goto yy138;
 		}
-yy157:
-		YYDEBUG(157, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych <= '/') goto yy138;
-		if (yych <= '9') goto yy229;
-		if (yych == '=') goto yy231;
-		goto yy138;
 yy158:
 		YYDEBUG(158, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych <= '<') goto yy138;
-		if (yych <= '=') goto yy225;
-		if (yych <= '>') goto yy223;
+		if (yych <= '/') goto yy138;
+		if (yych <= '9') goto yy230;
+		if (yych == '=') goto yy232;
 		goto yy138;
 yy159:
 		YYDEBUG(159, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '&') goto yy219;
-		if (yych == '=') goto yy221;
+		if (yych <= '<') goto yy138;
+		if (yych <= '=') goto yy226;
+		if (yych <= '>') goto yy224;
 		goto yy138;
 yy160:
 		YYDEBUG(160, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '=') goto yy217;
-		if (yych == '|') goto yy215;
+		if (yych == '&') goto yy220;
+		if (yych == '=') goto yy222;
 		goto yy138;
 yy161:
 		YYDEBUG(161, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '=') goto yy213;
+		if (yych == '=') goto yy218;
+		if (yych == '|') goto yy216;
 		goto yy138;
 yy162:
 		YYDEBUG(162, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy211;
-		if (yych == 'r') goto yy211;
-		goto yy186;
+		if (yych == '=') goto yy214;
+		goto yy138;
 yy163:
 		YYDEBUG(163, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy208;
-		if (yych == 'o') goto yy208;
-		goto yy186;
+		if (yych == 'R') goto yy212;
+		if (yych == 'r') goto yy212;
+		goto yy187;
 yy164:
 		YYDEBUG(164, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if (yych == 'O') goto yy209;
+		if (yych == 'o') goto yy209;
+		goto yy187;
+yy165:
+		YYDEBUG(165, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if (yych <= '_') {
 			if (yych <= '@') goto yy138;
-			if (yych <= 'Z') goto yy205;
+			if (yych <= 'Z') goto yy206;
 			if (yych <= '^') goto yy138;
-			goto yy205;
+			goto yy206;
 		} else {
 			if (yych <= '`') goto yy138;
-			if (yych <= 'z') goto yy205;
+			if (yych <= 'z') goto yy206;
 			if (yych <= '~') goto yy138;
-			goto yy205;
+			goto yy206;
 		}
-yy165:
-		YYDEBUG(165, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy138;
 yy166:
 		YYDEBUG(166, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '>') goto yy201;
 		goto yy138;
 yy167:
 		YYDEBUG(167, *YYCURSOR);
-		++YYCURSOR;
+		yych = *++YYCURSOR;
+		if (yych == '>') goto yy202;
+		goto yy138;
+yy168:
 		YYDEBUG(168, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(169, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1290 "Zend/zend_language_scanner.l"
 		{
 	yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);
 	return '{';
 }
-yy169:
-		YYDEBUG(169, *YYCURSOR);
-		++YYCURSOR;
+#line 2767 "Zend/zend_language_scanner.c"
+yy170:
 		YYDEBUG(170, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(171, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1302 "Zend/zend_language_scanner.l"
 		{
 	RESET_DOC_COMMENT();
 	if (!zend_stack_is_empty(&SCNG(state_stack))) {
@@ -2702,28 +2777,30 @@ yy169:
 	}
 	return '}';
 }
-yy171:
-		YYDEBUG(171, *YYCURSOR);
+#line 2781 "Zend/zend_language_scanner.c"
+yy172:
+		YYDEBUG(172, *YYCURSOR);
 		yyaccept = 2;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if (yych <= 'E') {
 			if (yych <= '/') {
-				if (yych == '.') goto yy187;
+				if (yych == '.') goto yy188;
 			} else {
-				if (yych <= '9') goto yy190;
-				if (yych >= 'E') goto yy192;
+				if (yych <= '9') goto yy191;
+				if (yych >= 'E') goto yy193;
 			}
 		} else {
 			if (yych <= 'd') {
-				if (yych == 'X') goto yy197;
+				if (yych == 'X') goto yy198;
 			} else {
-				if (yych <= 'e') goto yy192;
-				if (yych == 'x') goto yy197;
+				if (yych <= 'e') goto yy193;
+				if (yych == 'x') goto yy198;
 			}
 		}
-yy172:
-		YYDEBUG(172, *YYCURSOR);
+yy173:
+		YYDEBUG(173, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1328 "Zend/zend_language_scanner.l"
 		{
 	if (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */
 		zendlval->value.lval = strtol(yytext, NULL, 0);
@@ -2744,33 +2821,35 @@ yy172:
 	zendlval->type = IS_LONG;
 	return T_LNUMBER;
 }
-yy173:
-		YYDEBUG(173, *YYCURSOR);
+#line 2825 "Zend/zend_language_scanner.c"
+yy174:
+		YYDEBUG(174, *YYCURSOR);
 		yyaccept = 2;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if (yych <= '9') {
-			if (yych == '.') goto yy187;
-			if (yych <= '/') goto yy172;
-			goto yy190;
+			if (yych == '.') goto yy188;
+			if (yych <= '/') goto yy173;
+			goto yy191;
 		} else {
 			if (yych <= 'E') {
-				if (yych <= 'D') goto yy172;
-				goto yy192;
+				if (yych <= 'D') goto yy173;
+				goto yy193;
 			} else {
-				if (yych == 'e') goto yy192;
-				goto yy172;
+				if (yych == 'e') goto yy193;
+				goto yy173;
 			}
 		}
-yy174:
-		YYDEBUG(174, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy186;
 yy175:
 		YYDEBUG(175, *YYCURSOR);
-		++YYCURSOR;
+		yych = *++YYCURSOR;
+		goto yy187;
 yy176:
 		YYDEBUG(176, *YYCURSOR);
+		++YYCURSOR;
+yy177:
+		YYDEBUG(177, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1699 "Zend/zend_language_scanner.l"
 		{
 	while (YYCURSOR < YYLIMIT) {
 		switch (*YYCURSOR++) {
@@ -2804,12 +2883,14 @@ yy176:
 
 	return T_COMMENT;
 }
-yy177:
-		YYDEBUG(177, *YYCURSOR);
-		++YYCURSOR;
+#line 2887 "Zend/zend_language_scanner.c"
 yy178:
 		YYDEBUG(178, *YYCURSOR);
+		++YYCURSOR;
+yy179:
+		YYDEBUG(179, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1790 "Zend/zend_language_scanner.l"
 		{
 	register char *s, *t;
 	char *end;
@@ -2879,12 +2960,14 @@ yy178:
 #endif /* ZEND_MULTIBYTE */
 	return T_CONSTANT_ENCAPSED_STRING;
 }
-yy179:
-		YYDEBUG(179, *YYCURSOR);
-		++YYCURSOR;
+#line 2964 "Zend/zend_language_scanner.c"
 yy180:
 		YYDEBUG(180, *YYCURSOR);
+		++YYCURSOR;
+yy181:
+		YYDEBUG(181, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1861 "Zend/zend_language_scanner.l"
 		{
 	int bprefix = (yytext[0] != '"') ? 1 : 0;
 
@@ -2925,20 +3008,24 @@ yy180:
 	BEGIN(ST_DOUBLE_QUOTES);
 	return '"';
 }
-yy181:
-		YYDEBUG(181, *YYCURSOR);
-		++YYCURSOR;
+#line 3012 "Zend/zend_language_scanner.c"
+yy182:
 		YYDEBUG(182, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(183, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1952 "Zend/zend_language_scanner.l"
 		{
 	BEGIN(ST_BACKQUOTE);
 	return '`';
 }
-yy183:
-		YYDEBUG(183, *YYCURSOR);
-		++YYCURSOR;
+#line 3023 "Zend/zend_language_scanner.c"
+yy184:
 		YYDEBUG(184, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(185, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 2210 "Zend/zend_language_scanner.l"
 		{
 	if (YYCURSOR > YYLIMIT) {
 		return 0;
@@ -2947,67 +3034,70 @@ yy183:
 	zend_error(E_COMPILE_WARNING,"Unexpected character in input:  '%c' (ASCII=%d) state=%d", yytext[0], yytext[0], YYSTATE);
 	goto restart;
 }
-yy185:
-		YYDEBUG(185, *YYCURSOR);
+#line 3038 "Zend/zend_language_scanner.c"
+yy186:
+		YYDEBUG(186, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy186:
-		YYDEBUG(186, *YYCURSOR);
+yy187:
+		YYDEBUG(187, *YYCURSOR);
 		if (yybm[0+yych] & 8) {
-			goto yy185;
+			goto yy186;
 		}
 		goto yy124;
-yy187:
-		YYDEBUG(187, *YYCURSOR);
+yy188:
+		YYDEBUG(188, *YYCURSOR);
 		yyaccept = 3;
 		YYMARKER = ++YYCURSOR;
 		YYFILL(3);
 		yych = *YYCURSOR;
-		YYDEBUG(188, *YYCURSOR);
+		YYDEBUG(189, *YYCURSOR);
 		if (yybm[0+yych] & 16) {
-			goto yy187;
+			goto yy188;
 		}
-		if (yych == 'E') goto yy192;
-		if (yych == 'e') goto yy192;
-yy189:
-		YYDEBUG(189, *YYCURSOR);
+		if (yych == 'E') goto yy193;
+		if (yych == 'e') goto yy193;
+yy190:
+		YYDEBUG(190, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1389 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.dval = zend_strtod(yytext, NULL);
 	zendlval->type = IS_DOUBLE;
 	return T_DNUMBER;
 }
-yy190:
-		YYDEBUG(190, *YYCURSOR);
+#line 3071 "Zend/zend_language_scanner.c"
+yy191:
+		YYDEBUG(191, *YYCURSOR);
 		yyaccept = 2;
 		YYMARKER = ++YYCURSOR;
 		YYFILL(3);
 		yych = *YYCURSOR;
-		YYDEBUG(191, *YYCURSOR);
+		YYDEBUG(192, *YYCURSOR);
 		if (yych <= '9') {
-			if (yych == '.') goto yy187;
-			if (yych <= '/') goto yy172;
-			goto yy190;
+			if (yych == '.') goto yy188;
+			if (yych <= '/') goto yy173;
+			goto yy191;
 		} else {
 			if (yych <= 'E') {
-				if (yych <= 'D') goto yy172;
+				if (yych <= 'D') goto yy173;
 			} else {
-				if (yych != 'e') goto yy172;
+				if (yych != 'e') goto yy173;
 			}
 		}
-yy192:
-		YYDEBUG(192, *YYCURSOR);
+yy193:
+		YYDEBUG(193, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= ',') {
-			if (yych == '+') goto yy194;
+			if (yych == '+') goto yy195;
 		} else {
-			if (yych <= '-') goto yy194;
-			if (yych <= '/') goto yy193;
-			if (yych <= '9') goto yy195;
+			if (yych <= '-') goto yy195;
+			if (yych <= '/') goto yy194;
+			if (yych <= '9') goto yy196;
 		}
-yy193:
-		YYDEBUG(193, *YYCURSOR);
+yy194:
+		YYDEBUG(194, *YYCURSOR);
 		YYCURSOR = YYMARKER;
 		if (yyaccept <= 2) {
 			if (yyaccept <= 1) {
@@ -3017,51 +3107,52 @@ yy193:
 					goto yy138;
 				}
 			} else {
-				goto yy172;
+				goto yy173;
 			}
 		} else {
 			if (yyaccept <= 4) {
 				if (yyaccept <= 3) {
-					goto yy189;
+					goto yy190;
 				} else {
-					goto yy234;
+					goto yy235;
 				}
 			} else {
-				goto yy250;
+				goto yy251;
 			}
 		}
-yy194:
-		YYDEBUG(194, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych <= '/') goto yy193;
-		if (yych >= ':') goto yy193;
 yy195:
 		YYDEBUG(195, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych <= '/') goto yy194;
+		if (yych >= ':') goto yy194;
+yy196:
+		YYDEBUG(196, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(196, *YYCURSOR);
-		if (yych <= '/') goto yy189;
-		if (yych <= '9') goto yy195;
-		goto yy189;
-yy197:
 		YYDEBUG(197, *YYCURSOR);
+		if (yych <= '/') goto yy190;
+		if (yych <= '9') goto yy196;
+		goto yy190;
+yy198:
+		YYDEBUG(198, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yybm[0+yych] & 32) {
-			goto yy198;
+			goto yy199;
 		}
-		goto yy193;
-yy198:
-		YYDEBUG(198, *YYCURSOR);
+		goto yy194;
+yy199:
+		YYDEBUG(199, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(199, *YYCURSOR);
+		YYDEBUG(200, *YYCURSOR);
 		if (yybm[0+yych] & 32) {
-			goto yy198;
+			goto yy199;
 		}
-		YYDEBUG(200, *YYCURSOR);
+		YYDEBUG(201, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1349 "Zend/zend_language_scanner.l"
 		{
 	char *hex = yytext + 2; /* Skip "0x" */
 	int len = yyleng - 2;
@@ -3082,14 +3173,16 @@ yy198:
 		return T_DNUMBER;
 	}
 }
-yy201:
-		YYDEBUG(201, *YYCURSOR);
-		++YYCURSOR;
-		if ((yych = *YYCURSOR) == '\n') goto yy203;
-		if (yych == '\r') goto yy204;
+#line 3177 "Zend/zend_language_scanner.c"
 yy202:
 		YYDEBUG(202, *YYCURSOR);
+		++YYCURSOR;
+		if ((yych = *YYCURSOR) == '\n') goto yy204;
+		if (yych == '\r') goto yy205;
+yy203:
+		YYDEBUG(203, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1767 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.str.val = yytext; /* no copying - intentional */
 	zendlval->value.str.len = yyleng;
@@ -3097,119 +3190,137 @@ yy202:
 	BEGIN(INITIAL);
 	return T_CLOSE_TAG;  /* implicit ';' at php-end tag */
 }
-yy203:
-		YYDEBUG(203, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy202;
+#line 3194 "Zend/zend_language_scanner.c"
 yy204:
 		YYDEBUG(204, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '\n') goto yy203;
-		goto yy202;
+		goto yy203;
 yy205:
 		YYDEBUG(205, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == '\n') goto yy204;
+		goto yy203;
+yy206:
+		YYDEBUG(206, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(206, *YYCURSOR);
+		YYDEBUG(207, *YYCURSOR);
 		if (yych <= '^') {
 			if (yych <= '9') {
-				if (yych >= '0') goto yy205;
+				if (yych >= '0') goto yy206;
 			} else {
-				if (yych <= '@') goto yy207;
-				if (yych <= 'Z') goto yy205;
+				if (yych <= '@') goto yy208;
+				if (yych <= 'Z') goto yy206;
 			}
 		} else {
 			if (yych <= '`') {
-				if (yych <= '_') goto yy205;
+				if (yych <= '_') goto yy206;
 			} else {
-				if (yych <= 'z') goto yy205;
-				if (yych >= 0x7F) goto yy205;
+				if (yych <= 'z') goto yy206;
+				if (yych >= 0x7F) goto yy206;
 			}
 		}
-yy207:
-		YYDEBUG(207, *YYCURSOR);
+yy208:
+		YYDEBUG(208, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1669 "Zend/zend_language_scanner.l"
 		{
 	zend_copy_value(zendlval, (yytext+1), (yyleng-1));
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
-yy208:
-		YYDEBUG(208, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy209;
-		if (yych != 'r') goto yy186;
+#line 3234 "Zend/zend_language_scanner.c"
 yy209:
 		YYDEBUG(209, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'R') goto yy210;
+		if (yych != 'r') goto yy187;
+yy210:
+		YYDEBUG(210, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(210, *YYCURSOR);
+		YYDEBUG(211, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1273 "Zend/zend_language_scanner.l"
 		{
 	return T_LOGICAL_XOR;
 }
-yy211:
-		YYDEBUG(211, *YYCURSOR);
+#line 3252 "Zend/zend_language_scanner.c"
+yy212:
+		YYDEBUG(212, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(212, *YYCURSOR);
+		YYDEBUG(213, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1265 "Zend/zend_language_scanner.l"
 		{
 	return T_LOGICAL_OR;
 }
-yy213:
-		YYDEBUG(213, *YYCURSOR);
-		++YYCURSOR;
+#line 3265 "Zend/zend_language_scanner.c"
+yy214:
 		YYDEBUG(214, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(215, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1253 "Zend/zend_language_scanner.l"
 		{
 	return T_XOR_EQUAL;
 }
-yy215:
-		YYDEBUG(215, *YYCURSOR);
-		++YYCURSOR;
+#line 3275 "Zend/zend_language_scanner.c"
+yy216:
 		YYDEBUG(216, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(217, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1257 "Zend/zend_language_scanner.l"
 		{
 	return T_BOOLEAN_OR;
 }
-yy217:
-		YYDEBUG(217, *YYCURSOR);
-		++YYCURSOR;
+#line 3285 "Zend/zend_language_scanner.c"
+yy218:
 		YYDEBUG(218, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(219, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1249 "Zend/zend_language_scanner.l"
 		{
 	return T_OR_EQUAL;
 }
-yy219:
-		YYDEBUG(219, *YYCURSOR);
-		++YYCURSOR;
+#line 3295 "Zend/zend_language_scanner.c"
+yy220:
 		YYDEBUG(220, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(221, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1261 "Zend/zend_language_scanner.l"
 		{
 	return T_BOOLEAN_AND;
 }
-yy221:
-		YYDEBUG(221, *YYCURSOR);
-		++YYCURSOR;
+#line 3305 "Zend/zend_language_scanner.c"
+yy222:
 		YYDEBUG(222, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(223, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1245 "Zend/zend_language_scanner.l"
 		{
 	return T_AND_EQUAL;
 }
-yy223:
-		YYDEBUG(223, *YYCURSOR);
-		++YYCURSOR;
-		if ((yych = *YYCURSOR) == '\n') goto yy227;
-		if (yych == '\r') goto yy228;
+#line 3315 "Zend/zend_language_scanner.c"
 yy224:
 		YYDEBUG(224, *YYCURSOR);
+		++YYCURSOR;
+		if ((yych = *YYCURSOR) == '\n') goto yy228;
+		if (yych == '\r') goto yy229;
+yy225:
+		YYDEBUG(225, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1776 "Zend/zend_language_scanner.l"
 		{
 	if (CG(asp_tags)) {
 		BEGIN(INITIAL);
@@ -3222,55 +3333,61 @@ yy224:
 		return yytext[0];
 	}
 }
-yy225:
-		YYDEBUG(225, *YYCURSOR);
-		++YYCURSOR;
+#line 3337 "Zend/zend_language_scanner.c"
+yy226:
 		YYDEBUG(226, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(227, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1233 "Zend/zend_language_scanner.l"
 		{
 	return T_MOD_EQUAL;
 }
-yy227:
-		YYDEBUG(227, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy224;
+#line 3347 "Zend/zend_language_scanner.c"
 yy228:
 		YYDEBUG(228, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '\n') goto yy227;
-		goto yy224;
+		goto yy225;
 yy229:
 		YYDEBUG(229, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == '\n') goto yy228;
+		goto yy225;
+yy230:
+		YYDEBUG(230, *YYCURSOR);
 		yyaccept = 3;
 		YYMARKER = ++YYCURSOR;
 		YYFILL(3);
 		yych = *YYCURSOR;
-		YYDEBUG(230, *YYCURSOR);
+		YYDEBUG(231, *YYCURSOR);
 		if (yych <= 'D') {
-			if (yych <= '/') goto yy189;
-			if (yych <= '9') goto yy229;
-			goto yy189;
+			if (yych <= '/') goto yy190;
+			if (yych <= '9') goto yy230;
+			goto yy190;
 		} else {
-			if (yych <= 'E') goto yy192;
-			if (yych == 'e') goto yy192;
-			goto yy189;
+			if (yych <= 'E') goto yy193;
+			if (yych == 'e') goto yy193;
+			goto yy190;
 		}
-yy231:
-		YYDEBUG(231, *YYCURSOR);
-		++YYCURSOR;
+yy232:
 		YYDEBUG(232, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(233, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1229 "Zend/zend_language_scanner.l"
 		{
 	return T_CONCAT_EQUAL;
 }
-yy233:
-		YYDEBUG(233, *YYCURSOR);
-		yyaccept = 4;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if (yych == '*') goto yy238;
+#line 3382 "Zend/zend_language_scanner.c"
 yy234:
 		YYDEBUG(234, *YYCURSOR);
+		yyaccept = 4;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if (yych == '*') goto yy239;
+yy235:
+		YYDEBUG(235, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1733 "Zend/zend_language_scanner.l"
 		{
 	int doc_com;
 
@@ -3304,261 +3421,281 @@ yy234:
 
 	return T_COMMENT;
 }
-yy235:
-		YYDEBUG(235, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy176;
+#line 3425 "Zend/zend_language_scanner.c"
 yy236:
 		YYDEBUG(236, *YYCURSOR);
-		++YYCURSOR;
+		yych = *++YYCURSOR;
+		goto yy177;
+yy237:
 		YYDEBUG(237, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(238, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1225 "Zend/zend_language_scanner.l"
 		{
 	return T_DIV_EQUAL;
 }
-yy238:
-		YYDEBUG(238, *YYCURSOR);
+#line 3439 "Zend/zend_language_scanner.c"
+yy239:
+		YYDEBUG(239, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yybm[0+yych] & 64) {
-			goto yy239;
+			goto yy240;
 		}
-		goto yy193;
-yy239:
-		YYDEBUG(239, *YYCURSOR);
+		goto yy194;
+yy240:
+		YYDEBUG(240, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(240, *YYCURSOR);
+		YYDEBUG(241, *YYCURSOR);
 		if (yybm[0+yych] & 64) {
-			goto yy239;
+			goto yy240;
 		}
-		goto yy234;
-yy241:
-		YYDEBUG(241, *YYCURSOR);
-		++YYCURSOR;
+		goto yy235;
+yy242:
 		YYDEBUG(242, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(243, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1221 "Zend/zend_language_scanner.l"
 		{
 	return T_MUL_EQUAL;
 }
-yy243:
-		YYDEBUG(243, *YYCURSOR);
-		++YYCURSOR;
-		if ((yych = *YYCURSOR) == '=') goto yy247;
+#line 3466 "Zend/zend_language_scanner.c"
+yy244:
 		YYDEBUG(244, *YYCURSOR);
+		++YYCURSOR;
+		if ((yych = *YYCURSOR) == '=') goto yy248;
+		YYDEBUG(245, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1281 "Zend/zend_language_scanner.l"
 		{
 	return T_SR;
 }
-yy245:
-		YYDEBUG(245, *YYCURSOR);
-		++YYCURSOR;
+#line 3477 "Zend/zend_language_scanner.c"
+yy246:
 		YYDEBUG(246, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(247, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1209 "Zend/zend_language_scanner.l"
 		{
 	return T_IS_GREATER_OR_EQUAL;
 }
-yy247:
-		YYDEBUG(247, *YYCURSOR);
-		++YYCURSOR;
+#line 3487 "Zend/zend_language_scanner.c"
+yy248:
 		YYDEBUG(248, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(249, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1241 "Zend/zend_language_scanner.l"
 		{
 	return T_SR_EQUAL;
 }
-yy249:
-		YYDEBUG(249, *YYCURSOR);
-		yyaccept = 5;
-		yych = *(YYMARKER = ++YYCURSOR);
-		if (yych <= ';') goto yy250;
-		if (yych <= '<') goto yy265;
-		if (yych <= '=') goto yy263;
+#line 3497 "Zend/zend_language_scanner.c"
 yy250:
 		YYDEBUG(250, *YYCURSOR);
+		yyaccept = 5;
+		yych = *(YYMARKER = ++YYCURSOR);
+		if (yych <= ';') goto yy251;
+		if (yych <= '<') goto yy266;
+		if (yych <= '=') goto yy264;
+yy251:
+		YYDEBUG(251, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1277 "Zend/zend_language_scanner.l"
 		{
 	return T_SL;
 }
-yy251:
-		YYDEBUG(251, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy256;
-		if (yych == 's') goto yy256;
-		goto yy193;
+#line 3512 "Zend/zend_language_scanner.c"
 yy252:
 		YYDEBUG(252, *YYCURSOR);
-		++YYCURSOR;
+		yych = *++YYCURSOR;
+		if (yych == 'S') goto yy257;
+		if (yych == 's') goto yy257;
+		goto yy194;
+yy253:
 		YYDEBUG(253, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(254, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1205 "Zend/zend_language_scanner.l"
 		{
 	return T_IS_SMALLER_OR_EQUAL;
 }
-yy254:
-		YYDEBUG(254, *YYCURSOR);
-		++YYCURSOR;
+#line 3528 "Zend/zend_language_scanner.c"
 yy255:
 		YYDEBUG(255, *YYCURSOR);
+		++YYCURSOR;
+yy256:
+		YYDEBUG(256, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1201 "Zend/zend_language_scanner.l"
 		{
 	return T_IS_NOT_EQUAL;
 }
-yy256:
-		YYDEBUG(256, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy257;
-		if (yych != 'c') goto yy193;
+#line 3539 "Zend/zend_language_scanner.c"
 yy257:
 		YYDEBUG(257, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy258;
-		if (yych != 'r') goto yy193;
+		if (yych == 'C') goto yy258;
+		if (yych != 'c') goto yy194;
 yy258:
 		YYDEBUG(258, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy259;
-		if (yych != 'i') goto yy193;
+		if (yych == 'R') goto yy259;
+		if (yych != 'r') goto yy194;
 yy259:
 		YYDEBUG(259, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'P') goto yy260;
-		if (yych != 'p') goto yy193;
+		if (yych == 'I') goto yy260;
+		if (yych != 'i') goto yy194;
 yy260:
 		YYDEBUG(260, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy261;
-		if (yych != 't') goto yy193;
+		if (yych == 'P') goto yy261;
+		if (yych != 'p') goto yy194;
 yy261:
 		YYDEBUG(261, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy262;
+		if (yych != 't') goto yy194;
+yy262:
+		YYDEBUG(262, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(3);
 		yych = *YYCURSOR;
-		YYDEBUG(262, *YYCURSOR);
+		YYDEBUG(263, *YYCURSOR);
 		if (yych <= '\r') {
-			if (yych <= 0x08) goto yy193;
-			if (yych <= '\n') goto yy261;
-			if (yych <= '\f') goto yy193;
-			goto yy261;
+			if (yych <= 0x08) goto yy194;
+			if (yych <= '\n') goto yy262;
+			if (yych <= '\f') goto yy194;
+			goto yy262;
 		} else {
 			if (yych <= ' ') {
-				if (yych <= 0x1F) goto yy193;
-				goto yy261;
+				if (yych <= 0x1F) goto yy194;
+				goto yy262;
 			} else {
-				if (yych == '>') goto yy201;
-				goto yy193;
+				if (yych == '>') goto yy202;
+				goto yy194;
 			}
 		}
-yy263:
-		YYDEBUG(263, *YYCURSOR);
-		++YYCURSOR;
+yy264:
 		YYDEBUG(264, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(265, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1237 "Zend/zend_language_scanner.l"
 		{
 	return T_SL_EQUAL;
 }
-yy265:
-		YYDEBUG(265, *YYCURSOR);
+#line 3594 "Zend/zend_language_scanner.c"
+yy266:
+		YYDEBUG(266, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(2);
 		yych = *YYCURSOR;
-		YYDEBUG(266, *YYCURSOR);
+		YYDEBUG(267, *YYCURSOR);
 		if (yybm[0+yych] & 128) {
-			goto yy265;
+			goto yy266;
 		}
 		if (yych <= 'Z') {
 			if (yych <= '&') {
-				if (yych == '"') goto yy270;
-				goto yy193;
+				if (yych == '"') goto yy271;
+				goto yy194;
 			} else {
-				if (yych <= '\'') goto yy269;
-				if (yych <= '@') goto yy193;
+				if (yych <= '\'') goto yy270;
+				if (yych <= '@') goto yy194;
 			}
 		} else {
 			if (yych <= '`') {
-				if (yych != '_') goto yy193;
+				if (yych != '_') goto yy194;
 			} else {
-				if (yych <= 'z') goto yy267;
-				if (yych <= '~') goto yy193;
+				if (yych <= 'z') goto yy268;
+				if (yych <= '~') goto yy194;
 			}
 		}
-yy267:
-		YYDEBUG(267, *YYCURSOR);
+yy268:
+		YYDEBUG(268, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(2);
 		yych = *YYCURSOR;
-		YYDEBUG(268, *YYCURSOR);
+		YYDEBUG(269, *YYCURSOR);
 		if (yych <= '@') {
 			if (yych <= '\f') {
-				if (yych == '\n') goto yy274;
-				goto yy193;
+				if (yych == '\n') goto yy275;
+				goto yy194;
 			} else {
-				if (yych <= '\r') goto yy276;
-				if (yych <= '/') goto yy193;
-				if (yych <= '9') goto yy267;
-				goto yy193;
+				if (yych <= '\r') goto yy277;
+				if (yych <= '/') goto yy194;
+				if (yych <= '9') goto yy268;
+				goto yy194;
 			}
 		} else {
 			if (yych <= '_') {
-				if (yych <= 'Z') goto yy267;
-				if (yych <= '^') goto yy193;
-				goto yy267;
+				if (yych <= 'Z') goto yy268;
+				if (yych <= '^') goto yy194;
+				goto yy268;
 			} else {
-				if (yych <= '`') goto yy193;
-				if (yych <= 'z') goto yy267;
-				if (yych <= '~') goto yy193;
-				goto yy267;
+				if (yych <= '`') goto yy194;
+				if (yych <= 'z') goto yy268;
+				if (yych <= '~') goto yy194;
+				goto yy268;
 			}
 		}
-yy269:
-		YYDEBUG(269, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == '\'') goto yy193;
-		if (yych <= '/') goto yy278;
-		if (yych <= '9') goto yy193;
-		goto yy278;
 yy270:
 		YYDEBUG(270, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '"') goto yy193;
-		if (yych <= '/') goto yy272;
-		if (yych <= '9') goto yy193;
-		goto yy272;
+		if (yych == '\'') goto yy194;
+		if (yych <= '/') goto yy279;
+		if (yych <= '9') goto yy194;
+		goto yy279;
 yy271:
 		YYDEBUG(271, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == '"') goto yy194;
+		if (yych <= '/') goto yy273;
+		if (yych <= '9') goto yy194;
+		goto yy273;
+yy272:
+		YYDEBUG(272, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(3);
 		yych = *YYCURSOR;
-yy272:
-		YYDEBUG(272, *YYCURSOR);
+yy273:
+		YYDEBUG(273, *YYCURSOR);
 		if (yych <= 'Z') {
 			if (yych <= '/') {
-				if (yych != '"') goto yy193;
+				if (yych != '"') goto yy194;
 			} else {
-				if (yych <= '9') goto yy271;
-				if (yych <= '@') goto yy193;
-				goto yy271;
+				if (yych <= '9') goto yy272;
+				if (yych <= '@') goto yy194;
+				goto yy272;
 			}
 		} else {
 			if (yych <= '`') {
-				if (yych == '_') goto yy271;
-				goto yy193;
+				if (yych == '_') goto yy272;
+				goto yy194;
 			} else {
-				if (yych <= 'z') goto yy271;
-				if (yych <= '~') goto yy193;
-				goto yy271;
+				if (yych <= 'z') goto yy272;
+				if (yych <= '~') goto yy194;
+				goto yy272;
 			}
 		}
-yy273:
-		YYDEBUG(273, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == '\n') goto yy274;
-		if (yych == '\r') goto yy276;
-		goto yy193;
 yy274:
 		YYDEBUG(274, *YYCURSOR);
-		++YYCURSOR;
+		yych = *++YYCURSOR;
+		if (yych == '\n') goto yy275;
+		if (yych == '\r') goto yy277;
+		goto yy194;
 yy275:
 		YYDEBUG(275, *YYCURSOR);
+		++YYCURSOR;
+yy276:
+		YYDEBUG(276, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1903 "Zend/zend_language_scanner.l"
 		{
 	char *s;
 	int bprefix = (yytext[0] != '<') ? 1 : 0;
@@ -3606,231 +3743,247 @@ yy275:
 
 	return T_START_HEREDOC;
 }
-yy276:
-		YYDEBUG(276, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == '\n') goto yy274;
-		goto yy275;
+#line 3747 "Zend/zend_language_scanner.c"
 yy277:
 		YYDEBUG(277, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == '\n') goto yy275;
+		goto yy276;
+yy278:
+		YYDEBUG(278, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(3);
 		yych = *YYCURSOR;
-yy278:
-		YYDEBUG(278, *YYCURSOR);
+yy279:
+		YYDEBUG(279, *YYCURSOR);
 		if (yych <= 'Z') {
 			if (yych <= '/') {
-				if (yych == '\'') goto yy273;
-				goto yy193;
+				if (yych == '\'') goto yy274;
+				goto yy194;
 			} else {
-				if (yych <= '9') goto yy277;
-				if (yych <= '@') goto yy193;
-				goto yy277;
+				if (yych <= '9') goto yy278;
+				if (yych <= '@') goto yy194;
+				goto yy278;
 			}
 		} else {
 			if (yych <= '`') {
-				if (yych == '_') goto yy277;
-				goto yy193;
+				if (yych == '_') goto yy278;
+				goto yy194;
 			} else {
-				if (yych <= 'z') goto yy277;
-				if (yych <= '~') goto yy193;
-				goto yy277;
+				if (yych <= 'z') goto yy278;
+				if (yych <= '~') goto yy194;
+				goto yy278;
 			}
 		}
-yy279:
-		YYDEBUG(279, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych != '=') goto yy255;
+yy280:
 		YYDEBUG(280, *YYCURSOR);
-		++YYCURSOR;
+		yych = *++YYCURSOR;
+		if (yych != '=') goto yy256;
 		YYDEBUG(281, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(282, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1193 "Zend/zend_language_scanner.l"
 		{
 	return T_IS_NOT_IDENTICAL;
 }
-yy282:
-		YYDEBUG(282, *YYCURSOR);
-		++YYCURSOR;
+#line 3791 "Zend/zend_language_scanner.c"
+yy283:
 		YYDEBUG(283, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(284, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1213 "Zend/zend_language_scanner.l"
 		{
 	return T_PLUS_EQUAL;
 }
-yy284:
-		YYDEBUG(284, *YYCURSOR);
-		++YYCURSOR;
+#line 3801 "Zend/zend_language_scanner.c"
+yy285:
 		YYDEBUG(285, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(286, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1181 "Zend/zend_language_scanner.l"
 		{
 	return T_INC;
 }
-yy286:
-		YYDEBUG(286, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy287;
-		if (yych != 's') goto yy186;
+#line 3811 "Zend/zend_language_scanner.c"
 yy287:
 		YYDEBUG(287, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy288;
-		if (yych != 't') goto yy186;
+		if (yych == 'S') goto yy288;
+		if (yych != 's') goto yy187;
 yy288:
 		YYDEBUG(288, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy289;
+		if (yych != 't') goto yy187;
+yy289:
+		YYDEBUG(289, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(289, *YYCURSOR);
+		YYDEBUG(290, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1173 "Zend/zend_language_scanner.l"
 		{
 	return T_LIST;
 }
-yy290:
-		YYDEBUG(290, *YYCURSOR);
-		++YYCURSOR;
-		if ((yych = *YYCURSOR) == '=') goto yy294;
+#line 3834 "Zend/zend_language_scanner.c"
+yy291:
 		YYDEBUG(291, *YYCURSOR);
+		++YYCURSOR;
+		if ((yych = *YYCURSOR) == '=') goto yy295;
+		YYDEBUG(292, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1197 "Zend/zend_language_scanner.l"
 		{
 	return T_IS_EQUAL;
 }
-yy292:
-		YYDEBUG(292, *YYCURSOR);
-		++YYCURSOR;
+#line 3845 "Zend/zend_language_scanner.c"
+yy293:
 		YYDEBUG(293, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(294, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1169 "Zend/zend_language_scanner.l"
 		{
 	return T_DOUBLE_ARROW;
 }
-yy294:
-		YYDEBUG(294, *YYCURSOR);
-		++YYCURSOR;
+#line 3855 "Zend/zend_language_scanner.c"
+yy295:
 		YYDEBUG(295, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(296, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1189 "Zend/zend_language_scanner.l"
 		{
 	return T_IS_IDENTICAL;
 }
-yy296:
-		YYDEBUG(296, *YYCURSOR);
+#line 3865 "Zend/zend_language_scanner.c"
+yy297:
+		YYDEBUG(297, *YYCURSOR);
 		yych = *++YYCURSOR;
 		YYDEBUG(-1, yych);
 		switch (yych) {
 		case 'C':
-		case 'c':	goto yy298;
+		case 'c':	goto yy299;
 		case 'D':
-		case 'd':	goto yy302;
+		case 'd':	goto yy303;
 		case 'F':
-		case 'f':	goto yy299;
+		case 'f':	goto yy300;
 		case 'H':
-		case 'h':	goto yy297;
+		case 'h':	goto yy298;
 		case 'L':
-		case 'l':	goto yy301;
+		case 'l':	goto yy302;
 		case 'M':
-		case 'm':	goto yy300;
+		case 'm':	goto yy301;
 		case 'N':
-		case 'n':	goto yy303;
-		default:	goto yy186;
+		case 'n':	goto yy304;
+		default:	goto yy187;
 		}
-yy297:
-		YYDEBUG(297, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy357;
-		if (yych == 'a') goto yy357;
-		goto yy186;
 yy298:
 		YYDEBUG(298, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy350;
-		if (yych == 'l') goto yy350;
-		goto yy186;
+		if (yych == 'A') goto yy358;
+		if (yych == 'a') goto yy358;
+		goto yy187;
 yy299:
 		YYDEBUG(299, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if (yych == 'L') goto yy351;
+		if (yych == 'l') goto yy351;
+		goto yy187;
+yy300:
+		YYDEBUG(300, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if (yych <= 'U') {
-			if (yych == 'I') goto yy334;
-			if (yych <= 'T') goto yy186;
-			goto yy335;
+			if (yych == 'I') goto yy335;
+			if (yych <= 'T') goto yy187;
+			goto yy336;
 		} else {
 			if (yych <= 'i') {
-				if (yych <= 'h') goto yy186;
-				goto yy334;
+				if (yych <= 'h') goto yy187;
+				goto yy335;
 			} else {
-				if (yych == 'u') goto yy335;
-				goto yy186;
+				if (yych == 'u') goto yy336;
+				goto yy187;
 			}
 		}
-yy300:
-		YYDEBUG(300, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy326;
-		if (yych == 'e') goto yy326;
-		goto yy186;
 yy301:
 		YYDEBUG(301, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy320;
-		if (yych == 'i') goto yy320;
-		goto yy186;
+		if (yych == 'E') goto yy327;
+		if (yych == 'e') goto yy327;
+		goto yy187;
 yy302:
 		YYDEBUG(302, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy315;
-		if (yych == 'i') goto yy315;
-		goto yy186;
+		if (yych == 'I') goto yy321;
+		if (yych == 'i') goto yy321;
+		goto yy187;
 yy303:
 		YYDEBUG(303, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy304;
-		if (yych != 'a') goto yy186;
+		if (yych == 'I') goto yy316;
+		if (yych == 'i') goto yy316;
+		goto yy187;
 yy304:
 		YYDEBUG(304, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'M') goto yy305;
-		if (yych != 'm') goto yy186;
+		if (yych == 'A') goto yy305;
+		if (yych != 'a') goto yy187;
 yy305:
 		YYDEBUG(305, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy306;
-		if (yych != 'e') goto yy186;
+		if (yych == 'M') goto yy306;
+		if (yych != 'm') goto yy187;
 yy306:
 		YYDEBUG(306, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy307;
-		if (yych != 's') goto yy186;
+		if (yych == 'E') goto yy307;
+		if (yych != 'e') goto yy187;
 yy307:
 		YYDEBUG(307, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'P') goto yy308;
-		if (yych != 'p') goto yy186;
+		if (yych == 'S') goto yy308;
+		if (yych != 's') goto yy187;
 yy308:
 		YYDEBUG(308, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy309;
-		if (yych != 'a') goto yy186;
+		if (yych == 'P') goto yy309;
+		if (yych != 'p') goto yy187;
 yy309:
 		YYDEBUG(309, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy310;
-		if (yych != 'c') goto yy186;
+		if (yych == 'A') goto yy310;
+		if (yych != 'a') goto yy187;
 yy310:
 		YYDEBUG(310, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy311;
-		if (yych != 'e') goto yy186;
+		if (yych == 'C') goto yy311;
+		if (yych != 'c') goto yy187;
 yy311:
 		YYDEBUG(311, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych == 'E') goto yy312;
+		if (yych != 'e') goto yy187;
+yy312:
 		YYDEBUG(312, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych != '_') goto yy187;
 		YYDEBUG(313, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych != '_') goto yy187;
+		YYDEBUG(314, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(314, *YYCURSOR);
+		YYDEBUG(315, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1493 "Zend/zend_language_scanner.l"
 		{
 	if (CG(current_namespace)) {
 		*zendlval = *CG(current_namespace);
@@ -3840,25 +3993,27 @@ yy311:
 	}
 	return T_NS_C;
 }
-yy315:
-		YYDEBUG(315, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy316;
-		if (yych != 'r') goto yy186;
+#line 3997 "Zend/zend_language_scanner.c"
 yy316:
 		YYDEBUG(316, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych == 'R') goto yy317;
+		if (yych != 'r') goto yy187;
+yy317:
 		YYDEBUG(317, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych != '_') goto yy187;
 		YYDEBUG(318, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych != '_') goto yy187;
+		YYDEBUG(319, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(319, *YYCURSOR);
+		YYDEBUG(320, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1466 "Zend/zend_language_scanner.l"
 		{
 	char *filename = zend_get_compiled_filename(TSRMLS_C);
 	const size_t filename_len = strlen(filename);
@@ -3885,69 +4040,73 @@ yy316:
 	zendlval->type = IS_STRING;
 	return T_DIR;
 }
-yy320:
-		YYDEBUG(320, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy321;
-		if (yych != 'n') goto yy186;
+#line 4044 "Zend/zend_language_scanner.c"
 yy321:
 		YYDEBUG(321, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy322;
-		if (yych != 'e') goto yy186;
+		if (yych == 'N') goto yy322;
+		if (yych != 'n') goto yy187;
 yy322:
 		YYDEBUG(322, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych == 'E') goto yy323;
+		if (yych != 'e') goto yy187;
+yy323:
 		YYDEBUG(323, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych != '_') goto yy187;
 		YYDEBUG(324, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych != '_') goto yy187;
+		YYDEBUG(325, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(325, *YYCURSOR);
+		YYDEBUG(326, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1448 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.lval = CG(zend_lineno);
 	zendlval->type = IS_LONG;
 	return T_LINE;
 }
-yy326:
-		YYDEBUG(326, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy327;
-		if (yych != 't') goto yy186;
+#line 4075 "Zend/zend_language_scanner.c"
 yy327:
 		YYDEBUG(327, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy328;
-		if (yych != 'h') goto yy186;
+		if (yych == 'T') goto yy328;
+		if (yych != 't') goto yy187;
 yy328:
 		YYDEBUG(328, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy329;
-		if (yych != 'o') goto yy186;
+		if (yych == 'H') goto yy329;
+		if (yych != 'h') goto yy187;
 yy329:
 		YYDEBUG(329, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'D') goto yy330;
-		if (yych != 'd') goto yy186;
+		if (yych == 'O') goto yy330;
+		if (yych != 'o') goto yy187;
 yy330:
 		YYDEBUG(330, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych == 'D') goto yy331;
+		if (yych != 'd') goto yy187;
+yy331:
 		YYDEBUG(331, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych != '_') goto yy187;
 		YYDEBUG(332, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych != '_') goto yy187;
+		YYDEBUG(333, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(333, *YYCURSOR);
+		YYDEBUG(334, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1427 "Zend/zend_language_scanner.l"
 		{
 	char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;
 	char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;
@@ -3968,56 +4127,58 @@ yy330:
 	zendlval->type = IS_STRING;
 	return T_METHOD_C;
 }
-yy334:
-		YYDEBUG(334, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy345;
-		if (yych == 'l') goto yy345;
-		goto yy186;
+#line 4131 "Zend/zend_language_scanner.c"
 yy335:
 		YYDEBUG(335, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy336;
-		if (yych != 'n') goto yy186;
+		if (yych == 'L') goto yy346;
+		if (yych == 'l') goto yy346;
+		goto yy187;
 yy336:
 		YYDEBUG(336, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy337;
-		if (yych != 'c') goto yy186;
+		if (yych == 'N') goto yy337;
+		if (yych != 'n') goto yy187;
 yy337:
 		YYDEBUG(337, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy338;
-		if (yych != 't') goto yy186;
+		if (yych == 'C') goto yy338;
+		if (yych != 'c') goto yy187;
 yy338:
 		YYDEBUG(338, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy339;
-		if (yych != 'i') goto yy186;
+		if (yych == 'T') goto yy339;
+		if (yych != 't') goto yy187;
 yy339:
 		YYDEBUG(339, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy340;
-		if (yych != 'o') goto yy186;
+		if (yych == 'I') goto yy340;
+		if (yych != 'i') goto yy187;
 yy340:
 		YYDEBUG(340, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy341;
-		if (yych != 'n') goto yy186;
+		if (yych == 'O') goto yy341;
+		if (yych != 'o') goto yy187;
 yy341:
 		YYDEBUG(341, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych == 'N') goto yy342;
+		if (yych != 'n') goto yy187;
+yy342:
 		YYDEBUG(342, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych != '_') goto yy187;
 		YYDEBUG(343, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych != '_') goto yy187;
+		YYDEBUG(344, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(344, *YYCURSOR);
+		YYDEBUG(345, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1411 "Zend/zend_language_scanner.l"
 		{
 	char *func_name = NULL;
 
@@ -4033,25 +4194,27 @@ yy341:
 	zendlval->type = IS_STRING;
 	return T_FUNC_C;
 }
-yy345:
-		YYDEBUG(345, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy346;
-		if (yych != 'e') goto yy186;
+#line 4198 "Zend/zend_language_scanner.c"
 yy346:
 		YYDEBUG(346, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych == 'E') goto yy347;
+		if (yych != 'e') goto yy187;
+yy347:
 		YYDEBUG(347, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych != '_') goto yy187;
 		YYDEBUG(348, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych != '_') goto yy187;
+		YYDEBUG(349, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(349, *YYCURSOR);
+		YYDEBUG(350, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1454 "Zend/zend_language_scanner.l"
 		{
 	char *filename = zend_get_compiled_filename(TSRMLS_C);
 
@@ -4063,35 +4226,37 @@ yy346:
 	zendlval->type = IS_STRING;
 	return T_FILE;
 }
-yy350:
-		YYDEBUG(350, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy351;
-		if (yych != 'a') goto yy186;
+#line 4230 "Zend/zend_language_scanner.c"
 yy351:
 		YYDEBUG(351, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy352;
-		if (yych != 's') goto yy186;
+		if (yych == 'A') goto yy352;
+		if (yych != 'a') goto yy187;
 yy352:
 		YYDEBUG(352, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych == 'S') goto yy353;
-		if (yych != 's') goto yy186;
+		if (yych != 's') goto yy187;
 yy353:
 		YYDEBUG(353, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych == 'S') goto yy354;
+		if (yych != 's') goto yy187;
+yy354:
 		YYDEBUG(354, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych != '_') goto yy187;
 		YYDEBUG(355, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych != '_') goto yy187;
+		YYDEBUG(356, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(356, *YYCURSOR);
+		YYDEBUG(357, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1395 "Zend/zend_language_scanner.l"
 		{
 	char *class_name = NULL;
 
@@ -4107,2403 +4272,2556 @@ yy353:
 	zendlval->type = IS_STRING;
 	return T_CLASS_C;
 }
-yy357:
-		YYDEBUG(357, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy358;
-		if (yych != 'l') goto yy186;
+#line 4276 "Zend/zend_language_scanner.c"
 yy358:
 		YYDEBUG(358, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy359;
-		if (yych != 't') goto yy186;
+		if (yych == 'L') goto yy359;
+		if (yych != 'l') goto yy187;
 yy359:
 		YYDEBUG(359, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych != '_') goto yy186;
+		if (yych == 'T') goto yy360;
+		if (yych != 't') goto yy187;
+yy360:
 		YYDEBUG(360, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy361;
-		if (yych != 'c') goto yy186;
-yy361:
+		if (yych != '_') goto yy187;
 		YYDEBUG(361, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy362;
-		if (yych != 'o') goto yy186;
+		if (yych == 'C') goto yy362;
+		if (yych != 'c') goto yy187;
 yy362:
 		YYDEBUG(362, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'M') goto yy363;
-		if (yych != 'm') goto yy186;
+		if (yych == 'O') goto yy363;
+		if (yych != 'o') goto yy187;
 yy363:
 		YYDEBUG(363, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'P') goto yy364;
-		if (yych != 'p') goto yy186;
+		if (yych == 'M') goto yy364;
+		if (yych != 'm') goto yy187;
 yy364:
 		YYDEBUG(364, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy365;
-		if (yych != 'i') goto yy186;
+		if (yych == 'P') goto yy365;
+		if (yych != 'p') goto yy187;
 yy365:
 		YYDEBUG(365, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy366;
-		if (yych != 'l') goto yy186;
+		if (yych == 'I') goto yy366;
+		if (yych != 'i') goto yy187;
 yy366:
 		YYDEBUG(366, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy367;
-		if (yych != 'e') goto yy186;
+		if (yych == 'L') goto yy367;
+		if (yych != 'l') goto yy187;
 yy367:
 		YYDEBUG(367, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy368;
-		if (yych != 'r') goto yy186;
+		if (yych == 'E') goto yy368;
+		if (yych != 'e') goto yy187;
 yy368:
 		YYDEBUG(368, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'R') goto yy369;
+		if (yych != 'r') goto yy187;
+yy369:
+		YYDEBUG(369, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(369, *YYCURSOR);
+		YYDEBUG(370, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1137 "Zend/zend_language_scanner.l"
 		{
 	return T_HALT_COMPILER;
 }
-yy370:
-		YYDEBUG(370, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy374;
-		if (yych == 's') goto yy374;
-		goto yy186;
+#line 4342 "Zend/zend_language_scanner.c"
 yy371:
 		YYDEBUG(371, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy372;
-		if (yych != 'e') goto yy186;
+		if (yych == 'S') goto yy375;
+		if (yych == 's') goto yy375;
+		goto yy187;
 yy372:
 		YYDEBUG(372, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy373;
+		if (yych != 'e') goto yy187;
+yy373:
+		YYDEBUG(373, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(373, *YYCURSOR);
+		YYDEBUG(374, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1121 "Zend/zend_language_scanner.l"
 		{
 	return T_USE;
 }
-yy374:
-		YYDEBUG(374, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy375;
-		if (yych != 'e') goto yy186;
+#line 4366 "Zend/zend_language_scanner.c"
 yy375:
 		YYDEBUG(375, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy376;
-		if (yych != 't') goto yy186;
+		if (yych == 'E') goto yy376;
+		if (yych != 'e') goto yy187;
 yy376:
 		YYDEBUG(376, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy377;
+		if (yych != 't') goto yy187;
+yy377:
+		YYDEBUG(377, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(377, *YYCURSOR);
+		YYDEBUG(378, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1165 "Zend/zend_language_scanner.l"
 		{
 	return T_UNSET;
 }
-yy378:
-		YYDEBUG(378, *YYCURSOR);
+#line 4389 "Zend/zend_language_scanner.c"
+yy379:
+		YYDEBUG(379, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(7);
 		yych = *YYCURSOR;
-yy379:
-		YYDEBUG(379, *YYCURSOR);
+yy380:
+		YYDEBUG(380, *YYCURSOR);
 		if (yych <= 'S') {
 			if (yych <= 'D') {
 				if (yych <= ' ') {
-					if (yych == '\t') goto yy378;
-					if (yych <= 0x1F) goto yy193;
-					goto yy378;
+					if (yych == '\t') goto yy379;
+					if (yych <= 0x1F) goto yy194;
+					goto yy379;
 				} else {
 					if (yych <= 'A') {
-						if (yych <= '@') goto yy193;
-						goto yy383;
+						if (yych <= '@') goto yy194;
+						goto yy384;
 					} else {
-						if (yych <= 'B') goto yy381;
-						if (yych <= 'C') goto yy193;
-						goto yy386;
+						if (yych <= 'B') goto yy382;
+						if (yych <= 'C') goto yy194;
+						goto yy387;
 					}
 				}
 			} else {
 				if (yych <= 'I') {
-					if (yych == 'F') goto yy387;
-					if (yych <= 'H') goto yy193;
-					goto yy388;
+					if (yych == 'F') goto yy388;
+					if (yych <= 'H') goto yy194;
+					goto yy389;
 				} else {
 					if (yych <= 'O') {
-						if (yych <= 'N') goto yy193;
-						goto yy382;
+						if (yych <= 'N') goto yy194;
+						goto yy383;
 					} else {
-						if (yych <= 'Q') goto yy193;
-						if (yych <= 'R') goto yy385;
-						goto yy384;
+						if (yych <= 'Q') goto yy194;
+						if (yych <= 'R') goto yy386;
+						goto yy385;
 					}
 				}
 			}
 		} else {
 			if (yych <= 'f') {
 				if (yych <= 'a') {
-					if (yych == 'U') goto yy380;
-					if (yych <= '`') goto yy193;
-					goto yy383;
+					if (yych == 'U') goto yy381;
+					if (yych <= '`') goto yy194;
+					goto yy384;
 				} else {
 					if (yych <= 'c') {
-						if (yych <= 'b') goto yy381;
-						goto yy193;
+						if (yych <= 'b') goto yy382;
+						goto yy194;
 					} else {
-						if (yych <= 'd') goto yy386;
-						if (yych <= 'e') goto yy193;
-						goto yy387;
+						if (yych <= 'd') goto yy387;
+						if (yych <= 'e') goto yy194;
+						goto yy388;
 					}
 				}
 			} else {
 				if (yych <= 'q') {
 					if (yych <= 'i') {
-						if (yych <= 'h') goto yy193;
-						goto yy388;
+						if (yych <= 'h') goto yy194;
+						goto yy389;
 					} else {
-						if (yych == 'o') goto yy382;
-						goto yy193;
+						if (yych == 'o') goto yy383;
+						goto yy194;
 					}
 				} else {
 					if (yych <= 's') {
-						if (yych <= 'r') goto yy385;
-						goto yy384;
+						if (yych <= 'r') goto yy386;
+						goto yy385;
 					} else {
-						if (yych != 'u') goto yy193;
+						if (yych != 'u') goto yy194;
 					}
 				}
 			}
 		}
-yy380:
-		YYDEBUG(380, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy451;
-		if (yych == 'n') goto yy451;
-		goto yy193;
 yy381:
 		YYDEBUG(381, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if (yych == 'N') goto yy452;
+		if (yych == 'n') goto yy452;
+		goto yy194;
+yy382:
+		YYDEBUG(382, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if (yych <= 'O') {
-			if (yych == 'I') goto yy434;
-			if (yych <= 'N') goto yy193;
-			goto yy435;
+			if (yych == 'I') goto yy435;
+			if (yych <= 'N') goto yy194;
+			goto yy436;
 		} else {
 			if (yych <= 'i') {
-				if (yych <= 'h') goto yy193;
-				goto yy434;
+				if (yych <= 'h') goto yy194;
+				goto yy435;
 			} else {
-				if (yych == 'o') goto yy435;
-				goto yy193;
+				if (yych == 'o') goto yy436;
+				goto yy194;
 			}
 		}
-yy382:
-		YYDEBUG(382, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'B') goto yy426;
-		if (yych == 'b') goto yy426;
-		goto yy193;
 yy383:
 		YYDEBUG(383, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy419;
-		if (yych == 'r') goto yy419;
-		goto yy193;
+		if (yych == 'B') goto yy427;
+		if (yych == 'b') goto yy427;
+		goto yy194;
 yy384:
 		YYDEBUG(384, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy411;
-		if (yych == 't') goto yy411;
-		goto yy193;
+		if (yych == 'R') goto yy420;
+		if (yych == 'r') goto yy420;
+		goto yy194;
 yy385:
 		YYDEBUG(385, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy409;
-		if (yych == 'e') goto yy409;
-		goto yy193;
+		if (yych == 'T') goto yy412;
+		if (yych == 't') goto yy412;
+		goto yy194;
 yy386:
 		YYDEBUG(386, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy405;
-		if (yych == 'o') goto yy405;
-		goto yy193;
+		if (yych == 'E') goto yy410;
+		if (yych == 'e') goto yy410;
+		goto yy194;
 yy387:
 		YYDEBUG(387, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy398;
-		if (yych == 'l') goto yy398;
-		goto yy193;
+		if (yych == 'O') goto yy406;
+		if (yych == 'o') goto yy406;
+		goto yy194;
 yy388:
 		YYDEBUG(388, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy389;
-		if (yych != 'n') goto yy193;
+		if (yych == 'L') goto yy399;
+		if (yych == 'l') goto yy399;
+		goto yy194;
 yy389:
 		YYDEBUG(389, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy390;
-		if (yych != 't') goto yy193;
+		if (yych == 'N') goto yy390;
+		if (yych != 'n') goto yy194;
 yy390:
 		YYDEBUG(390, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy391;
-		if (yych != 'e') goto yy393;
+		if (yych == 'T') goto yy391;
+		if (yych != 't') goto yy194;
 yy391:
 		YYDEBUG(391, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'G') goto yy396;
-		if (yych == 'g') goto yy396;
-		goto yy193;
+		if (yych == 'E') goto yy392;
+		if (yych != 'e') goto yy394;
 yy392:
 		YYDEBUG(392, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'G') goto yy397;
+		if (yych == 'g') goto yy397;
+		goto yy194;
+yy393:
+		YYDEBUG(393, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy393:
-		YYDEBUG(393, *YYCURSOR);
+yy394:
+		YYDEBUG(394, *YYCURSOR);
 		if (yych <= 0x1F) {
-			if (yych == '\t') goto yy392;
-			goto yy193;
+			if (yych == '\t') goto yy393;
+			goto yy194;
 		} else {
-			if (yych <= ' ') goto yy392;
-			if (yych != ')') goto yy193;
+			if (yych <= ' ') goto yy393;
+			if (yych != ')') goto yy194;
 		}
-		YYDEBUG(394, *YYCURSOR);
-		++YYCURSOR;
 		YYDEBUG(395, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(396, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1065 "Zend/zend_language_scanner.l"
 		{
 	return T_INT_CAST;
 }
-yy396:
-		YYDEBUG(396, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy397;
-		if (yych != 'e') goto yy193;
+#line 4565 "Zend/zend_language_scanner.c"
 yy397:
 		YYDEBUG(397, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy392;
-		if (yych == 'r') goto yy392;
-		goto yy193;
+		if (yych == 'E') goto yy398;
+		if (yych != 'e') goto yy194;
 yy398:
 		YYDEBUG(398, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy399;
-		if (yych != 'o') goto yy193;
+		if (yych == 'R') goto yy393;
+		if (yych == 'r') goto yy393;
+		goto yy194;
 yy399:
 		YYDEBUG(399, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy400;
-		if (yych != 'a') goto yy193;
+		if (yych == 'O') goto yy400;
+		if (yych != 'o') goto yy194;
 yy400:
 		YYDEBUG(400, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy401;
-		if (yych != 't') goto yy193;
+		if (yych == 'A') goto yy401;
+		if (yych != 'a') goto yy194;
 yy401:
 		YYDEBUG(401, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy402;
+		if (yych != 't') goto yy194;
+yy402:
+		YYDEBUG(402, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(402, *YYCURSOR);
+		YYDEBUG(403, *YYCURSOR);
 		if (yych <= 0x1F) {
-			if (yych == '\t') goto yy401;
-			goto yy193;
+			if (yych == '\t') goto yy402;
+			goto yy194;
 		} else {
-			if (yych <= ' ') goto yy401;
-			if (yych != ')') goto yy193;
+			if (yych <= ' ') goto yy402;
+			if (yych != ')') goto yy194;
 		}
-		YYDEBUG(403, *YYCURSOR);
-		++YYCURSOR;
 		YYDEBUG(404, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(405, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1069 "Zend/zend_language_scanner.l"
 		{
 	return T_DOUBLE_CAST;
 }
-yy405:
-		YYDEBUG(405, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'U') goto yy406;
-		if (yych != 'u') goto yy193;
+#line 4613 "Zend/zend_language_scanner.c"
 yy406:
 		YYDEBUG(406, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'B') goto yy407;
-		if (yych != 'b') goto yy193;
+		if (yych == 'U') goto yy407;
+		if (yych != 'u') goto yy194;
 yy407:
 		YYDEBUG(407, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy408;
-		if (yych != 'l') goto yy193;
+		if (yych == 'B') goto yy408;
+		if (yych != 'b') goto yy194;
 yy408:
 		YYDEBUG(408, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy401;
-		if (yych == 'e') goto yy401;
-		goto yy193;
+		if (yych == 'L') goto yy409;
+		if (yych != 'l') goto yy194;
 yy409:
 		YYDEBUG(409, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy410;
-		if (yych != 'a') goto yy193;
+		if (yych == 'E') goto yy402;
+		if (yych == 'e') goto yy402;
+		goto yy194;
 yy410:
 		YYDEBUG(410, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy401;
-		if (yych == 'l') goto yy401;
-		goto yy193;
+		if (yych == 'A') goto yy411;
+		if (yych != 'a') goto yy194;
 yy411:
 		YYDEBUG(411, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy412;
-		if (yych != 'r') goto yy193;
+		if (yych == 'L') goto yy402;
+		if (yych == 'l') goto yy402;
+		goto yy194;
 yy412:
 		YYDEBUG(412, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy413;
-		if (yych != 'i') goto yy193;
+		if (yych == 'R') goto yy413;
+		if (yych != 'r') goto yy194;
 yy413:
 		YYDEBUG(413, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy414;
-		if (yych != 'n') goto yy193;
+		if (yych == 'I') goto yy414;
+		if (yych != 'i') goto yy194;
 yy414:
 		YYDEBUG(414, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'G') goto yy415;
-		if (yych != 'g') goto yy193;
+		if (yych == 'N') goto yy415;
+		if (yych != 'n') goto yy194;
 yy415:
 		YYDEBUG(415, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'G') goto yy416;
+		if (yych != 'g') goto yy194;
+yy416:
+		YYDEBUG(416, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(416, *YYCURSOR);
+		YYDEBUG(417, *YYCURSOR);
 		if (yych <= 0x1F) {
-			if (yych == '\t') goto yy415;
-			goto yy193;
+			if (yych == '\t') goto yy416;
+			goto yy194;
 		} else {
-			if (yych <= ' ') goto yy415;
-			if (yych != ')') goto yy193;
+			if (yych <= ' ') goto yy416;
+			if (yych != ')') goto yy194;
 		}
-		YYDEBUG(417, *YYCURSOR);
-		++YYCURSOR;
 		YYDEBUG(418, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(419, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1073 "Zend/zend_language_scanner.l"
 		{
 	return T_STRING_CAST;
 }
-yy419:
-		YYDEBUG(419, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy420;
-		if (yych != 'r') goto yy193;
+#line 4687 "Zend/zend_language_scanner.c"
 yy420:
 		YYDEBUG(420, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy421;
-		if (yych != 'a') goto yy193;
+		if (yych == 'R') goto yy421;
+		if (yych != 'r') goto yy194;
 yy421:
 		YYDEBUG(421, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'Y') goto yy422;
-		if (yych != 'y') goto yy193;
+		if (yych == 'A') goto yy422;
+		if (yych != 'a') goto yy194;
 yy422:
 		YYDEBUG(422, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'Y') goto yy423;
+		if (yych != 'y') goto yy194;
+yy423:
+		YYDEBUG(423, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(423, *YYCURSOR);
+		YYDEBUG(424, *YYCURSOR);
 		if (yych <= 0x1F) {
-			if (yych == '\t') goto yy422;
-			goto yy193;
+			if (yych == '\t') goto yy423;
+			goto yy194;
 		} else {
-			if (yych <= ' ') goto yy422;
-			if (yych != ')') goto yy193;
+			if (yych <= ' ') goto yy423;
+			if (yych != ')') goto yy194;
 		}
-		YYDEBUG(424, *YYCURSOR);
-		++YYCURSOR;
 		YYDEBUG(425, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(426, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1081 "Zend/zend_language_scanner.l"
 		{
 	return T_ARRAY_CAST;
 }
-yy426:
-		YYDEBUG(426, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'J') goto yy427;
-		if (yych != 'j') goto yy193;
+#line 4724 "Zend/zend_language_scanner.c"
 yy427:
 		YYDEBUG(427, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy428;
-		if (yych != 'e') goto yy193;
+		if (yych == 'J') goto yy428;
+		if (yych != 'j') goto yy194;
 yy428:
 		YYDEBUG(428, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy429;
-		if (yych != 'c') goto yy193;
+		if (yych == 'E') goto yy429;
+		if (yych != 'e') goto yy194;
 yy429:
 		YYDEBUG(429, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy430;
-		if (yych != 't') goto yy193;
+		if (yych == 'C') goto yy430;
+		if (yych != 'c') goto yy194;
 yy430:
 		YYDEBUG(430, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy431;
+		if (yych != 't') goto yy194;
+yy431:
+		YYDEBUG(431, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(431, *YYCURSOR);
+		YYDEBUG(432, *YYCURSOR);
 		if (yych <= 0x1F) {
-			if (yych == '\t') goto yy430;
-			goto yy193;
+			if (yych == '\t') goto yy431;
+			goto yy194;
 		} else {
-			if (yych <= ' ') goto yy430;
-			if (yych != ')') goto yy193;
+			if (yych <= ' ') goto yy431;
+			if (yych != ')') goto yy194;
 		}
-		YYDEBUG(432, *YYCURSOR);
-		++YYCURSOR;
 		YYDEBUG(433, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(434, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1085 "Zend/zend_language_scanner.l"
 		{
 	return T_OBJECT_CAST;
 }
-yy434:
-		YYDEBUG(434, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy444;
-		if (yych == 'n') goto yy444;
-		goto yy193;
+#line 4766 "Zend/zend_language_scanner.c"
 yy435:
 		YYDEBUG(435, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy436;
-		if (yych != 'o') goto yy193;
+		if (yych == 'N') goto yy445;
+		if (yych == 'n') goto yy445;
+		goto yy194;
 yy436:
 		YYDEBUG(436, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy437;
-		if (yych != 'l') goto yy193;
+		if (yych == 'O') goto yy437;
+		if (yych != 'o') goto yy194;
 yy437:
 		YYDEBUG(437, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy442;
-		if (yych == 'e') goto yy442;
-		goto yy439;
+		if (yych == 'L') goto yy438;
+		if (yych != 'l') goto yy194;
 yy438:
 		YYDEBUG(438, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy443;
+		if (yych == 'e') goto yy443;
+		goto yy440;
+yy439:
+		YYDEBUG(439, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy439:
-		YYDEBUG(439, *YYCURSOR);
+yy440:
+		YYDEBUG(440, *YYCURSOR);
 		if (yych <= 0x1F) {
-			if (yych == '\t') goto yy438;
-			goto yy193;
+			if (yych == '\t') goto yy439;
+			goto yy194;
 		} else {
-			if (yych <= ' ') goto yy438;
-			if (yych != ')') goto yy193;
+			if (yych <= ' ') goto yy439;
+			if (yych != ')') goto yy194;
 		}
-		YYDEBUG(440, *YYCURSOR);
-		++YYCURSOR;
 		YYDEBUG(441, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(442, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1089 "Zend/zend_language_scanner.l"
 		{
 	return T_BOOL_CAST;
 }
-yy442:
-		YYDEBUG(442, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy443;
-		if (yych != 'a') goto yy193;
+#line 4811 "Zend/zend_language_scanner.c"
 yy443:
 		YYDEBUG(443, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy438;
-		if (yych == 'n') goto yy438;
-		goto yy193;
+		if (yych == 'A') goto yy444;
+		if (yych != 'a') goto yy194;
 yy444:
 		YYDEBUG(444, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy445;
-		if (yych != 'a') goto yy193;
+		if (yych == 'N') goto yy439;
+		if (yych == 'n') goto yy439;
+		goto yy194;
 yy445:
 		YYDEBUG(445, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy446;
-		if (yych != 'r') goto yy193;
+		if (yych == 'A') goto yy446;
+		if (yych != 'a') goto yy194;
 yy446:
 		YYDEBUG(446, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'Y') goto yy447;
-		if (yych != 'y') goto yy193;
+		if (yych == 'R') goto yy447;
+		if (yych != 'r') goto yy194;
 yy447:
 		YYDEBUG(447, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'Y') goto yy448;
+		if (yych != 'y') goto yy194;
+yy448:
+		YYDEBUG(448, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(448, *YYCURSOR);
+		YYDEBUG(449, *YYCURSOR);
 		if (yych <= 0x1F) {
-			if (yych == '\t') goto yy447;
-			goto yy193;
+			if (yych == '\t') goto yy448;
+			goto yy194;
 		} else {
-			if (yych <= ' ') goto yy447;
-			if (yych != ')') goto yy193;
+			if (yych <= ' ') goto yy448;
+			if (yych != ')') goto yy194;
 		}
-		YYDEBUG(449, *YYCURSOR);
-		++YYCURSOR;
 		YYDEBUG(450, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(451, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1077 "Zend/zend_language_scanner.l"
 		{
 	return T_STRING_CAST;
 }
-yy451:
-		YYDEBUG(451, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy452;
-		if (yych != 's') goto yy193;
+#line 4859 "Zend/zend_language_scanner.c"
 yy452:
 		YYDEBUG(452, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy453;
-		if (yych != 'e') goto yy193;
+		if (yych == 'S') goto yy453;
+		if (yych != 's') goto yy194;
 yy453:
 		YYDEBUG(453, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy454;
-		if (yych != 't') goto yy193;
+		if (yych == 'E') goto yy454;
+		if (yych != 'e') goto yy194;
 yy454:
 		YYDEBUG(454, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy455;
+		if (yych != 't') goto yy194;
+yy455:
+		YYDEBUG(455, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(455, *YYCURSOR);
+		YYDEBUG(456, *YYCURSOR);
 		if (yych <= 0x1F) {
-			if (yych == '\t') goto yy454;
-			goto yy193;
+			if (yych == '\t') goto yy455;
+			goto yy194;
 		} else {
-			if (yych <= ' ') goto yy454;
-			if (yych != ')') goto yy193;
+			if (yych <= ' ') goto yy455;
+			if (yych != ')') goto yy194;
 		}
-		YYDEBUG(456, *YYCURSOR);
-		++YYCURSOR;
 		YYDEBUG(457, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(458, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1093 "Zend/zend_language_scanner.l"
 		{
 	return T_UNSET_CAST;
 }
-yy458:
-		YYDEBUG(458, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy459;
-		if (yych != 'r') goto yy186;
+#line 4896 "Zend/zend_language_scanner.c"
 yy459:
 		YYDEBUG(459, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'R') goto yy460;
+		if (yych != 'r') goto yy187;
+yy460:
+		YYDEBUG(460, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(460, *YYCURSOR);
+		YYDEBUG(461, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1061 "Zend/zend_language_scanner.l"
 		{
 	return T_VAR;
 }
-yy461:
-		YYDEBUG(461, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'M') goto yy465;
-		if (yych == 'm') goto yy465;
-		goto yy186;
+#line 4914 "Zend/zend_language_scanner.c"
 yy462:
 		YYDEBUG(462, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'W') goto yy463;
-		if (yych != 'w') goto yy186;
+		if (yych == 'M') goto yy466;
+		if (yych == 'm') goto yy466;
+		goto yy187;
 yy463:
 		YYDEBUG(463, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'W') goto yy464;
+		if (yych != 'w') goto yy187;
+yy464:
+		YYDEBUG(464, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(464, *YYCURSOR);
+		YYDEBUG(465, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1053 "Zend/zend_language_scanner.l"
 		{
 	return T_NEW;
 }
-yy465:
-		YYDEBUG(465, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy466;
-		if (yych != 'e') goto yy186;
+#line 4938 "Zend/zend_language_scanner.c"
 yy466:
 		YYDEBUG(466, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy467;
-		if (yych != 's') goto yy186;
+		if (yych == 'E') goto yy467;
+		if (yych != 'e') goto yy187;
 yy467:
 		YYDEBUG(467, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'P') goto yy468;
-		if (yych != 'p') goto yy186;
+		if (yych == 'S') goto yy468;
+		if (yych != 's') goto yy187;
 yy468:
 		YYDEBUG(468, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy469;
-		if (yych != 'a') goto yy186;
+		if (yych == 'P') goto yy469;
+		if (yych != 'p') goto yy187;
 yy469:
 		YYDEBUG(469, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy470;
-		if (yych != 'c') goto yy186;
+		if (yych == 'A') goto yy470;
+		if (yych != 'a') goto yy187;
 yy470:
 		YYDEBUG(470, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy471;
-		if (yych != 'e') goto yy186;
+		if (yych == 'C') goto yy471;
+		if (yych != 'c') goto yy187;
 yy471:
 		YYDEBUG(471, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy472;
+		if (yych != 'e') goto yy187;
+yy472:
+		YYDEBUG(472, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(472, *YYCURSOR);
+		YYDEBUG(473, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1117 "Zend/zend_language_scanner.l"
 		{
 	return T_NAMESPACE;
 }
-yy473:
-		YYDEBUG(473, *YYCURSOR);
-		++YYCURSOR;
+#line 4981 "Zend/zend_language_scanner.c"
+yy474:
 		YYDEBUG(474, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(475, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1045 "Zend/zend_language_scanner.l"
 		{
 	return T_PAAMAYIM_NEKUDOTAYIM;
 }
-yy475:
-		YYDEBUG(475, *YYCURSOR);
+#line 4991 "Zend/zend_language_scanner.c"
+yy476:
+		YYDEBUG(476, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy476:
-		YYDEBUG(476, *YYCURSOR);
+yy477:
+		YYDEBUG(477, *YYCURSOR);
 		if (yych <= '\f') {
-			if (yych <= 0x08) goto yy140;
-			if (yych <= '\n') goto yy475;
-			goto yy140;
+			if (yych <= 0x08) goto yy141;
+			if (yych <= '\n') goto yy476;
+			goto yy141;
 		} else {
-			if (yych <= '\r') goto yy475;
-			if (yych == ' ') goto yy475;
-			goto yy140;
+			if (yych <= '\r') goto yy476;
+			if (yych == ' ') goto yy476;
+			goto yy141;
 		}
-yy477:
-		YYDEBUG(477, *YYCURSOR);
-		++YYCURSOR;
+yy478:
 		YYDEBUG(478, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(479, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1217 "Zend/zend_language_scanner.l"
 		{
 	return T_MINUS_EQUAL;
 }
-yy479:
-		YYDEBUG(479, *YYCURSOR);
-		++YYCURSOR;
+#line 5017 "Zend/zend_language_scanner.c"
+yy480:
 		YYDEBUG(480, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(481, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1185 "Zend/zend_language_scanner.l"
 		{
 	return T_DEC;
 }
-yy481:
-		YYDEBUG(481, *YYCURSOR);
-		++YYCURSOR;
+#line 5027 "Zend/zend_language_scanner.c"
+yy482:
 		YYDEBUG(482, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(483, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1015 "Zend/zend_language_scanner.l"
 		{
 	yy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);
 	return T_OBJECT_OPERATOR;
 }
-yy483:
-		YYDEBUG(483, *YYCURSOR);
+#line 5038 "Zend/zend_language_scanner.c"
+yy484:
+		YYDEBUG(484, *YYCURSOR);
+		++YYCURSOR;
+		YYDEBUG(485, *YYCURSOR);
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 999 "Zend/zend_language_scanner.l"
+		{
+	return T_ANNOTATION;
+}
+#line 5048 "Zend/zend_language_scanner.c"
+yy486:
+		YYDEBUG(486, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'O') {
-			if (yych == 'I') goto yy490;
-			if (yych <= 'N') goto yy186;
-			goto yy491;
+			if (yych == 'I') goto yy493;
+			if (yych <= 'N') goto yy187;
+			goto yy494;
 		} else {
 			if (yych <= 'i') {
-				if (yych <= 'h') goto yy186;
-				goto yy490;
+				if (yych <= 'h') goto yy187;
+				goto yy493;
 			} else {
-				if (yych == 'o') goto yy491;
-				goto yy186;
+				if (yych == 'o') goto yy494;
+				goto yy187;
 			}
 		}
-yy484:
-		YYDEBUG(484, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'B') goto yy485;
-		if (yych != 'b') goto yy186;
-yy485:
-		YYDEBUG(485, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy486;
-		if (yych != 'l') goto yy186;
-yy486:
-		YYDEBUG(486, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy487;
-		if (yych != 'i') goto yy186;
 yy487:
 		YYDEBUG(487, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy488;
-		if (yych != 'c') goto yy186;
+		if (yych == 'B') goto yy488;
+		if (yych != 'b') goto yy187;
 yy488:
 		YYDEBUG(488, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'L') goto yy489;
+		if (yych != 'l') goto yy187;
+yy489:
+		YYDEBUG(489, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'I') goto yy490;
+		if (yych != 'i') goto yy187;
+yy490:
+		YYDEBUG(490, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'C') goto yy491;
+		if (yych != 'c') goto yy187;
+yy491:
+		YYDEBUG(491, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(489, *YYCURSOR);
+		YYDEBUG(492, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1161 "Zend/zend_language_scanner.l"
 		{
 	return T_PUBLIC;
 }
-yy490:
-		YYDEBUG(490, *YYCURSOR);
+#line 5097 "Zend/zend_language_scanner.c"
+yy493:
+		YYDEBUG(493, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'V') {
-			if (yych == 'N') goto yy499;
-			if (yych <= 'U') goto yy186;
-			goto yy500;
+			if (yych == 'N') goto yy502;
+			if (yych <= 'U') goto yy187;
+			goto yy503;
 		} else {
 			if (yych <= 'n') {
-				if (yych <= 'm') goto yy186;
-				goto yy499;
+				if (yych <= 'm') goto yy187;
+				goto yy502;
 			} else {
-				if (yych == 'v') goto yy500;
-				goto yy186;
+				if (yych == 'v') goto yy503;
+				goto yy187;
 			}
 		}
-yy491:
-		YYDEBUG(491, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy492;
-		if (yych != 't') goto yy186;
-yy492:
-		YYDEBUG(492, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy493;
-		if (yych != 'e') goto yy186;
-yy493:
-		YYDEBUG(493, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy494;
-		if (yych != 'c') goto yy186;
 yy494:
 		YYDEBUG(494, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych == 'T') goto yy495;
-		if (yych != 't') goto yy186;
+		if (yych != 't') goto yy187;
 yy495:
 		YYDEBUG(495, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych == 'E') goto yy496;
-		if (yych != 'e') goto yy186;
+		if (yych != 'e') goto yy187;
 yy496:
 		YYDEBUG(496, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'D') goto yy497;
-		if (yych != 'd') goto yy186;
+		if (yych == 'C') goto yy497;
+		if (yych != 'c') goto yy187;
 yy497:
 		YYDEBUG(497, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy498;
+		if (yych != 't') goto yy187;
+yy498:
 		YYDEBUG(498, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_PROTECTED;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy499;
+		if (yych != 'e') goto yy187;
 yy499:
 		YYDEBUG(499, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy505;
-		if (yych == 't') goto yy505;
-		goto yy186;
+		if (yych == 'D') goto yy500;
+		if (yych != 'd') goto yy187;
 yy500:
 		YYDEBUG(500, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy501;
-		if (yych != 'a') goto yy186;
-yy501:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(501, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy502;
-		if (yych != 't') goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1157 "Zend/zend_language_scanner.l"
+		{
+	return T_PROTECTED;
+}
+#line 5156 "Zend/zend_language_scanner.c"
 yy502:
 		YYDEBUG(502, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy503;
-		if (yych != 'e') goto yy186;
+		if (yych == 'T') goto yy508;
+		if (yych == 't') goto yy508;
+		goto yy187;
 yy503:
 		YYDEBUG(503, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy504;
+		if (yych != 'a') goto yy187;
+yy504:
 		YYDEBUG(504, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_PRIVATE;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy505;
+		if (yych != 't') goto yy187;
 yy505:
 		YYDEBUG(505, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy506;
+		if (yych != 'e') goto yy187;
+yy506:
+		YYDEBUG(506, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(506, *YYCURSOR);
+		YYDEBUG(507, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1153 "Zend/zend_language_scanner.l"
 		{
-	return T_PRINT;
+	return T_PRIVATE;
 }
-yy507:
-		YYDEBUG(507, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy512;
-		if (yych == 'o') goto yy512;
-		goto yy186;
+#line 5190 "Zend/zend_language_scanner.c"
 yy508:
 		YYDEBUG(508, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy509;
-		if (yych != 't') goto yy186;
-yy509:
-		YYDEBUG(509, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy510;
-		if (yych != 'o') goto yy186;
-yy510:
-		YYDEBUG(510, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(511, *YYCURSOR);
+		YYDEBUG(509, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 991 "Zend/zend_language_scanner.l"
 		{
-	return T_GOTO;
+	return T_PRINT;
 }
+#line 5203 "Zend/zend_language_scanner.c"
+yy510:
+		YYDEBUG(510, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'O') goto yy515;
+		if (yych == 'o') goto yy515;
+		goto yy187;
+yy511:
+		YYDEBUG(511, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy512;
+		if (yych != 't') goto yy187;
 yy512:
 		YYDEBUG(512, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'B') goto yy513;
-		if (yych != 'b') goto yy186;
+		if (yych == 'O') goto yy513;
+		if (yych != 'o') goto yy187;
 yy513:
 		YYDEBUG(513, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy514;
-		if (yych != 'a') goto yy186;
-yy514:
-		YYDEBUG(514, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy515;
-		if (yych != 'l') goto yy186;
-yy515:
-		YYDEBUG(515, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(516, *YYCURSOR);
+		YYDEBUG(514, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 983 "Zend/zend_language_scanner.l"
 		{
-	return T_GLOBAL;
+	return T_GOTO;
 }
+#line 5232 "Zend/zend_language_scanner.c"
+yy515:
+		YYDEBUG(515, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'B') goto yy516;
+		if (yych != 'b') goto yy187;
+yy516:
+		YYDEBUG(516, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy517;
+		if (yych != 'a') goto yy187;
 yy517:
 		YYDEBUG(517, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == '<') goto yy525;
-		goto yy193;
+		if (yych == 'L') goto yy518;
+		if (yych != 'l') goto yy187;
 yy518:
 		YYDEBUG(518, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy180;
-yy519:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(519, *YYCURSOR);
-		yych = *++YYCURSOR;
-		goto yy178;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1125 "Zend/zend_language_scanner.l"
+		{
+	return T_GLOBAL;
+}
+#line 5260 "Zend/zend_language_scanner.c"
 yy520:
 		YYDEBUG(520, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy521;
-		if (yych != 'e') goto yy186;
+		if (yych == '<') goto yy528;
+		goto yy194;
 yy521:
 		YYDEBUG(521, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy522;
-		if (yych != 'a') goto yy186;
+		goto yy181;
 yy522:
 		YYDEBUG(522, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'K') goto yy523;
-		if (yych != 'k') goto yy186;
+		goto yy179;
 yy523:
 		YYDEBUG(523, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy524;
+		if (yych != 'e') goto yy187;
+yy524:
+		YYDEBUG(524, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy525;
+		if (yych != 'a') goto yy187;
+yy525:
+		YYDEBUG(525, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'K') goto yy526;
+		if (yych != 'k') goto yy187;
+yy526:
+		YYDEBUG(526, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(524, *YYCURSOR);
+		YYDEBUG(527, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 975 "Zend/zend_language_scanner.l"
 		{
 	return T_BREAK;
 }
-yy525:
-		YYDEBUG(525, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == '<') goto yy265;
-		goto yy193;
-yy526:
-		YYDEBUG(526, *YYCURSOR);
+#line 5301 "Zend/zend_language_scanner.c"
+yy528:
+		YYDEBUG(528, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy533;
-		if (yych == 'a') goto yy533;
-		goto yy186;
-yy527:
-		YYDEBUG(527, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy528;
-		if (yych != 'i') goto yy186;
-yy528:
-		YYDEBUG(528, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy529;
-		if (yych != 't') goto yy186;
+		if (yych == '<') goto yy266;
+		goto yy194;
 yy529:
 		YYDEBUG(529, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy530;
-		if (yych != 'c') goto yy186;
+		if (yych == 'A') goto yy536;
+		if (yych == 'a') goto yy536;
+		goto yy187;
 yy530:
 		YYDEBUG(530, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy531;
-		if (yych != 'h') goto yy186;
+		if (yych == 'I') goto yy531;
+		if (yych != 'i') goto yy187;
 yy531:
 		YYDEBUG(531, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy532;
+		if (yych != 't') goto yy187;
+yy532:
 		YYDEBUG(532, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_SWITCH;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'C') goto yy533;
+		if (yych != 'c') goto yy187;
 yy533:
 		YYDEBUG(533, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy534;
-		if (yych != 't') goto yy186;
+		if (yych == 'H') goto yy534;
+		if (yych != 'h') goto yy187;
 yy534:
 		YYDEBUG(534, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy535;
-		if (yych != 'i') goto yy186;
-yy535:
-		YYDEBUG(535, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy536;
-		if (yych != 'c') goto yy186;
-yy536:
-		YYDEBUG(536, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(537, *YYCURSOR);
+		YYDEBUG(535, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 959 "Zend/zend_language_scanner.l"
 		{
-	return T_STATIC;
+	return T_SWITCH;
 }
+#line 5345 "Zend/zend_language_scanner.c"
+yy536:
+		YYDEBUG(536, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy537;
+		if (yych != 't') goto yy187;
+yy537:
+		YYDEBUG(537, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'I') goto yy538;
+		if (yych != 'i') goto yy187;
 yy538:
 		YYDEBUG(538, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy549;
-		if (yych == 's') goto yy549;
-		goto yy186;
+		if (yych == 'C') goto yy539;
+		if (yych != 'c') goto yy187;
 yy539:
 		YYDEBUG(539, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'D') goto yy547;
-		if (yych == 'd') goto yy547;
-		goto yy186;
-yy540:
-		YYDEBUG(540, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy543;
-		if (yych == 'r') goto yy543;
-		goto yy186;
-yy541:
-		YYDEBUG(541, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(542, *YYCURSOR);
+		YYDEBUG(540, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1141 "Zend/zend_language_scanner.l"
 		{
-	return T_AS;
+	return T_STATIC;
 }
+#line 5373 "Zend/zend_language_scanner.c"
+yy541:
+		YYDEBUG(541, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'S') goto yy552;
+		if (yych == 's') goto yy552;
+		goto yy187;
+yy542:
+		YYDEBUG(542, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'D') goto yy550;
+		if (yych == 'd') goto yy550;
+		goto yy187;
 yy543:
 		YYDEBUG(543, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy544;
-		if (yych != 'a') goto yy186;
+		if (yych == 'R') goto yy546;
+		if (yych == 'r') goto yy546;
+		goto yy187;
 yy544:
 		YYDEBUG(544, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'Y') goto yy545;
-		if (yych != 'y') goto yy186;
-yy545:
-		YYDEBUG(545, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(546, *YYCURSOR);
+		YYDEBUG(545, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 955 "Zend/zend_language_scanner.l"
 		{
-	return T_ARRAY;
+	return T_AS;
 }
+#line 5404 "Zend/zend_language_scanner.c"
+yy546:
+		YYDEBUG(546, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy547;
+		if (yych != 'a') goto yy187;
 yy547:
 		YYDEBUG(547, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'Y') goto yy548;
+		if (yych != 'y') goto yy187;
+yy548:
+		YYDEBUG(548, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(548, *YYCURSOR);
+		YYDEBUG(549, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1177 "Zend/zend_language_scanner.l"
 		{
-	return T_LOGICAL_AND;
+	return T_ARRAY;
 }
-yy549:
-		YYDEBUG(549, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy550;
-		if (yych != 't') goto yy186;
+#line 5427 "Zend/zend_language_scanner.c"
 yy550:
 		YYDEBUG(550, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy551;
-		if (yych != 'r') goto yy186;
-yy551:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(551, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy552;
-		if (yych != 'a') goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1269 "Zend/zend_language_scanner.l"
+		{
+	return T_LOGICAL_AND;
+}
+#line 5440 "Zend/zend_language_scanner.c"
 yy552:
 		YYDEBUG(552, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy553;
-		if (yych != 'c') goto yy186;
+		if (yych == 'T') goto yy553;
+		if (yych != 't') goto yy187;
 yy553:
 		YYDEBUG(553, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy554;
-		if (yych != 't') goto yy186;
+		if (yych == 'R') goto yy554;
+		if (yych != 'r') goto yy187;
 yy554:
 		YYDEBUG(554, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy555;
+		if (yych != 'a') goto yy187;
+yy555:
+		YYDEBUG(555, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'C') goto yy556;
+		if (yych != 'c') goto yy187;
+yy556:
+		YYDEBUG(556, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy557;
+		if (yych != 't') goto yy187;
+yy557:
+		YYDEBUG(557, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(555, *YYCURSOR);
+		YYDEBUG(558, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1145 "Zend/zend_language_scanner.l"
 		{
 	return T_ABSTRACT;
 }
-yy556:
-		YYDEBUG(556, *YYCURSOR);
+#line 5478 "Zend/zend_language_scanner.c"
+yy559:
+		YYDEBUG(559, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy557;
-		if (yych != 'i') goto yy186;
-yy557:
-		YYDEBUG(557, *YYCURSOR);
+		if (yych == 'I') goto yy560;
+		if (yych != 'i') goto yy187;
+yy560:
+		YYDEBUG(560, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy558;
-		if (yych != 'l') goto yy186;
-yy558:
-		YYDEBUG(558, *YYCURSOR);
+		if (yych == 'L') goto yy561;
+		if (yych != 'l') goto yy187;
+yy561:
+		YYDEBUG(561, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy559;
-		if (yych != 'e') goto yy186;
-yy559:
-		YYDEBUG(559, *YYCURSOR);
+		if (yych == 'E') goto yy562;
+		if (yych != 'e') goto yy187;
+yy562:
+		YYDEBUG(562, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(560, *YYCURSOR);
+		YYDEBUG(563, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 915 "Zend/zend_language_scanner.l"
 		{
 	return T_WHILE;
 }
-yy561:
-		YYDEBUG(561, *YYCURSOR);
+#line 5506 "Zend/zend_language_scanner.c"
+yy564:
+		YYDEBUG(564, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(562, *YYCURSOR);
+		YYDEBUG(565, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 899 "Zend/zend_language_scanner.l"
 		{
 	return T_IF;
 }
-yy563:
-		YYDEBUG(563, *YYCURSOR);
+#line 5519 "Zend/zend_language_scanner.c"
+yy566:
+		YYDEBUG(566, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'P') goto yy599;
-		if (yych == 'p') goto yy599;
-		goto yy186;
-yy564:
-		YYDEBUG(564, *YYCURSOR);
+		if (yych == 'P') goto yy602;
+		if (yych == 'p') goto yy602;
+		goto yy187;
+yy567:
+		YYDEBUG(567, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'T') {
 			if (yych <= 'C') {
-				if (yych <= 'B') goto yy186;
-				goto yy572;
+				if (yych <= 'B') goto yy187;
+				goto yy575;
 			} else {
-				if (yych <= 'R') goto yy186;
-				if (yych <= 'S') goto yy570;
-				goto yy571;
+				if (yych <= 'R') goto yy187;
+				if (yych <= 'S') goto yy573;
+				goto yy574;
 			}
 		} else {
 			if (yych <= 'r') {
-				if (yych == 'c') goto yy572;
-				goto yy186;
+				if (yych == 'c') goto yy575;
+				goto yy187;
 			} else {
-				if (yych <= 's') goto yy570;
-				if (yych <= 't') goto yy571;
-				goto yy186;
+				if (yych <= 's') goto yy573;
+				if (yych <= 't') goto yy574;
+				goto yy187;
 			}
 		}
-yy565:
-		YYDEBUG(565, *YYCURSOR);
+yy568:
+		YYDEBUG(568, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy566;
-		if (yych != 's') goto yy186;
-yy566:
-		YYDEBUG(566, *YYCURSOR);
+		if (yych == 'S') goto yy569;
+		if (yych != 's') goto yy187;
+yy569:
+		YYDEBUG(569, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy567;
-		if (yych != 'e') goto yy186;
-yy567:
-		YYDEBUG(567, *YYCURSOR);
+		if (yych == 'E') goto yy570;
+		if (yych != 'e') goto yy187;
+yy570:
+		YYDEBUG(570, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy568;
-		if (yych != 't') goto yy186;
-yy568:
-		YYDEBUG(568, *YYCURSOR);
+		if (yych == 'T') goto yy571;
+		if (yych != 't') goto yy187;
+yy571:
+		YYDEBUG(571, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(569, *YYCURSOR);
+		YYDEBUG(572, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1129 "Zend/zend_language_scanner.l"
 		{
 	return T_ISSET;
 }
-yy570:
-		YYDEBUG(570, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy591;
-		if (yych == 't') goto yy591;
-		goto yy186;
-yy571:
-		YYDEBUG(571, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy584;
-		if (yych == 'e') goto yy584;
-		goto yy186;
-yy572:
-		YYDEBUG(572, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy573;
-		if (yych != 'l') goto yy186;
+#line 5575 "Zend/zend_language_scanner.c"
 yy573:
 		YYDEBUG(573, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'U') goto yy574;
-		if (yych != 'u') goto yy186;
+		if (yych == 'T') goto yy594;
+		if (yych == 't') goto yy594;
+		goto yy187;
 yy574:
 		YYDEBUG(574, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'D') goto yy575;
-		if (yych != 'd') goto yy186;
+		if (yych == 'E') goto yy587;
+		if (yych == 'e') goto yy587;
+		goto yy187;
 yy575:
 		YYDEBUG(575, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy576;
-		if (yych != 'e') goto yy186;
+		if (yych == 'L') goto yy576;
+		if (yych != 'l') goto yy187;
 yy576:
 		YYDEBUG(576, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'U') goto yy577;
+		if (yych != 'u') goto yy187;
+yy577:
+		YYDEBUG(577, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'D') goto yy578;
+		if (yych != 'd') goto yy187;
+yy578:
+		YYDEBUG(578, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy579;
+		if (yych != 'e') goto yy187;
+yy579:
+		YYDEBUG(579, *YYCURSOR);
 		++YYCURSOR;
 		if ((yych = *YYCURSOR) <= '^') {
 			if (yych <= '9') {
-				if (yych >= '0') goto yy185;
+				if (yych >= '0') goto yy186;
 			} else {
-				if (yych <= '@') goto yy577;
-				if (yych <= 'Z') goto yy185;
+				if (yych <= '@') goto yy580;
+				if (yych <= 'Z') goto yy186;
 			}
 		} else {
 			if (yych <= '`') {
-				if (yych <= '_') goto yy578;
+				if (yych <= '_') goto yy581;
 			} else {
-				if (yych <= 'z') goto yy185;
-				if (yych >= 0x7F) goto yy185;
+				if (yych <= 'z') goto yy186;
+				if (yych >= 0x7F) goto yy186;
 			}
 		}
-yy577:
-		YYDEBUG(577, *YYCURSOR);
+yy580:
+		YYDEBUG(580, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1101 "Zend/zend_language_scanner.l"
 		{
 	return T_INCLUDE;
 }
-yy578:
-		YYDEBUG(578, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy579;
-		if (yych != 'o') goto yy186;
-yy579:
-		YYDEBUG(579, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy580;
-		if (yych != 'n') goto yy186;
-yy580:
-		YYDEBUG(580, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy581;
-		if (yych != 'c') goto yy186;
+#line 5633 "Zend/zend_language_scanner.c"
 yy581:
 		YYDEBUG(581, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy582;
-		if (yych != 'e') goto yy186;
+		if (yych == 'O') goto yy582;
+		if (yych != 'o') goto yy187;
 yy582:
 		YYDEBUG(582, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'N') goto yy583;
+		if (yych != 'n') goto yy187;
+yy583:
 		YYDEBUG(583, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_INCLUDE_ONCE;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'C') goto yy584;
+		if (yych != 'c') goto yy187;
 yy584:
 		YYDEBUG(584, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy585;
-		if (yych != 'r') goto yy186;
+		if (yych == 'E') goto yy585;
+		if (yych != 'e') goto yy187;
 yy585:
 		YYDEBUG(585, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'F') goto yy586;
-		if (yych != 'f') goto yy186;
-yy586:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(586, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy587;
-		if (yych != 'a') goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1105 "Zend/zend_language_scanner.l"
+		{
+	return T_INCLUDE_ONCE;
+}
+#line 5666 "Zend/zend_language_scanner.c"
 yy587:
 		YYDEBUG(587, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy588;
-		if (yych != 'c') goto yy186;
+		if (yych == 'R') goto yy588;
+		if (yych != 'r') goto yy187;
 yy588:
 		YYDEBUG(588, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy589;
-		if (yych != 'e') goto yy186;
+		if (yych == 'F') goto yy589;
+		if (yych != 'f') goto yy187;
 yy589:
 		YYDEBUG(589, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy590;
+		if (yych != 'a') goto yy187;
+yy590:
 		YYDEBUG(590, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_INTERFACE;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'C') goto yy591;
+		if (yych != 'c') goto yy187;
 yy591:
 		YYDEBUG(591, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy592;
-		if (yych != 'a') goto yy186;
+		if (yych == 'E') goto yy592;
+		if (yych != 'e') goto yy187;
 yy592:
 		YYDEBUG(592, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy593;
-		if (yych != 'n') goto yy186;
-yy593:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(593, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy594;
-		if (yych != 'c') goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1003 "Zend/zend_language_scanner.l"
+		{
+	return T_INTERFACE;
+}
+#line 5704 "Zend/zend_language_scanner.c"
 yy594:
 		YYDEBUG(594, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy595;
-		if (yych != 'e') goto yy186;
+		if (yych == 'A') goto yy595;
+		if (yych != 'a') goto yy187;
 yy595:
 		YYDEBUG(595, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy596;
-		if (yych != 'o') goto yy186;
+		if (yych == 'N') goto yy596;
+		if (yych != 'n') goto yy187;
 yy596:
 		YYDEBUG(596, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'F') goto yy597;
-		if (yych != 'f') goto yy186;
+		if (yych == 'C') goto yy597;
+		if (yych != 'c') goto yy187;
 yy597:
 		YYDEBUG(597, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy598;
+		if (yych != 'e') goto yy187;
+yy598:
 		YYDEBUG(598, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_INSTANCEOF;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'O') goto yy599;
+		if (yych != 'o') goto yy187;
 yy599:
 		YYDEBUG(599, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy600;
-		if (yych != 'l') goto yy186;
+		if (yych == 'F') goto yy600;
+		if (yych != 'f') goto yy187;
 yy600:
 		YYDEBUG(600, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy601;
-		if (yych != 'e') goto yy186;
-yy601:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(601, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'M') goto yy602;
-		if (yych != 'm') goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 951 "Zend/zend_language_scanner.l"
+		{
+	return T_INSTANCEOF;
+}
+#line 5747 "Zend/zend_language_scanner.c"
 yy602:
 		YYDEBUG(602, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy603;
-		if (yych != 'e') goto yy186;
+		if (yych == 'L') goto yy603;
+		if (yych != 'l') goto yy187;
 yy603:
 		YYDEBUG(603, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy604;
-		if (yych != 'n') goto yy186;
+		if (yych == 'E') goto yy604;
+		if (yych != 'e') goto yy187;
 yy604:
 		YYDEBUG(604, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy605;
-		if (yych != 't') goto yy186;
+		if (yych == 'M') goto yy605;
+		if (yych != 'm') goto yy187;
 yy605:
 		YYDEBUG(605, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy606;
-		if (yych != 's') goto yy186;
+		if (yych == 'E') goto yy606;
+		if (yych != 'e') goto yy187;
 yy606:
 		YYDEBUG(606, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'N') goto yy607;
+		if (yych != 'n') goto yy187;
+yy607:
 		YYDEBUG(607, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_IMPLEMENTS;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy608;
+		if (yych != 't') goto yy187;
 yy608:
 		YYDEBUG(608, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy612;
-		if (yych == 'r') goto yy612;
-		goto yy186;
+		if (yych == 'S') goto yy609;
+		if (yych != 's') goto yy187;
 yy609:
 		YYDEBUG(609, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'Y') goto yy610;
-		if (yych != 'y') goto yy186;
-yy610:
-		YYDEBUG(610, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(611, *YYCURSOR);
+		YYDEBUG(610, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1011 "Zend/zend_language_scanner.l"
 		{
-	return T_TRY;
+	return T_IMPLEMENTS;
 }
+#line 5795 "Zend/zend_language_scanner.c"
+yy611:
+		YYDEBUG(611, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'R') goto yy615;
+		if (yych == 'r') goto yy615;
+		goto yy187;
 yy612:
 		YYDEBUG(612, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy613;
-		if (yych != 'o') goto yy186;
+		if (yych == 'Y') goto yy613;
+		if (yych != 'y') goto yy187;
 yy613:
 		YYDEBUG(613, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'W') goto yy614;
-		if (yych != 'w') goto yy186;
-yy614:
-		YYDEBUG(614, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(615, *YYCURSOR);
+		YYDEBUG(614, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 887 "Zend/zend_language_scanner.l"
 		{
-	return T_THROW;
+	return T_TRY;
 }
+#line 5819 "Zend/zend_language_scanner.c"
+yy615:
+		YYDEBUG(615, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'O') goto yy616;
+		if (yych != 'o') goto yy187;
 yy616:
 		YYDEBUG(616, *YYCURSOR);
 		yych = *++YYCURSOR;
+		if (yych == 'W') goto yy617;
+		if (yych != 'w') goto yy187;
+yy617:
+		YYDEBUG(617, *YYCURSOR);
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
+		YYDEBUG(618, *YYCURSOR);
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 895 "Zend/zend_language_scanner.l"
+		{
+	return T_THROW;
+}
+#line 5842 "Zend/zend_language_scanner.c"
+yy619:
+		YYDEBUG(619, *YYCURSOR);
+		yych = *++YYCURSOR;
 		if (yych <= 'T') {
-			if (yych == 'Q') goto yy618;
-			if (yych <= 'S') goto yy186;
+			if (yych == 'Q') goto yy621;
+			if (yych <= 'S') goto yy187;
 		} else {
 			if (yych <= 'q') {
-				if (yych <= 'p') goto yy186;
-				goto yy618;
+				if (yych <= 'p') goto yy187;
+				goto yy621;
 			} else {
-				if (yych != 't') goto yy186;
+				if (yych != 't') goto yy187;
 			}
 		}
-		YYDEBUG(617, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'U') goto yy630;
-		if (yych == 'u') goto yy630;
-		goto yy186;
-yy618:
-		YYDEBUG(618, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'U') goto yy619;
-		if (yych != 'u') goto yy186;
-yy619:
-		YYDEBUG(619, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy620;
-		if (yych != 'i') goto yy186;
-yy620:
 		YYDEBUG(620, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy621;
-		if (yych != 'r') goto yy186;
+		if (yych == 'U') goto yy633;
+		if (yych == 'u') goto yy633;
+		goto yy187;
 yy621:
 		YYDEBUG(621, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy622;
-		if (yych != 'e') goto yy186;
+		if (yych == 'U') goto yy622;
+		if (yych != 'u') goto yy187;
 yy622:
 		YYDEBUG(622, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'I') goto yy623;
+		if (yych != 'i') goto yy187;
+yy623:
+		YYDEBUG(623, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'R') goto yy624;
+		if (yych != 'r') goto yy187;
+yy624:
+		YYDEBUG(624, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy625;
+		if (yych != 'e') goto yy187;
+yy625:
+		YYDEBUG(625, *YYCURSOR);
 		++YYCURSOR;
 		if ((yych = *YYCURSOR) <= '^') {
 			if (yych <= '9') {
-				if (yych >= '0') goto yy185;
+				if (yych >= '0') goto yy186;
 			} else {
-				if (yych <= '@') goto yy623;
-				if (yych <= 'Z') goto yy185;
+				if (yych <= '@') goto yy626;
+				if (yych <= 'Z') goto yy186;
 			}
 		} else {
 			if (yych <= '`') {
-				if (yych <= '_') goto yy624;
+				if (yych <= '_') goto yy627;
 			} else {
-				if (yych <= 'z') goto yy185;
-				if (yych >= 0x7F) goto yy185;
+				if (yych <= 'z') goto yy186;
+				if (yych >= 0x7F) goto yy186;
 			}
 		}
-yy623:
-		YYDEBUG(623, *YYCURSOR);
+yy626:
+		YYDEBUG(626, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1109 "Zend/zend_language_scanner.l"
 		{
 	return T_REQUIRE;
 }
-yy624:
-		YYDEBUG(624, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy625;
-		if (yych != 'o') goto yy186;
-yy625:
-		YYDEBUG(625, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy626;
-		if (yych != 'n') goto yy186;
-yy626:
-		YYDEBUG(626, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy627;
-		if (yych != 'c') goto yy186;
+#line 5907 "Zend/zend_language_scanner.c"
 yy627:
 		YYDEBUG(627, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy628;
-		if (yych != 'e') goto yy186;
+		if (yych == 'O') goto yy628;
+		if (yych != 'o') goto yy187;
 yy628:
 		YYDEBUG(628, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'N') goto yy629;
+		if (yych != 'n') goto yy187;
+yy629:
 		YYDEBUG(629, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_REQUIRE_ONCE;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'C') goto yy630;
+		if (yych != 'c') goto yy187;
 yy630:
 		YYDEBUG(630, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy631;
-		if (yych != 'r') goto yy186;
+		if (yych == 'E') goto yy631;
+		if (yych != 'e') goto yy187;
 yy631:
 		YYDEBUG(631, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy632;
-		if (yych != 'n') goto yy186;
-yy632:
-		YYDEBUG(632, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(633, *YYCURSOR);
+		YYDEBUG(632, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1113 "Zend/zend_language_scanner.l"
 		{
-	return T_RETURN;
+	return T_REQUIRE_ONCE;
 }
+#line 5940 "Zend/zend_language_scanner.c"
+yy633:
+		YYDEBUG(633, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'R') goto yy634;
+		if (yych != 'r') goto yy187;
 yy634:
 		YYDEBUG(634, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych <= 'T') {
-			if (yych <= 'R') goto yy186;
-			if (yych <= 'S') goto yy656;
-			goto yy655;
-		} else {
-			if (yych <= 'r') goto yy186;
-			if (yych <= 's') goto yy656;
-			if (yych <= 't') goto yy655;
-			goto yy186;
-		}
+		if (yych == 'N') goto yy635;
+		if (yych != 'n') goto yy187;
 yy635:
 		YYDEBUG(635, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych <= 'O') {
-			if (yych == 'A') goto yy647;
-			if (yych <= 'N') goto yy186;
-			goto yy648;
-		} else {
-			if (yych <= 'a') {
-				if (yych <= '`') goto yy186;
-				goto yy647;
-			} else {
-				if (yych == 'o') goto yy648;
-				goto yy186;
-			}
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
 		}
-yy636:
 		YYDEBUG(636, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy637;
-		if (yych != 'n') goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 883 "Zend/zend_language_scanner.l"
+		{
+	return T_RETURN;
+}
+#line 5963 "Zend/zend_language_scanner.c"
 yy637:
 		YYDEBUG(637, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'T') {
-			if (yych <= 'R') goto yy186;
-			if (yych >= 'T') goto yy639;
+			if (yych <= 'R') goto yy187;
+			if (yych <= 'S') goto yy659;
+			goto yy658;
 		} else {
-			if (yych <= 'r') goto yy186;
-			if (yych <= 's') goto yy638;
-			if (yych <= 't') goto yy639;
-			goto yy186;
+			if (yych <= 'r') goto yy187;
+			if (yych <= 's') goto yy659;
+			if (yych <= 't') goto yy658;
+			goto yy187;
 		}
 yy638:
 		YYDEBUG(638, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy645;
-		if (yych == 't') goto yy645;
-		goto yy186;
+		if (yych <= 'O') {
+			if (yych == 'A') goto yy650;
+			if (yych <= 'N') goto yy187;
+			goto yy651;
+		} else {
+			if (yych <= 'a') {
+				if (yych <= '`') goto yy187;
+				goto yy650;
+			} else {
+				if (yych == 'o') goto yy651;
+				goto yy187;
+			}
+		}
 yy639:
 		YYDEBUG(639, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy640;
-		if (yych != 'i') goto yy186;
+		if (yych == 'N') goto yy640;
+		if (yych != 'n') goto yy187;
 yy640:
 		YYDEBUG(640, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy641;
-		if (yych != 'n') goto yy186;
+		if (yych <= 'T') {
+			if (yych <= 'R') goto yy187;
+			if (yych >= 'T') goto yy642;
+		} else {
+			if (yych <= 'r') goto yy187;
+			if (yych <= 's') goto yy641;
+			if (yych <= 't') goto yy642;
+			goto yy187;
+		}
 yy641:
 		YYDEBUG(641, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'U') goto yy642;
-		if (yych != 'u') goto yy186;
+		if (yych == 'T') goto yy648;
+		if (yych == 't') goto yy648;
+		goto yy187;
 yy642:
 		YYDEBUG(642, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy643;
-		if (yych != 'e') goto yy186;
+		if (yych == 'I') goto yy643;
+		if (yych != 'i') goto yy187;
 yy643:
 		YYDEBUG(643, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'N') goto yy644;
+		if (yych != 'n') goto yy187;
+yy644:
 		YYDEBUG(644, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_CONTINUE;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'U') goto yy645;
+		if (yych != 'u') goto yy187;
 yy645:
 		YYDEBUG(645, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'E') goto yy646;
+		if (yych != 'e') goto yy187;
+yy646:
+		YYDEBUG(646, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(646, *YYCURSOR);
+		YYDEBUG(647, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 979 "Zend/zend_language_scanner.l"
 		{
-	return T_CONST;
+	return T_CONTINUE;
 }
-yy647:
-		YYDEBUG(647, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy652;
-		if (yych == 's') goto yy652;
-		goto yy186;
+#line 6048 "Zend/zend_language_scanner.c"
 yy648:
 		YYDEBUG(648, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy649;
-		if (yych != 'n') goto yy186;
-yy649:
-		YYDEBUG(649, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy650;
-		if (yych != 'e') goto yy186;
-yy650:
-		YYDEBUG(650, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(651, *YYCURSOR);
+		YYDEBUG(649, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 879 "Zend/zend_language_scanner.l"
 		{
-	return T_CLONE;
+	return T_CONST;
 }
+#line 6061 "Zend/zend_language_scanner.c"
+yy650:
+		YYDEBUG(650, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'S') goto yy655;
+		if (yych == 's') goto yy655;
+		goto yy187;
+yy651:
+		YYDEBUG(651, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'N') goto yy652;
+		if (yych != 'n') goto yy187;
 yy652:
 		YYDEBUG(652, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy653;
-		if (yych != 's') goto yy186;
+		if (yych == 'E') goto yy653;
+		if (yych != 'e') goto yy187;
 yy653:
 		YYDEBUG(653, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
 		YYDEBUG(654, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1057 "Zend/zend_language_scanner.l"
 		{
-	return T_CLASS;
+	return T_CLONE;
 }
+#line 6090 "Zend/zend_language_scanner.c"
 yy655:
 		YYDEBUG(655, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy659;
-		if (yych == 'c') goto yy659;
-		goto yy186;
+		if (yych == 'S') goto yy656;
+		if (yych != 's') goto yy187;
 yy656:
 		YYDEBUG(656, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy657;
-		if (yych != 'e') goto yy186;
-yy657:
-		YYDEBUG(657, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(658, *YYCURSOR);
+		YYDEBUG(657, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 995 "Zend/zend_language_scanner.l"
 		{
-	return T_CASE;
+	return T_CLASS;
 }
+#line 6108 "Zend/zend_language_scanner.c"
+yy658:
+		YYDEBUG(658, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'C') goto yy662;
+		if (yych == 'c') goto yy662;
+		goto yy187;
 yy659:
 		YYDEBUG(659, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy660;
-		if (yych != 'h') goto yy186;
+		if (yych == 'E') goto yy660;
+		if (yych != 'e') goto yy187;
 yy660:
 		YYDEBUG(660, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
 		YYDEBUG(661, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 967 "Zend/zend_language_scanner.l"
 		{
-	return T_CATCH;
+	return T_CASE;
 }
+#line 6132 "Zend/zend_language_scanner.c"
 yy662:
 		YYDEBUG(662, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy679;
-		if (yych == 'n') goto yy679;
-		goto yy186;
+		if (yych == 'H') goto yy663;
+		if (yych != 'h') goto yy187;
 yy663:
 		YYDEBUG(663, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy672;
-		if (yych == 'r') goto yy672;
-		goto yy186;
-yy664:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(664, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy665;
-		if (yych != 'n') goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 891 "Zend/zend_language_scanner.l"
+		{
+	return T_CATCH;
+}
+#line 6150 "Zend/zend_language_scanner.c"
 yy665:
 		YYDEBUG(665, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy666;
-		if (yych != 'c') goto yy186;
+		if (yych == 'N') goto yy682;
+		if (yych == 'n') goto yy682;
+		goto yy187;
 yy666:
 		YYDEBUG(666, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy667;
-		if (yych != 't') goto yy186;
+		if (yych == 'R') goto yy675;
+		if (yych == 'r') goto yy675;
+		goto yy187;
 yy667:
 		YYDEBUG(667, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy668;
-		if (yych != 'i') goto yy186;
+		if (yych == 'N') goto yy668;
+		if (yych != 'n') goto yy187;
 yy668:
 		YYDEBUG(668, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy669;
-		if (yych != 'o') goto yy186;
+		if (yych == 'C') goto yy669;
+		if (yych != 'c') goto yy187;
 yy669:
 		YYDEBUG(669, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy670;
-		if (yych != 'n') goto yy186;
+		if (yych == 'T') goto yy670;
+		if (yych != 't') goto yy187;
 yy670:
 		YYDEBUG(670, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'I') goto yy671;
+		if (yych != 'i') goto yy187;
+yy671:
+		YYDEBUG(671, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'O') goto yy672;
+		if (yych != 'o') goto yy187;
+yy672:
+		YYDEBUG(672, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'N') goto yy673;
+		if (yych != 'n') goto yy187;
+yy673:
+		YYDEBUG(673, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(671, *YYCURSOR);
+		YYDEBUG(674, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 875 "Zend/zend_language_scanner.l"
 		{
 	return T_FUNCTION;
 }
-yy672:
-		YYDEBUG(672, *YYCURSOR);
+#line 6205 "Zend/zend_language_scanner.c"
+yy675:
+		YYDEBUG(675, *YYCURSOR);
 		++YYCURSOR;
 		if ((yych = *YYCURSOR) <= '^') {
 			if (yych <= '@') {
-				if (yych <= '/') goto yy673;
-				if (yych <= '9') goto yy185;
+				if (yych <= '/') goto yy676;
+				if (yych <= '9') goto yy186;
 			} else {
-				if (yych == 'E') goto yy674;
-				if (yych <= 'Z') goto yy185;
+				if (yych == 'E') goto yy677;
+				if (yych <= 'Z') goto yy186;
 			}
 		} else {
 			if (yych <= 'd') {
-				if (yych != '`') goto yy185;
+				if (yych != '`') goto yy186;
 			} else {
-				if (yych <= 'e') goto yy674;
-				if (yych <= 'z') goto yy185;
-				if (yych >= 0x7F) goto yy185;
+				if (yych <= 'e') goto yy677;
+				if (yych <= 'z') goto yy186;
+				if (yych >= 0x7F) goto yy186;
 			}
 		}
-yy673:
-		YYDEBUG(673, *YYCURSOR);
+yy676:
+		YYDEBUG(676, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 927 "Zend/zend_language_scanner.l"
 		{
 	return T_FOR;
 }
-yy674:
-		YYDEBUG(674, *YYCURSOR);
+#line 6233 "Zend/zend_language_scanner.c"
+yy677:
+		YYDEBUG(677, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy675;
-		if (yych != 'a') goto yy186;
-yy675:
-		YYDEBUG(675, *YYCURSOR);
+		if (yych == 'A') goto yy678;
+		if (yych != 'a') goto yy187;
+yy678:
+		YYDEBUG(678, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy676;
-		if (yych != 'c') goto yy186;
-yy676:
-		YYDEBUG(676, *YYCURSOR);
+		if (yych == 'C') goto yy679;
+		if (yych != 'c') goto yy187;
+yy679:
+		YYDEBUG(679, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy677;
-		if (yych != 'h') goto yy186;
-yy677:
-		YYDEBUG(677, *YYCURSOR);
+		if (yych == 'H') goto yy680;
+		if (yych != 'h') goto yy187;
+yy680:
+		YYDEBUG(680, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(678, *YYCURSOR);
+		YYDEBUG(681, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 935 "Zend/zend_language_scanner.l"
 		{
 	return T_FOREACH;
 }
-yy679:
-		YYDEBUG(679, *YYCURSOR);
+#line 6261 "Zend/zend_language_scanner.c"
+yy682:
+		YYDEBUG(682, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy680;
-		if (yych != 'a') goto yy186;
-yy680:
-		YYDEBUG(680, *YYCURSOR);
+		if (yych == 'A') goto yy683;
+		if (yych != 'a') goto yy187;
+yy683:
+		YYDEBUG(683, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy681;
-		if (yych != 'l') goto yy186;
-yy681:
-		YYDEBUG(681, *YYCURSOR);
+		if (yych == 'L') goto yy684;
+		if (yych != 'l') goto yy187;
+yy684:
+		YYDEBUG(684, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(682, *YYCURSOR);
+		YYDEBUG(685, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1149 "Zend/zend_language_scanner.l"
 		{
 	return T_FINAL;
 }
-yy683:
-		YYDEBUG(683, *YYCURSOR);
+#line 6284 "Zend/zend_language_scanner.c"
+yy686:
+		YYDEBUG(686, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yych <= 'F') {
-			if (yych == 'C') goto yy689;
-			if (yych <= 'E') goto yy186;
-			goto yy690;
+			if (yych == 'C') goto yy692;
+			if (yych <= 'E') goto yy187;
+			goto yy693;
 		} else {
 			if (yych <= 'c') {
-				if (yych <= 'b') goto yy186;
-				goto yy689;
+				if (yych <= 'b') goto yy187;
+				goto yy692;
 			} else {
-				if (yych == 'f') goto yy690;
-				goto yy186;
+				if (yych == 'f') goto yy693;
+				goto yy187;
 			}
 		}
-yy684:
-		YYDEBUG(684, *YYCURSOR);
+yy687:
+		YYDEBUG(687, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy687;
-		if (yych == 'e') goto yy687;
-		goto yy186;
-yy685:
-		YYDEBUG(685, *YYCURSOR);
+		if (yych == 'E') goto yy690;
+		if (yych == 'e') goto yy690;
+		goto yy187;
+yy688:
+		YYDEBUG(688, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(686, *YYCURSOR);
+		YYDEBUG(689, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 923 "Zend/zend_language_scanner.l"
 		{
 	return T_DO;
 }
-yy687:
-		YYDEBUG(687, *YYCURSOR);
+#line 6319 "Zend/zend_language_scanner.c"
+yy690:
+		YYDEBUG(690, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(688, *YYCURSOR);
+		YYDEBUG(691, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 871 "Zend/zend_language_scanner.l"
 		{
 	return T_EXIT;
 }
-yy689:
-		YYDEBUG(689, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy696;
-		if (yych == 'l') goto yy696;
-		goto yy186;
-yy690:
-		YYDEBUG(690, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy691;
-		if (yych != 'a') goto yy186;
-yy691:
-		YYDEBUG(691, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'U') goto yy692;
-		if (yych != 'u') goto yy186;
+#line 6332 "Zend/zend_language_scanner.c"
 yy692:
 		YYDEBUG(692, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy693;
-		if (yych != 'l') goto yy186;
+		if (yych == 'L') goto yy699;
+		if (yych == 'l') goto yy699;
+		goto yy187;
 yy693:
 		YYDEBUG(693, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy694;
-		if (yych != 't') goto yy186;
+		if (yych == 'A') goto yy694;
+		if (yych != 'a') goto yy187;
 yy694:
 		YYDEBUG(694, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'U') goto yy695;
+		if (yych != 'u') goto yy187;
+yy695:
 		YYDEBUG(695, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_DEFAULT;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'L') goto yy696;
+		if (yych != 'l') goto yy187;
 yy696:
 		YYDEBUG(696, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy697;
-		if (yych != 'a') goto yy186;
+		if (yych == 'T') goto yy697;
+		if (yych != 't') goto yy187;
 yy697:
 		YYDEBUG(697, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy698;
-		if (yych != 'r') goto yy186;
-yy698:
-		YYDEBUG(698, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy699;
-		if (yych != 'e') goto yy186;
-yy699:
-		YYDEBUG(699, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(700, *YYCURSOR);
+		YYDEBUG(698, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 971 "Zend/zend_language_scanner.l"
 		{
-	return T_DECLARE;
+	return T_DEFAULT;
 }
+#line 6371 "Zend/zend_language_scanner.c"
+yy699:
+		YYDEBUG(699, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy700;
+		if (yych != 'a') goto yy187;
+yy700:
+		YYDEBUG(700, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'R') goto yy701;
+		if (yych != 'r') goto yy187;
 yy701:
 		YYDEBUG(701, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy763;
-		if (yych == 'h') goto yy763;
-		goto yy186;
+		if (yych == 'E') goto yy702;
+		if (yych != 'e') goto yy187;
 yy702:
 		YYDEBUG(702, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy757;
-		if (yych == 's') goto yy757;
-		goto yy186;
-yy703:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(703, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'P') goto yy753;
-		if (yych == 'p') goto yy753;
-		goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 943 "Zend/zend_language_scanner.l"
+		{
+	return T_DECLARE;
+}
+#line 6399 "Zend/zend_language_scanner.c"
 yy704:
 		YYDEBUG(704, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'D') goto yy719;
-		if (yych == 'd') goto yy719;
-		goto yy186;
+		if (yych == 'H') goto yy766;
+		if (yych == 'h') goto yy766;
+		goto yy187;
 yy705:
 		YYDEBUG(705, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy716;
-		if (yych == 'a') goto yy716;
-		goto yy186;
+		if (yych == 'S') goto yy760;
+		if (yych == 's') goto yy760;
+		goto yy187;
 yy706:
 		YYDEBUG(706, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych <= 'T') {
-			if (yych == 'I') goto yy707;
-			if (yych <= 'S') goto yy186;
-			goto yy708;
-		} else {
-			if (yych <= 'i') {
-				if (yych <= 'h') goto yy186;
-			} else {
-				if (yych == 't') goto yy708;
-				goto yy186;
-			}
-		}
+		if (yych == 'P') goto yy756;
+		if (yych == 'p') goto yy756;
+		goto yy187;
 yy707:
 		YYDEBUG(707, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy714;
-		if (yych == 't') goto yy714;
-		goto yy186;
+		if (yych == 'D') goto yy722;
+		if (yych == 'd') goto yy722;
+		goto yy187;
 yy708:
 		YYDEBUG(708, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy709;
-		if (yych != 'e') goto yy186;
+		if (yych == 'A') goto yy719;
+		if (yych == 'a') goto yy719;
+		goto yy187;
 yy709:
 		YYDEBUG(709, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'N') goto yy710;
-		if (yych != 'n') goto yy186;
+		if (yych <= 'T') {
+			if (yych == 'I') goto yy710;
+			if (yych <= 'S') goto yy187;
+			goto yy711;
+		} else {
+			if (yych <= 'i') {
+				if (yych <= 'h') goto yy187;
+			} else {
+				if (yych == 't') goto yy711;
+				goto yy187;
+			}
+		}
 yy710:
 		YYDEBUG(710, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'D') goto yy711;
-		if (yych != 'd') goto yy186;
+		if (yych == 'T') goto yy717;
+		if (yych == 't') goto yy717;
+		goto yy187;
 yy711:
 		YYDEBUG(711, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'S') goto yy712;
-		if (yych != 's') goto yy186;
+		if (yych == 'E') goto yy712;
+		if (yych != 'e') goto yy187;
 yy712:
 		YYDEBUG(712, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'N') goto yy713;
+		if (yych != 'n') goto yy187;
+yy713:
+		YYDEBUG(713, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'D') goto yy714;
+		if (yych != 'd') goto yy187;
+yy714:
+		YYDEBUG(714, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'S') goto yy715;
+		if (yych != 's') goto yy187;
+yy715:
+		YYDEBUG(715, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(713, *YYCURSOR);
+		YYDEBUG(716, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1007 "Zend/zend_language_scanner.l"
 		{
 	return T_EXTENDS;
 }
-yy714:
-		YYDEBUG(714, *YYCURSOR);
+#line 6483 "Zend/zend_language_scanner.c"
+yy717:
+		YYDEBUG(717, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(715, *YYCURSOR);
+		YYDEBUG(718, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 867 "Zend/zend_language_scanner.l"
 		{
 	return T_EXIT;
 }
-yy716:
-		YYDEBUG(716, *YYCURSOR);
+#line 6496 "Zend/zend_language_scanner.c"
+yy719:
+		YYDEBUG(719, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy717;
-		if (yych != 'l') goto yy186;
-yy717:
-		YYDEBUG(717, *YYCURSOR);
+		if (yych == 'L') goto yy720;
+		if (yych != 'l') goto yy187;
+yy720:
+		YYDEBUG(720, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(718, *YYCURSOR);
+		YYDEBUG(721, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1097 "Zend/zend_language_scanner.l"
 		{
 	return T_EVAL;
 }
-yy719:
-		YYDEBUG(719, *YYCURSOR);
+#line 6514 "Zend/zend_language_scanner.c"
+yy722:
+		YYDEBUG(722, *YYCURSOR);
 		yych = *++YYCURSOR;
 		YYDEBUG(-1, yych);
 		switch (yych) {
 		case 'D':
-		case 'd':	goto yy720;
+		case 'd':	goto yy723;
 		case 'F':
-		case 'f':	goto yy721;
+		case 'f':	goto yy724;
 		case 'I':
-		case 'i':	goto yy722;
+		case 'i':	goto yy725;
 		case 'S':
-		case 's':	goto yy723;
+		case 's':	goto yy726;
 		case 'W':
-		case 'w':	goto yy724;
-		default:	goto yy186;
+		case 'w':	goto yy727;
+		default:	goto yy187;
 		}
-yy720:
-		YYDEBUG(720, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy746;
-		if (yych == 'e') goto yy746;
-		goto yy186;
-yy721:
-		YYDEBUG(721, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy738;
-		if (yych == 'o') goto yy738;
-		goto yy186;
-yy722:
-		YYDEBUG(722, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'F') goto yy736;
-		if (yych == 'f') goto yy736;
-		goto yy186;
 yy723:
 		YYDEBUG(723, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'W') goto yy730;
-		if (yych == 'w') goto yy730;
-		goto yy186;
+		if (yych == 'E') goto yy749;
+		if (yych == 'e') goto yy749;
+		goto yy187;
 yy724:
 		YYDEBUG(724, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy725;
-		if (yych != 'h') goto yy186;
+		if (yych == 'O') goto yy741;
+		if (yych == 'o') goto yy741;
+		goto yy187;
 yy725:
 		YYDEBUG(725, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy726;
-		if (yych != 'i') goto yy186;
+		if (yych == 'F') goto yy739;
+		if (yych == 'f') goto yy739;
+		goto yy187;
 yy726:
 		YYDEBUG(726, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy727;
-		if (yych != 'l') goto yy186;
+		if (yych == 'W') goto yy733;
+		if (yych == 'w') goto yy733;
+		goto yy187;
 yy727:
 		YYDEBUG(727, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy728;
-		if (yych != 'e') goto yy186;
+		if (yych == 'H') goto yy728;
+		if (yych != 'h') goto yy187;
 yy728:
 		YYDEBUG(728, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'I') goto yy729;
+		if (yych != 'i') goto yy187;
+yy729:
 		YYDEBUG(729, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_ENDWHILE;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'L') goto yy730;
+		if (yych != 'l') goto yy187;
 yy730:
 		YYDEBUG(730, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'I') goto yy731;
-		if (yych != 'i') goto yy186;
+		if (yych == 'E') goto yy731;
+		if (yych != 'e') goto yy187;
 yy731:
 		YYDEBUG(731, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy732;
-		if (yych != 't') goto yy186;
-yy732:
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
 		YYDEBUG(732, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy733;
-		if (yych != 'c') goto yy186;
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 919 "Zend/zend_language_scanner.l"
+		{
+	return T_ENDWHILE;
+}
+#line 6588 "Zend/zend_language_scanner.c"
 yy733:
 		YYDEBUG(733, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy734;
-		if (yych != 'h') goto yy186;
-yy734:
-		YYDEBUG(734, *YYCURSOR);
+		if (yych == 'I') goto yy734;
+		if (yych != 'i') goto yy187;
+yy734:
+		YYDEBUG(734, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy735;
+		if (yych != 't') goto yy187;
+yy735:
+		YYDEBUG(735, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'C') goto yy736;
+		if (yych != 'c') goto yy187;
+yy736:
+		YYDEBUG(736, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'H') goto yy737;
+		if (yych != 'h') goto yy187;
+yy737:
+		YYDEBUG(737, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(735, *YYCURSOR);
+		YYDEBUG(738, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 963 "Zend/zend_language_scanner.l"
 		{
 	return T_ENDSWITCH;
 }
-yy736:
-		YYDEBUG(736, *YYCURSOR);
+#line 6621 "Zend/zend_language_scanner.c"
+yy739:
+		YYDEBUG(739, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(737, *YYCURSOR);
+		YYDEBUG(740, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 907 "Zend/zend_language_scanner.l"
 		{
 	return T_ENDIF;
 }
-yy738:
-		YYDEBUG(738, *YYCURSOR);
+#line 6634 "Zend/zend_language_scanner.c"
+yy741:
+		YYDEBUG(741, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy739;
-		if (yych != 'r') goto yy186;
-yy739:
-		YYDEBUG(739, *YYCURSOR);
+		if (yych == 'R') goto yy742;
+		if (yych != 'r') goto yy187;
+yy742:
+		YYDEBUG(742, *YYCURSOR);
 		++YYCURSOR;
 		if ((yych = *YYCURSOR) <= '^') {
 			if (yych <= '@') {
-				if (yych <= '/') goto yy740;
-				if (yych <= '9') goto yy185;
+				if (yych <= '/') goto yy743;
+				if (yych <= '9') goto yy186;
 			} else {
-				if (yych == 'E') goto yy741;
-				if (yych <= 'Z') goto yy185;
+				if (yych == 'E') goto yy744;
+				if (yych <= 'Z') goto yy186;
 			}
 		} else {
 			if (yych <= 'd') {
-				if (yych != '`') goto yy185;
+				if (yych != '`') goto yy186;
 			} else {
-				if (yych <= 'e') goto yy741;
-				if (yych <= 'z') goto yy185;
-				if (yych >= 0x7F) goto yy185;
+				if (yych <= 'e') goto yy744;
+				if (yych <= 'z') goto yy186;
+				if (yych >= 0x7F) goto yy186;
 			}
 		}
-yy740:
-		YYDEBUG(740, *YYCURSOR);
+yy743:
+		YYDEBUG(743, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 931 "Zend/zend_language_scanner.l"
 		{
 	return T_ENDFOR;
 }
-yy741:
-		YYDEBUG(741, *YYCURSOR);
+#line 6667 "Zend/zend_language_scanner.c"
+yy744:
+		YYDEBUG(744, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy742;
-		if (yych != 'a') goto yy186;
-yy742:
-		YYDEBUG(742, *YYCURSOR);
+		if (yych == 'A') goto yy745;
+		if (yych != 'a') goto yy187;
+yy745:
+		YYDEBUG(745, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy743;
-		if (yych != 'c') goto yy186;
-yy743:
-		YYDEBUG(743, *YYCURSOR);
+		if (yych == 'C') goto yy746;
+		if (yych != 'c') goto yy187;
+yy746:
+		YYDEBUG(746, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'H') goto yy744;
-		if (yych != 'h') goto yy186;
-yy744:
-		YYDEBUG(744, *YYCURSOR);
+		if (yych == 'H') goto yy747;
+		if (yych != 'h') goto yy187;
+yy747:
+		YYDEBUG(747, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(745, *YYCURSOR);
+		YYDEBUG(748, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 939 "Zend/zend_language_scanner.l"
 		{
 	return T_ENDFOREACH;
 }
-yy746:
-		YYDEBUG(746, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'C') goto yy747;
-		if (yych != 'c') goto yy186;
-yy747:
-		YYDEBUG(747, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'L') goto yy748;
-		if (yych != 'l') goto yy186;
-yy748:
-		YYDEBUG(748, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'A') goto yy749;
-		if (yych != 'a') goto yy186;
+#line 6695 "Zend/zend_language_scanner.c"
 yy749:
 		YYDEBUG(749, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'R') goto yy750;
-		if (yych != 'r') goto yy186;
+		if (yych == 'C') goto yy750;
+		if (yych != 'c') goto yy187;
 yy750:
 		YYDEBUG(750, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy751;
-		if (yych != 'e') goto yy186;
+		if (yych == 'L') goto yy751;
+		if (yych != 'l') goto yy187;
 yy751:
 		YYDEBUG(751, *YYCURSOR);
-		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
-		}
+		yych = *++YYCURSOR;
+		if (yych == 'A') goto yy752;
+		if (yych != 'a') goto yy187;
+yy752:
 		YYDEBUG(752, *YYCURSOR);
-		yyleng = YYCURSOR - SCNG(yy_text);
-		{
-	return T_ENDDECLARE;
-}
+		yych = *++YYCURSOR;
+		if (yych == 'R') goto yy753;
+		if (yych != 'r') goto yy187;
 yy753:
 		YYDEBUG(753, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'T') goto yy754;
-		if (yych != 't') goto yy186;
+		if (yych == 'E') goto yy754;
+		if (yych != 'e') goto yy187;
 yy754:
 		YYDEBUG(754, *YYCURSOR);
-		yych = *++YYCURSOR;
-		if (yych == 'Y') goto yy755;
-		if (yych != 'y') goto yy186;
-yy755:
-		YYDEBUG(755, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
-		YYDEBUG(756, *YYCURSOR);
+		YYDEBUG(755, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 947 "Zend/zend_language_scanner.l"
 		{
-	return T_EMPTY;
+	return T_ENDDECLARE;
 }
+#line 6733 "Zend/zend_language_scanner.c"
+yy756:
+		YYDEBUG(756, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'T') goto yy757;
+		if (yych != 't') goto yy187;
 yy757:
 		YYDEBUG(757, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'E') goto yy758;
-		if (yych != 'e') goto yy186;
+		if (yych == 'Y') goto yy758;
+		if (yych != 'y') goto yy187;
 yy758:
 		YYDEBUG(758, *YYCURSOR);
 		++YYCURSOR;
-		if ((yych = *YYCURSOR) <= '^') {
-			if (yych <= '@') {
-				if (yych <= '/') goto yy759;
-				if (yych <= '9') goto yy185;
-			} else {
-				if (yych == 'I') goto yy760;
-				if (yych <= 'Z') goto yy185;
-			}
-		} else {
-			if (yych <= 'h') {
-				if (yych != '`') goto yy185;
-			} else {
-				if (yych <= 'i') goto yy760;
-				if (yych <= 'z') goto yy185;
-				if (yych >= 0x7F) goto yy185;
-			}
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
 		}
-yy759:
 		YYDEBUG(759, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1133 "Zend/zend_language_scanner.l"
 		{
-	return T_ELSE;
+	return T_EMPTY;
 }
+#line 6756 "Zend/zend_language_scanner.c"
 yy760:
 		YYDEBUG(760, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'F') goto yy761;
-		if (yych != 'f') goto yy186;
+		if (yych == 'E') goto yy761;
+		if (yych != 'e') goto yy187;
 yy761:
 		YYDEBUG(761, *YYCURSOR);
 		++YYCURSOR;
-		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+		if ((yych = *YYCURSOR) <= '^') {
+			if (yych <= '@') {
+				if (yych <= '/') goto yy762;
+				if (yych <= '9') goto yy186;
+			} else {
+				if (yych == 'I') goto yy763;
+				if (yych <= 'Z') goto yy186;
+			}
+		} else {
+			if (yych <= 'h') {
+				if (yych != '`') goto yy186;
+			} else {
+				if (yych <= 'i') goto yy763;
+				if (yych <= 'z') goto yy186;
+				if (yych >= 0x7F) goto yy186;
+			}
 		}
+yy762:
 		YYDEBUG(762, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 911 "Zend/zend_language_scanner.l"
 		{
-	return T_ELSEIF;
+	return T_ELSE;
 }
+#line 6789 "Zend/zend_language_scanner.c"
 yy763:
 		YYDEBUG(763, *YYCURSOR);
 		yych = *++YYCURSOR;
-		if (yych == 'O') goto yy764;
-		if (yych != 'o') goto yy186;
+		if (yych == 'F') goto yy764;
+		if (yych != 'f') goto yy187;
 yy764:
 		YYDEBUG(764, *YYCURSOR);
 		++YYCURSOR;
 		if (yybm[0+(yych = *YYCURSOR)] & 8) {
-			goto yy185;
+			goto yy186;
 		}
 		YYDEBUG(765, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 903 "Zend/zend_language_scanner.l"
+		{
+	return T_ELSEIF;
+}
+#line 6807 "Zend/zend_language_scanner.c"
+yy766:
+		YYDEBUG(766, *YYCURSOR);
+		yych = *++YYCURSOR;
+		if (yych == 'O') goto yy767;
+		if (yych != 'o') goto yy187;
+yy767:
+		YYDEBUG(767, *YYCURSOR);
+		++YYCURSOR;
+		if (yybm[0+(yych = *YYCURSOR)] & 8) {
+			goto yy186;
+		}
+		YYDEBUG(768, *YYCURSOR);
+		yyleng = YYCURSOR - SCNG(yy_text);
+#line 987 "Zend/zend_language_scanner.l"
 		{
 	return T_ECHO;
 }
+#line 6825 "Zend/zend_language_scanner.c"
 	}
 /* *********************************** */
 yyc_ST_LOOKING_FOR_PROPERTY:
@@ -6542,40 +6860,41 @@ yyc_ST_LOOKING_FOR_PROPERTY:
 			 64,  64,  64,  64,  64,  64,  64,  64, 
 			 64,  64,  64,  64,  64,  64,  64,  64, 
 		};
-		YYDEBUG(766, *YYCURSOR);
+		YYDEBUG(769, *YYCURSOR);
 		YYFILL(2);
 		yych = *YYCURSOR;
 		if (yych <= '-') {
 			if (yych <= '\r') {
-				if (yych <= 0x08) goto yy774;
-				if (yych <= '\n') goto yy768;
-				if (yych <= '\f') goto yy774;
+				if (yych <= 0x08) goto yy777;
+				if (yych <= '\n') goto yy771;
+				if (yych <= '\f') goto yy777;
 			} else {
-				if (yych == ' ') goto yy768;
-				if (yych <= ',') goto yy774;
-				goto yy770;
+				if (yych == ' ') goto yy771;
+				if (yych <= ',') goto yy777;
+				goto yy773;
 			}
 		} else {
 			if (yych <= '_') {
-				if (yych <= '@') goto yy774;
-				if (yych <= 'Z') goto yy772;
-				if (yych <= '^') goto yy774;
-				goto yy772;
+				if (yych <= '@') goto yy777;
+				if (yych <= 'Z') goto yy775;
+				if (yych <= '^') goto yy777;
+				goto yy775;
 			} else {
-				if (yych <= '`') goto yy774;
-				if (yych <= 'z') goto yy772;
-				if (yych <= '~') goto yy774;
-				goto yy772;
+				if (yych <= '`') goto yy777;
+				if (yych <= 'z') goto yy775;
+				if (yych <= '~') goto yy777;
+				goto yy775;
 			}
 		}
-yy768:
-		YYDEBUG(768, *YYCURSOR);
+yy771:
+		YYDEBUG(771, *YYCURSOR);
 		++YYCURSOR;
 		yych = *YYCURSOR;
-		goto yy780;
-yy769:
-		YYDEBUG(769, *YYCURSOR);
+		goto yy783;
+yy772:
+		YYDEBUG(772, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1020 "Zend/zend_language_scanner.l"
 		{
 	zendlval->value.str.val = yytext; /* no copying - intentional */
 	zendlval->value.str.len = yyleng;
@@ -6583,66 +6902,73 @@ yy769:
 	HANDLE_NEWLINES(yytext, yyleng);
 	return T_WHITESPACE;
 }
-yy770:
-		YYDEBUG(770, *YYCURSOR);
+#line 6906 "Zend/zend_language_scanner.c"
+yy773:
+		YYDEBUG(773, *YYCURSOR);
 		++YYCURSOR;
-		if ((yych = *YYCURSOR) == '>') goto yy777;
-yy771:
-		YYDEBUG(771, *YYCURSOR);
+		if ((yych = *YYCURSOR) == '>') goto yy780;
+yy774:
+		YYDEBUG(774, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1039 "Zend/zend_language_scanner.l"
 		{
 	yyless(0);
 	yy_pop_state(TSRMLS_C);
 	goto restart;
 }
-yy772:
-		YYDEBUG(772, *YYCURSOR);
+#line 6920 "Zend/zend_language_scanner.c"
+yy775:
+		YYDEBUG(775, *YYCURSOR);
 		++YYCURSOR;
 		yych = *YYCURSOR;
-		goto yy776;
-yy773:
-		YYDEBUG(773, *YYCURSOR);
+		goto yy779;
+yy776:
+		YYDEBUG(776, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1032 "Zend/zend_language_scanner.l"
 		{
 	yy_pop_state(TSRMLS_C);
 	zend_copy_value(zendlval, yytext, yyleng);
 	zendlval->type = IS_STRING;
 	return T_STRING;
 }
-yy774:
-		YYDEBUG(774, *YYCURSOR);
+#line 6936 "Zend/zend_language_scanner.c"
+yy777:
+		YYDEBUG(777, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy771;
-yy775:
-		YYDEBUG(775, *YYCURSOR);
+		goto yy774;
+yy778:
+		YYDEBUG(778, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy776:
-		YYDEBUG(776, *YYCURSOR);
+yy779:
+		YYDEBUG(779, *YYCURSOR);
 		if (yybm[0+yych] & 64) {
-			goto yy775;
+			goto yy778;
 		}
-		goto yy773;
-yy777:
-		YYDEBUG(777, *YYCURSOR);
+		goto yy776;
+yy780:
+		YYDEBUG(780, *YYCURSOR);
 		++YYCURSOR;
-		YYDEBUG(778, *YYCURSOR);
+		YYDEBUG(781, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1028 "Zend/zend_language_scanner.l"
 		{
 	return T_OBJECT_OPERATOR;
 }
-yy779:
-		YYDEBUG(779, *YYCURSOR);
+#line 6961 "Zend/zend_language_scanner.c"
+yy782:
+		YYDEBUG(782, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy780:
-		YYDEBUG(780, *YYCURSOR);
+yy783:
+		YYDEBUG(783, *YYCURSOR);
 		if (yybm[0+yych] & 128) {
-			goto yy779;
+			goto yy782;
 		}
-		goto yy769;
+		goto yy772;
 	}
 /* *********************************** */
 yyc_ST_LOOKING_FOR_VARNAME:
@@ -6681,26 +7007,27 @@ yyc_ST_LOOKING_FOR_VARNAME:
 			128, 128, 128, 128, 128, 128, 128, 128, 
 			128, 128, 128, 128, 128, 128, 128, 128, 
 		};
-		YYDEBUG(781, *YYCURSOR);
+		YYDEBUG(784, *YYCURSOR);
 		YYFILL(2);
 		yych = *YYCURSOR;
 		if (yych <= '_') {
-			if (yych <= '@') goto yy785;
-			if (yych <= 'Z') goto yy783;
-			if (yych <= '^') goto yy785;
+			if (yych <= '@') goto yy788;
+			if (yych <= 'Z') goto yy786;
+			if (yych <= '^') goto yy788;
 		} else {
-			if (yych <= '`') goto yy785;
-			if (yych <= 'z') goto yy783;
-			if (yych <= '~') goto yy785;
+			if (yych <= '`') goto yy788;
+			if (yych <= 'z') goto yy786;
+			if (yych <= '~') goto yy788;
 		}
-yy783:
-		YYDEBUG(783, *YYCURSOR);
+yy786:
+		YYDEBUG(786, *YYCURSOR);
 		++YYCURSOR;
 		yych = *YYCURSOR;
-		goto yy788;
-yy784:
-		YYDEBUG(784, *YYCURSOR);
+		goto yy791;
+yy787:
+		YYDEBUG(787, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1311 "Zend/zend_language_scanner.l"
 		{
 	zend_copy_value(zendlval, yytext, yyleng);
 	zendlval->type = IS_STRING;
@@ -6708,38 +7035,42 @@ yy784:
 	yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);
 	return T_STRING_VARNAME;
 }
-yy785:
-		YYDEBUG(785, *YYCURSOR);
+#line 7039 "Zend/zend_language_scanner.c"
+yy788:
+		YYDEBUG(788, *YYCURSOR);
 		++YYCURSOR;
-		YYDEBUG(786, *YYCURSOR);
+		YYDEBUG(789, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1320 "Zend/zend_language_scanner.l"
 		{
 	yyless(0);
 	yy_pop_state(TSRMLS_C);
 	yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);
 	goto restart;
 }
-yy787:
-		YYDEBUG(787, *YYCURSOR);
+#line 7052 "Zend/zend_language_scanner.c"
+yy790:
+		YYDEBUG(790, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy788:
-		YYDEBUG(788, *YYCURSOR);
+yy791:
+		YYDEBUG(791, *YYCURSOR);
 		if (yybm[0+yych] & 128) {
-			goto yy787;
+			goto yy790;
 		}
-		goto yy784;
+		goto yy787;
 	}
 /* *********************************** */
 yyc_ST_NOWDOC:
-	YYDEBUG(789, *YYCURSOR);
+	YYDEBUG(792, *YYCURSOR);
 	YYFILL(1);
 	yych = *YYCURSOR;
-	YYDEBUG(791, *YYCURSOR);
+	YYDEBUG(794, *YYCURSOR);
 	++YYCURSOR;
-	YYDEBUG(792, *YYCURSOR);
+	YYDEBUG(795, *YYCURSOR);
 	yyleng = YYCURSOR - SCNG(yy_text);
+#line 2154 "Zend/zend_language_scanner.l"
 	{
 	int newline = 0;
 
@@ -6794,6 +7125,7 @@ nowdoc_scan_done:
 	HANDLE_NEWLINES(yytext, yyleng - newline);
 	return T_ENCAPSED_AND_WHITESPACE;
 }
+#line 7129 "Zend/zend_language_scanner.c"
 /* *********************************** */
 yyc_ST_VAR_OFFSET:
 	{
@@ -6831,68 +7163,69 @@ yyc_ST_VAR_OFFSET:
 			 32,  32,  32,  32,  32,  32,  32,  32, 
 			 32,  32,  32,  32,  32,  32,  32,  32, 
 		};
-		YYDEBUG(793, *YYCURSOR);
+		YYDEBUG(796, *YYCURSOR);
 		YYFILL(3);
 		yych = *YYCURSOR;
 		if (yych <= '/') {
 			if (yych <= ' ') {
 				if (yych <= '\f') {
-					if (yych <= 0x08) goto yy807;
-					if (yych <= '\n') goto yy803;
-					goto yy807;
+					if (yych <= 0x08) goto yy810;
+					if (yych <= '\n') goto yy806;
+					goto yy810;
 				} else {
-					if (yych <= '\r') goto yy803;
-					if (yych <= 0x1F) goto yy807;
-					goto yy803;
+					if (yych <= '\r') goto yy806;
+					if (yych <= 0x1F) goto yy810;
+					goto yy806;
 				}
 			} else {
 				if (yych <= '$') {
-					if (yych <= '"') goto yy802;
-					if (yych <= '#') goto yy803;
-					goto yy798;
+					if (yych <= '"') goto yy805;
+					if (yych <= '#') goto yy806;
+					goto yy801;
 				} else {
-					if (yych == '\'') goto yy803;
-					goto yy802;
+					if (yych == '\'') goto yy806;
+					goto yy805;
 				}
 			}
 		} else {
 			if (yych <= '\\') {
 				if (yych <= '@') {
-					if (yych <= '0') goto yy795;
-					if (yych <= '9') goto yy797;
-					goto yy802;
+					if (yych <= '0') goto yy798;
+					if (yych <= '9') goto yy800;
+					goto yy805;
 				} else {
-					if (yych <= 'Z') goto yy805;
-					if (yych <= '[') goto yy802;
-					goto yy803;
+					if (yych <= 'Z') goto yy808;
+					if (yych <= '[') goto yy805;
+					goto yy806;
 				}
 			} else {
 				if (yych <= '_') {
-					if (yych <= ']') goto yy800;
-					if (yych <= '^') goto yy802;
-					goto yy805;
+					if (yych <= ']') goto yy803;
+					if (yych <= '^') goto yy805;
+					goto yy808;
 				} else {
-					if (yych <= '`') goto yy802;
-					if (yych <= 'z') goto yy805;
-					if (yych <= '~') goto yy802;
-					goto yy805;
+					if (yych <= '`') goto yy805;
+					if (yych <= 'z') goto yy808;
+					if (yych <= '~') goto yy805;
+					goto yy808;
 				}
 			}
 		}
-yy795:
-		YYDEBUG(795, *YYCURSOR);
+yy798:
+		YYDEBUG(798, *YYCURSOR);
 		yyaccept = 0;
 		yych = *(YYMARKER = ++YYCURSOR);
 		if (yych <= 'W') {
-			if (yych <= '/') goto yy796;
-			if (yych <= '9') goto yy818;
+			if (yych <= '/') goto yy799;
+			if (yych <= '9') goto yy821;
 		} else {
-			if (yych <= 'X') goto yy816;
-			if (yych == 'x') goto yy816;
+			if (yych <= 'X') goto yy819;
+			if (yych == 'x') goto yy819;
 		}
-yy796:
-		YYDEBUG(796, *YYCURSOR);
+yy799:
+		YYDEBUG(799, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1370 "Zend/zend_language_scanner.l"
 		{ /* Offset could be treated as a long */
 	if (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {
 		zendlval->value.lval = strtol(yytext, NULL, 10);
@@ -6904,71 +7237,81 @@ yy796:
 	}
 	return T_NUM_STRING;
 }
-yy797:
-		YYDEBUG(797, *YYCURSOR);
+#line 7241 "Zend/zend_language_scanner.c"
+yy800:
+		YYDEBUG(800, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy815;
-yy798:
-		YYDEBUG(798, *YYCURSOR);
+		goto yy818;
+yy801:
+		YYDEBUG(801, *YYCURSOR);
 		++YYCURSOR;
 		if ((yych = *YYCURSOR) <= '_') {
-			if (yych <= '@') goto yy799;
-			if (yych <= 'Z') goto yy811;
-			if (yych >= '_') goto yy811;
+			if (yych <= '@') goto yy802;
+			if (yych <= 'Z') goto yy814;
+			if (yych >= '_') goto yy814;
 		} else {
-			if (yych <= '`') goto yy799;
-			if (yych <= 'z') goto yy811;
-			if (yych >= 0x7F) goto yy811;
+			if (yych <= '`') goto yy802;
+			if (yych <= 'z') goto yy814;
+			if (yych >= 0x7F) goto yy814;
 		}
-yy799:
-		YYDEBUG(799, *YYCURSOR);
+yy802:
+		YYDEBUG(802, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1680 "Zend/zend_language_scanner.l"
 		{
 	/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */
 	return yytext[0];
 }
-yy800:
-		YYDEBUG(800, *YYCURSOR);
+#line 7266 "Zend/zend_language_scanner.c"
+yy803:
+		YYDEBUG(803, *YYCURSOR);
 		++YYCURSOR;
-		YYDEBUG(801, *YYCURSOR);
+		YYDEBUG(804, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1675 "Zend/zend_language_scanner.l"
 		{
 	yy_pop_state(TSRMLS_C);
 	return ']';
 }
-yy802:
-		YYDEBUG(802, *YYCURSOR);
+#line 7277 "Zend/zend_language_scanner.c"
+yy805:
+		YYDEBUG(805, *YYCURSOR);
 		yych = *++YYCURSOR;
-		goto yy799;
-yy803:
-		YYDEBUG(803, *YYCURSOR);
+		goto yy802;
+yy806:
+		YYDEBUG(806, *YYCURSOR);
 		++YYCURSOR;
-		YYDEBUG(804, *YYCURSOR);
+		YYDEBUG(807, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1685 "Zend/zend_language_scanner.l"
 		{
 	/* Invalid rule to return a more explicit parse error with proper line number */
 	yyless(0);
 	yy_pop_state(TSRMLS_C);
 	return T_ENCAPSED_AND_WHITESPACE;
 }
-yy805:
-		YYDEBUG(805, *YYCURSOR);
+#line 7294 "Zend/zend_language_scanner.c"
+yy808:
+		YYDEBUG(808, *YYCURSOR);
 		++YYCURSOR;
 		yych = *YYCURSOR;
-		goto yy810;
-yy806:
-		YYDEBUG(806, *YYCURSOR);
+		goto yy813;
+yy809:
+		YYDEBUG(809, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1692 "Zend/zend_language_scanner.l"
 		{
 	zend_copy_value(zendlval, yytext, yyleng);
 	zendlval->type = IS_STRING;
 	return T_STRING;
 }
-yy807:
-		YYDEBUG(807, *YYCURSOR);
+#line 7309 "Zend/zend_language_scanner.c"
+yy810:
+		YYDEBUG(810, *YYCURSOR);
 		++YYCURSOR;
-		YYDEBUG(808, *YYCURSOR);
+		YYDEBUG(811, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 2210 "Zend/zend_language_scanner.l"
 		{
 	if (YYCURSOR > YYLIMIT) {
 		return 0;
@@ -6977,94 +7320,100 @@ yy807:
 	zend_error(E_COMPILE_WARNING,"Unexpected character in input:  '%c' (ASCII=%d) state=%d", yytext[0], yytext[0], YYSTATE);
 	goto restart;
 }
-yy809:
-		YYDEBUG(809, *YYCURSOR);
+#line 7324 "Zend/zend_language_scanner.c"
+yy812:
+		YYDEBUG(812, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy810:
-		YYDEBUG(810, *YYCURSOR);
+yy813:
+		YYDEBUG(813, *YYCURSOR);
 		if (yybm[0+yych] & 32) {
-			goto yy809;
+			goto yy812;
 		}
-		goto yy806;
-yy811:
-		YYDEBUG(811, *YYCURSOR);
+		goto yy809;
+yy814:
+		YYDEBUG(814, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(812, *YYCURSOR);
+		YYDEBUG(815, *YYCURSOR);
 		if (yych <= '^') {
 			if (yych <= '9') {
-				if (yych >= '0') goto yy811;
+				if (yych >= '0') goto yy814;
 			} else {
-				if (yych <= '@') goto yy813;
-				if (yych <= 'Z') goto yy811;
+				if (yych <= '@') goto yy816;
+				if (yych <= 'Z') goto yy814;
 			}
 		} else {
 			if (yych <= '`') {
-				if (yych <= '_') goto yy811;
+				if (yych <= '_') goto yy814;
 			} else {
-				if (yych <= 'z') goto yy811;
-				if (yych >= 0x7F) goto yy811;
+				if (yych <= 'z') goto yy814;
+				if (yych >= 0x7F) goto yy814;
 			}
 		}
-yy813:
-		YYDEBUG(813, *YYCURSOR);
+yy816:
+		YYDEBUG(816, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1669 "Zend/zend_language_scanner.l"
 		{
 	zend_copy_value(zendlval, (yytext+1), (yyleng-1));
 	zendlval->type = IS_STRING;
 	return T_VARIABLE;
 }
-yy814:
-		YYDEBUG(814, *YYCURSOR);
+#line 7366 "Zend/zend_language_scanner.c"
+yy817:
+		YYDEBUG(817, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-yy815:
-		YYDEBUG(815, *YYCURSOR);
+yy818:
+		YYDEBUG(818, *YYCURSOR);
 		if (yybm[0+yych] & 64) {
-			goto yy814;
+			goto yy817;
 		}
-		goto yy796;
-yy816:
-		YYDEBUG(816, *YYCURSOR);
+		goto yy799;
+yy819:
+		YYDEBUG(819, *YYCURSOR);
 		yych = *++YYCURSOR;
 		if (yybm[0+yych] & 128) {
-			goto yy821;
+			goto yy824;
 		}
-		YYDEBUG(817, *YYCURSOR);
+		YYDEBUG(820, *YYCURSOR);
 		YYCURSOR = YYMARKER;
-		goto yy796;
-yy818:
-		YYDEBUG(818, *YYCURSOR);
+		goto yy799;
+yy821:
+		YYDEBUG(821, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(819, *YYCURSOR);
-		if (yych <= '/') goto yy820;
-		if (yych <= '9') goto yy818;
-yy820:
-		YYDEBUG(820, *YYCURSOR);
+		YYDEBUG(822, *YYCURSOR);
+		if (yych <= '/') goto yy823;
+		if (yych <= '9') goto yy821;
+yy823:
+		YYDEBUG(823, *YYCURSOR);
 		yyleng = YYCURSOR - SCNG(yy_text);
+#line 1382 "Zend/zend_language_scanner.l"
 		{ /* Offset must be treated as a string */
 	zendlval->value.str.val = (char *)estrndup(yytext, yyleng);
 	zendlval->value.str.len = yyleng;
 	zendlval->type = IS_STRING;
 	return T_NUM_STRING;
 }
-yy821:
-		YYDEBUG(821, *YYCURSOR);
+#line 7405 "Zend/zend_language_scanner.c"
+yy824:
+		YYDEBUG(824, *YYCURSOR);
 		++YYCURSOR;
 		YYFILL(1);
 		yych = *YYCURSOR;
-		YYDEBUG(822, *YYCURSOR);
+		YYDEBUG(825, *YYCURSOR);
 		if (yybm[0+yych] & 128) {
-			goto yy821;
+			goto yy824;
 		}
-		goto yy820;
+		goto yy823;
 	}
 }
+#line 2219 "Zend/zend_language_scanner.l"
 
 }
diff --git a/Zend/zend_language_scanner.l b/Zend/zend_language_scanner.l
index 5252a65..95c0f2e 100644
--- a/Zend/zend_language_scanner.l
+++ b/Zend/zend_language_scanner.l
@@ -996,6 +996,10 @@ NEWLINE ("\r"|"\n"|"\r\n")
 	return T_CLASS;
 }
 
+<ST_IN_SCRIPTING>"@@" {
+	return T_ANNOTATION;
+}
+
 <ST_IN_SCRIPTING>"interface" {
 	return T_INTERFACE;
 }
diff --git a/Zend/zend_language_scanner_defs.h b/Zend/zend_language_scanner_defs.h
index 17956ff..889cc33 100644
--- a/Zend/zend_language_scanner_defs.h
+++ b/Zend/zend_language_scanner_defs.h
@@ -1,4 +1,5 @@
-/* Generated by re2c 0.13.5 on Wed Jan  5 17:41:40 2011 */
+/* Generated by re2c 0.13.5 on Sat Mar 12 15:52:58 2011 */
+#line 3 "Zend/zend_language_scanner_defs.h"
 
 enum YYCONDTYPE {
 	yycST_IN_SCRIPTING,
diff --git a/ext/reflection/php_reflection.c b/ext/reflection/php_reflection.c
index 018e262..5c7b8eb 100644
--- a/ext/reflection/php_reflection.c
+++ b/ext/reflection/php_reflection.c
@@ -45,6 +45,9 @@
 # undef getParameters
 #endif
 
+/* AnoForPHP Patch */
+void getAnnotationsHelper(zval *return_value, HashTable *annotations);
+
 /* Class entry pointers */
 PHPAPI zend_class_entry *reflector_ptr;
 PHPAPI zend_class_entry *reflection_exception_ptr;
@@ -1921,6 +1924,22 @@ ZEND_METHOD(reflection_function, getParameters)
 }
 /* }}} */
 
+/* AnoForPHP Patch */
+/* {{{ proto public array ReflectionParameter::getAnnotations()
+   Returns an associative array containing this parameter's annotations */
+ZEND_METHOD(reflection_parameter, getAnnotations)
+{
+	reflection_object *intern;
+	parameter_reference *param;
+
+	if (zend_parse_parameters_none() == FAILURE) {
+		return;
+	}
+	GET_REFLECTION_OBJECT_PTR(param);
+	getAnnotationsHelper(return_value, param->arg_info->annotations);
+}
+/* }}} */
+
 /* {{{ proto public ReflectionExtension|NULL ReflectionFunction::getExtension()
    Returns NULL or the extension the function belongs to */
 ZEND_METHOD(reflection_function, getExtension)
@@ -2916,6 +2935,22 @@ ZEND_METHOD(reflection_method, isDestructor)
 }
 /* }}} */
 
+/* AnoForPHP Patch */
+/* {{{ proto public array ReflectionMethod::getAnnotations()
+   Returns an associative array containing this method's annotations */
+ZEND_METHOD(reflection_method, getAnnotations)
+{
+	reflection_object *intern;
+	zend_function *mptr;
+
+	if (zend_parse_parameters_none() == FAILURE) {
+		return;
+	}
+	GET_REFLECTION_OBJECT_PTR(mptr);
+	getAnnotationsHelper(return_value, mptr->op_array.annotations);
+}
+/* }}} */
+
 /* {{{ proto public int ReflectionMethod::getModifiers()
    Returns a bitfield of the access modifiers for this method */
 ZEND_METHOD(reflection_method, getModifiers)
@@ -3731,6 +3766,22 @@ ZEND_METHOD(reflection_class, hasConstant)
 }
 /* }}} */
 
+/* AnoForPHP Patch */
+/* {{{ proto public array ReflectionClass::getAnnotations()
+   Returns an associative array containing this class' annotations */
+ZEND_METHOD(reflection_class, getAnnotations)
+{
+	zend_class_entry *ce;
+	reflection_object *intern;
+
+	if (zend_parse_parameters_none() == FAILURE) {
+		return;
+	}
+	GET_REFLECTION_OBJECT_PTR(ce);
+	getAnnotationsHelper(return_value, ce->annotations);
+}
+/* }}} */
+
 /* {{{ proto public array ReflectionClass::getConstants()
    Returns an associative array containing this class' constants and their values */
 ZEND_METHOD(reflection_class, getConstants)
@@ -4538,6 +4589,22 @@ ZEND_METHOD(reflection_property, getModifiers)
 }
 /* }}} */
 
+/* AnoForPHP Patch */
+/* {{{ proto public int ReflectionProperty::getAnnotations()
+   Returns a bitfield of the access annotations for this property */
+ZEND_METHOD(reflection_property, getAnnotations)
+{
+	reflection_object *intern;
+	property_reference *ref;
+
+	if (zend_parse_parameters_none() == FAILURE) {
+		return;
+	}
+	GET_REFLECTION_OBJECT_PTR(ref);
+	getAnnotationsHelper(return_value, ref->prop.annotations);
+}
+/* }}} */
+
 /* {{{ proto public mixed ReflectionProperty::getValue([stdclass object])
    Returns this property's value */
 ZEND_METHOD(reflection_property, getValue)
@@ -5055,6 +5122,51 @@ ZEND_METHOD(reflection_extension, info)
 }
 /* }}} */
 
+/* AnoForPHP Patch */
+void
+getAnnotationsHelper(zval *return_value, HashTable *annotations)
+{
+	zval *arguments;
+	HashTable *annotation_arguments;
+    HashPosition pointer, pointer2;
+    zend_annotation_entry annotation;
+    char *argname;
+    int argname_len;
+    zval *value;
+    int argvalue_len;
+    ulong index;
+
+	array_init(return_value);
+	for(
+		zend_hash_internal_pointer_reset_ex(annotations, &pointer);
+		zend_hash_get_current_data_ex(annotations, (void**) &annotation_arguments, &pointer) == SUCCESS;
+		zend_hash_move_forward_ex(annotations, &pointer)
+	) {
+		zend_hash_get_current_key_ex(
+			annotations, &annotation.name,
+			&annotation.name_length, &index, 0, &pointer
+		);
+		ALLOC_INIT_ZVAL(arguments);
+		array_init(arguments);
+		for(
+			zend_hash_internal_pointer_reset_ex(annotation_arguments, &pointer2);
+			zend_hash_get_current_data_ex(annotation_arguments, (void**) &value, &pointer2) == SUCCESS;
+			zend_hash_move_forward_ex(annotation_arguments, &pointer2)
+		) {
+			zend_hash_get_current_key_ex(
+				annotation_arguments, &argname,
+				&argname_len, &index, 0, &pointer2
+			);
+			if (Z_TYPE_P(value) == IS_NULL) {
+				add_assoc_null(arguments, argname);
+			} else {
+				add_assoc_string(arguments, argname, Z_STRVAL_P(value), 1);
+			}
+		}
+		add_assoc_zval(return_value, annotation.name, arguments);
+    }
+}
+
 /* {{{ method tables */
 static const zend_function_entry reflection_exception_functions[] = {
 	{NULL, NULL, NULL}
@@ -5175,6 +5287,7 @@ static const zend_function_entry reflection_method_functions[] = {
 	ZEND_ME(reflection_method, isConstructor, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_method, isDestructor, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_method, getModifiers, arginfo_reflection__void, 0)
+	ZEND_ME(reflection_method, getAnnotations, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_method, invoke, arginfo_reflection_method_invoke, 0)
 	ZEND_ME(reflection_method, invokeArgs, arginfo_reflection_method_invokeArgs, 0)
 	ZEND_ME(reflection_method, getDeclaringClass, arginfo_reflection__void, 0)
@@ -5277,6 +5390,7 @@ static const zend_function_entry reflection_class_functions[] = {
 	ZEND_ME(reflection_class, getProperties, arginfo_reflection_class_getProperties, 0)
 	ZEND_ME(reflection_class, hasConstant, arginfo_reflection_class_hasConstant, 0)
 	ZEND_ME(reflection_class, getConstants, arginfo_reflection__void, 0)
+	ZEND_ME(reflection_class, getAnnotations, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_class, getConstant, arginfo_reflection_class_getConstant, 0)
 	ZEND_ME(reflection_class, getInterfaces, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_class, getInterfaceNames, arginfo_reflection__void, 0)
@@ -5358,6 +5472,7 @@ static const zend_function_entry reflection_property_functions[] = {
 	ZEND_ME(reflection_property, isStatic, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_property, isDefault, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_property, getModifiers, arginfo_reflection__void, 0)
+	ZEND_ME(reflection_property, getAnnotations, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_property, getDeclaringClass, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_property, getDocComment, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_property, setAccessible, arginfo_reflection_property_setAccessible, 0)
@@ -5384,6 +5499,7 @@ static const zend_function_entry reflection_parameter_functions[] = {
 	ZEND_ME(reflection_parameter, isPassedByReference, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_parameter, getDeclaringFunction, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_parameter, getDeclaringClass, arginfo_reflection__void, 0)
+	ZEND_ME(reflection_parameter, getAnnotations, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_parameter, getClass, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_parameter, isArray, arginfo_reflection__void, 0)
 	ZEND_ME(reflection_parameter, allowsNull, arginfo_reflection__void, 0)
diff --git a/testannotation.php b/testannotation.php
new file mode 100644
index 0000000..98b32ba
--- /dev/null
+++ b/testannotation.php
@@ -0,0 +1,53 @@
+<?php
+@@AnA
+@@AnB(a="/")
+@@Annotation("foo", bar="foo")
+class someClass
+{
+	const aconstant = 1;
+
+	private $something;
+	@@SomePropertyAnnotation
+	@@SomePropertyAnnotation(a1="b1")
+	@@SomeProperty2Annotation("a2")
+	@@SomeProperty3Annotation(a3="\"/!@#$%^&*()b",c3="d3")
+	private $something2;
+
+	@@SomeMethod(a1="b1")
+	@@SomeMethod("a2")
+	@@SomeMethod(a3="\"/!@#$%^&*()b",c3="d3")
+	public function a(@@AnAnnotation(somearg="yeah") $a, $b, @@An1 @@An2 $c)
+	{
+	}
+
+	public function b($a)
+	{
+	}
+}
+
+class someClass2
+{
+	const aconstant = 1;
+	public function a()
+	{
+	}
+}
+
+
+$a = new ReflectionClass('someClass');
+var_dump($a->getAnnotations());
+foreach ($a->getProperties() as $property) {
+	echo "Property: " . $property->getName() . "\n";
+	var_dump($property->getAnnotations());
+}
+
+foreach ($a->getMethods() as $method) {
+	echo "Method: " . $method->getName() . "\n";
+	var_dump($method->getAnnotations());
+	foreach ($method->getParameters() as $argument) {
+		echo "Argument: " . $argument->getName() . "\n";
+		var_dump($argument->getAnnotations());
+	}
+}
+$a = new ReflectionClass('someClass2');
+var_dump($a->getAnnotations());
